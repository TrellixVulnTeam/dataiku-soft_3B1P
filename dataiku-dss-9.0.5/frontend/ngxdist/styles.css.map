{"version":3,"sources":["./node_modules/@angular/material/_theming.scss","/home/dkubuild/releases/9.0.5/initial-build/tmp8hdgqtlz/dip/src/main/platypus/static/dataiku/css/fonts.less","/home/dkubuild/releases/9.0.5/initial-build/tmp8hdgqtlz/dip/src/main/platypus/static/dataiku/css/dku-material-theme.less","/home/dkubuild/releases/9.0.5/initial-build/tmp8hdgqtlz/dip/src/main/platypus/static/dataiku/css/colors.less","./src/static/css/modals.less","./src/static/css/typography.less","./src/static/css/errors.less"],"names":[],"mappings":"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xDA,iBAAsC,qBC2DtC,CD1DA,YAAsC,wBC6DtC,CD5DA,OAAsC,aC+DtC,CD3DI,qBAAkC,aC8DtC,CD7DI,4CAAkC,aCiEtC,CDhEI,iDAAkC,aCoEtC,CDnEI,sEACkC,aCsEtC,CDrEI,8DAEkC,aCuEtC,CDtEI,yBAAkC,aCyEtC,CDxEI,kGAIkC,aC0EtC,CDzEI,kEAAkC,aC8EtC,CD7EI,0BAAkC,aCgFtC,CD7EI,0EAAkC,UCsFtC,CDrFI,6CAAkC,aCyFtC,CDxFI,uBAAkC,aC2FtC,CD1FI,wBAAkC,UC6FtC,CD5FI,uBAAkC,aC+FtC,CD9FI,8BAAkC,aCiGtC,CDhGI,8BAAkC,aCmGtC,CDlGI,kCAAkC,aCqGtC,CDpGI,mCAAkC,aCuGtC,CDtGI,qCAAkC,aCyGtC,CDxGI,mCAAkC,aC2GtC,CD1GI,oCAAkC,aC6GtC,CD5GI,kCAAkC,aC+GtC,CD9GI,qCAAkC,aCiHtC,CDhHI,qCAAkC,aCmHtC,CDlHI,oCAAkC,aCqHtC,CDpHI,mCAAkC,aCuHtC,CDtHI,4BAAkC,aCyHtC,CDxHI,kCAAkC,aC2HtC,CD1HI,6MAMkC,aC4HtC,CD3HI,wBAAkC,aC8HtC,CD1HI,sIAEkC,aCgItC,CD/HI,+BAAkC,aCkItC,CDjII,sBAAkC,aCoItC,CDnII,wBAAkC,UCsItC,CDrII,uBAAkC,UCwItC,CDvII,qBAAkC,aC0ItC,CDzII,2BAAkC,UC4ItC,CD3II,6BAAkC,aC8ItC,CD7II,iCAAkC,aCgJtC,CD7IA,qBACI,qBACA,kBC+IJ,CD7II,0BAAkC,wBCgJtC,CD/II,sDAAkC,wBCmJtC,CDlJI,2DAAkC,wBCsJtC,CDrJI,gFACkC,wBCwJtC,CDvJI,2BAAkC,wBC0JtC,CDzJI,wEACkC,wBC4JtC,CD3JI,8BAAkC,wBC8JtC,CD7JI,sHAGkC,wBCgKtC,CD/JI,iFAAkC,wBCoKtC,CDnKI,4DAAkC,wBCuKtC,CDtKI,6DAAkC,qBC0KtC,CDzKI,uDAAkC,wBC6KtC,CD5KI,4BAAkC,wBC+KtC,CD9KI,mCAAkC,wBCiLtC,CDhLI,iCAAkC,wBCmLtC,CDlLI,uCAAkC,wBCqLtC,CD7KI,8VACkC,wBCyLtC,CDxLI,mCAAkC,wBC2LtC,CD1LI,uCAAkC,wBC6LtC,CD5LI,wCAAkC,wBC+LtC,CD9LI,0CAAkC,wBCiMtC,CDhMI,wCAAkC,wBCmMtC,CDlMI,yCAAkC,wBCqMtC,CDpMI,uCAAkC,wBCuMtC,CDtMI,0CAAkC,wBCyMtC,CDxMI,0CAAkC,wBC2MtC,CD1MI,yCAAkC,wBC6MtC,CD5MI,wCAAkC,wBC+MtC,CD9MI,oCACI,wBCgNR,CD/MQ,uDACI,oBCiNZ,CD1MI,6IAAkC,qBCyNtC,CDxNI,kCAAkC,wBC2NtC,CD1NI,sCAAkC,wBC6NtC,CD3NI,0DAAkC,qBCiOtC,CD9NA,eACI,qBA6CkC,SCoLtC,CDhOI,oBAAkC,YCmOtC,CDlOI,0CACkC,YCqOtC,CDlOI,2GACkC,YCyOtC,CDxOI,wBAAkC,YC2OtC,CD1OI,iDACkC,YC6OtC,CD5OI,+DAEkC,YC+OtC,CD9OI,yBAAkC,YCiPtC,CDhPI,uBAAkC,SCmPtC,CDlPI,sBAAkC,YCqPtC,CDpPI,2BAAkC,aCuPtC,CDtPI,uBAAkC,SCyPtC,CDxPI,2CAAkC,YC4PtC,CD3PI,sBAAkC,YC8PtC,CD7PI,6BAAkC,YCgQtC,CD/PI,6BAAkC,YCkQtC,CDjQI,iCAAkC,YCoQtC,CDnQI,kCAAkC,YCsQtC,CDrQI,oCAAkC,YCwQtC,CDvQI,kCAAkC,YC0QtC,CDzQI,mCAAkC,YC4QtC,CD3QI,iCAAkC,YC8QtC,CD7QI,oCAAkC,YCgRtC,CD/QI,oCAAkC,YCkRtC,CDjRI,mCAAkC,YCoRtC,CDnRI,kCAAkC,YCsRtC,CDrRI,2BAAkC,YCwRtC,CDvRI,sKAIkC,YC0RtC,CDzRI,uBAAkC,YC4RtC,CDzRI,kIACkC,YCgStC,CD/RI,qBAAkC,YCkStC,CDhSI,uBAAkC,YCmStC,CDhSA,qBAAsC,aCmStC,CDlSA,mBAAsC,aCqStC,CDpSA,iBAAsC,aCuStC,CC3fA,iBAJI,eACA,gBDogBJ,CC9fA,6BATI,0BACA,eD4gBJ,CCpgBA,YAPI,eACA,gBD0gBJ,CCjgBA,aAVI,eACA,iBAHA,0BACA,gBACA,eACA,gBDghB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","file":"styles.css","sourcesContent":["// Import all the theming functionality.\n// We want overlays to always appear over user content, so set a baseline\n// very high z-index for the overlay container, which is where we create the new\n// stacking context for all overlays.\n$cdk-z-index-overlay-container: 1000 !default;\n$cdk-z-index-overlay: 1000 !default;\n$cdk-z-index-overlay-backdrop: 1000 !default;\n\n// Background color for all of the backdrops\n$cdk-overlay-dark-backdrop-background: rgba(0, 0, 0, 0.32) !default;\n\n// Default backdrop animation is based on the Material Design swift-ease-out.\n$backdrop-animation-duration: 400ms !default;\n$backdrop-animation-timing-function: cubic-bezier(0.25, 0.8, 0.25, 1) !default;\n\n\n@mixin cdk-overlay() {\n  .cdk-overlay-container, .cdk-global-overlay-wrapper {\n    // Disable events from being captured on the overlay container.\n    pointer-events: none;\n\n    // The container should be the size of the viewport.\n    top: 0;\n    left: 0;\n    height: 100%;\n    width: 100%;\n  }\n\n  // The overlay-container is an invisible element which contains all individual overlays.\n  .cdk-overlay-container {\n    position: fixed;\n    z-index: $cdk-z-index-overlay-container;\n\n    &:empty {\n      // Hide the element when it doesn't have any child nodes. This doesn't\n      // include overlays that have been detached, rather than disposed.\n      display: none;\n    }\n  }\n\n  // We use an extra wrapper element in order to use make the overlay itself a flex item.\n  // This makes centering the overlay easy without running into the subpixel rendering\n  // problems tied to using `transform` and without interfering with the other position\n  // strategies.\n  .cdk-global-overlay-wrapper {\n    display: flex;\n    position: absolute;\n    z-index: $cdk-z-index-overlay;\n  }\n\n  // A single overlay pane.\n  .cdk-overlay-pane {\n    // Note: it's important for this one to start off `absolute`,\n    // in order for us to be able to measure it correctly.\n    position: absolute;\n    pointer-events: auto;\n    box-sizing: border-box;\n    z-index: $cdk-z-index-overlay;\n\n    // For connected-position overlays, we set `display: flex` in\n    // order to force `max-width` and `max-height` to take effect.\n    display: flex;\n    max-width: 100%;\n    max-height: 100%;\n  }\n\n  .cdk-overlay-backdrop {\n    // TODO(jelbourn): reuse sidenav fullscreen mixin.\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n\n    z-index: $cdk-z-index-overlay-backdrop;\n    pointer-events: auto;\n    -webkit-tap-highlight-color: transparent;\n    transition: opacity $backdrop-animation-duration $backdrop-animation-timing-function;\n    opacity: 0;\n\n    &.cdk-overlay-backdrop-showing {\n      opacity: 1;\n\n      // In high contrast mode the rgba background will become solid so we need to fall back\n      // to making it opaque using `opacity`. Note that we can't use the `cdk-high-contrast`\n      // mixin, because we can't normalize the import path to the _a11y.scss both for the\n      // source and when this file is distributed. See #10908.\n      @media screen and (-ms-high-contrast: active) {\n        opacity: 0.6;\n      }\n    }\n  }\n\n  .cdk-overlay-dark-backdrop {\n    background: $cdk-overlay-dark-backdrop-background;\n  }\n\n  .cdk-overlay-transparent-backdrop {\n    // Note: as of Firefox 57, having the backdrop be `background: none` will prevent it from\n    // capturing the user's mouse scroll events. Since we also can't use something like\n    // `rgba(0, 0, 0, 0)`, we work around the inconsistency by not setting the background at\n    // all and using `opacity` to make the element transparent.\n    &, &.cdk-overlay-backdrop-showing {\n      opacity: 0;\n    }\n  }\n\n  // Overlay parent element used with the connected position strategy. Used to constrain the\n  // overlay element's size to fit within the viewport.\n  .cdk-overlay-connected-position-bounding-box {\n    position: absolute;\n    z-index: $cdk-z-index-overlay;\n\n    // We use `display: flex` on this element exclusively for centering connected overlays.\n    // When *not* centering, a top/left/bottom/right will be set which overrides the normal\n    // flex layout.\n    display: flex;\n\n    // We use the `column` direction here to avoid some flexbox issues in Edge\n    // when using the \"grow after open\" options.\n    flex-direction: column;\n\n    // Add some dimensions so the element has an `innerText` which some people depend on in tests.\n    min-width: 1px;\n    min-height: 1px;\n  }\n\n  // Used when disabling global scrolling.\n  .cdk-global-scrollblock {\n    position: fixed;\n\n    // Necessary for the content not to lose its width. Note that we're using 100%, instead of\n    // 100vw, because 100vw includes the width plus the scrollbar, whereas 100% is the width\n    // that the element had before we made it `fixed`.\n    width: 100%;\n\n    // Note: this will always add a scrollbar to whatever element it is on, which can\n    // potentially result in double scrollbars. It shouldn't be an issue, because we won't\n    // block scrolling on a page that doesn't have a scrollbar in the first place.\n    overflow-y: scroll;\n  }\n}\n\n@mixin cdk-a11y {\n  .cdk-visually-hidden {\n    border: 0;\n    clip: rect(0 0 0 0);\n    height: 1px;\n    margin: -1px;\n    overflow: hidden;\n    padding: 0;\n    position: absolute;\n    width: 1px;\n\n    // Avoid browsers rendering the focus ring in some cases.\n    outline: 0;\n\n    // Avoid some cases where the browser will still render the native controls (see #9049).\n    -webkit-appearance: none;\n    -moz-appearance: none;\n  }\n}\n\n/// Emits the mixin's content nested under `$selector-context` if `$selector-context`\n/// is non-empty.\n/// @param selector-context The selector under which to nest the mixin's content.\n@mixin _cdk-optionally-nest-content($selector-context) {\n  @if ($selector-context == '') {\n    @content;\n  }\n  @else {\n    #{$selector-context} {\n      @content;\n    }\n  }\n}\n\n/// Applies styles for users in high contrast mode. Note that this only applies\n/// to Microsoft browsers. Chrome can be included by checking for the `html[hc]`\n/// attribute, however Chrome handles high contrast differently.\n///\n/// @param target Which kind of high contrast setting to target. Defaults to `active`, can be\n///    `white-on-black` or `black-on-white`.\n/// @param encapsulation Whether to emit styles for view encapsulation. Values are:\n///     * `on` - works for `Emulated`, `Native`, and `ShadowDom`\n///     * `off` - works for `None`\n///     * `any` - works for all encapsulation modes by emitting the CSS twice (default).\n@mixin cdk-high-contrast($target: active, $encapsulation: 'any') {\n  @if ($target != 'active' and $target != 'black-on-white' and $target != 'white-on-black') {\n    @error 'Unknown cdk-high-contrast value \"#{$target}\" provided. ' +\n           'Allowed values are \"active\", \"black-on-white\", and \"white-on-black\"';\n  }\n\n  @if ($encapsulation != 'on' and $encapsulation != 'off' and $encapsulation != 'any') {\n    @error 'Unknown cdk-high-contrast encapsulation \"#{$encapsulation}\" provided. ' +\n           'Allowed values are \"on\", \"off\", and \"any\"';\n  }\n\n  // If the selector context has multiple parts, such as `.section, .region`, just doing\n  // `.cdk-high-contrast-xxx #{&}` will only apply the parent selector to the first part of the\n  // context. We address this by nesting the selector context under .cdk-high-contrast.\n  @at-root {\n    $selector-context: #{&};\n\n    @if ($encapsulation != 'on') {\n      .cdk-high-contrast-#{$target} {\n        @include _cdk-optionally-nest-content($selector-context) {\n          @content;\n        }\n      }\n    }\n\n    @if ($encapsulation != 'off') {\n      .cdk-high-contrast-#{$target} :host {\n        @include _cdk-optionally-nest-content($selector-context) {\n          @content;\n        }\n      }\n    }\n  }\n}\n\n// Core styles that enable monitoring autofill state of text fields.\n@mixin cdk-text-field {\n  // Keyframes that apply no styles, but allow us to monitor when an text field becomes autofilled\n  // by watching for the animation events that are fired when they start. Note: the /*!*/ comment is\n  // needed to prevent LibSass from stripping the keyframes out.\n  // Based on: https://medium.com/@brunn/detecting-autofilled-fields-in-javascript-aed598d25da7\n  @keyframes cdk-text-field-autofill-start {/*!*/}\n  @keyframes cdk-text-field-autofill-end {/*!*/}\n\n  .cdk-text-field-autofill-monitored:-webkit-autofill {\n    animation-name: cdk-text-field-autofill-start;\n  }\n\n  .cdk-text-field-autofill-monitored:not(:-webkit-autofill) {\n    animation-name: cdk-text-field-autofill-end;\n  }\n\n  // Remove the resize handle on autosizing textareas, because whatever height\n  // the user resized to will be overwritten once they start typing again.\n  textarea.cdk-textarea-autosize {\n    resize: none;\n  }\n\n  // This class is temporarily applied to the textarea when it is being measured. It is immediately\n  // removed when measuring is complete. We use `!important` rules here to make sure user-specified\n  // rules do not interfere with the measurement.\n  textarea.cdk-textarea-autosize-measuring {\n    height: auto !important;\n    overflow: hidden !important;\n    // Having 2px top and bottom padding seems to fix a bug where Chrome gets an incorrect\n    // measurement. We just have to account for it later and subtract it off the final result.\n    padding: 2px 0 !important;\n    box-sizing: content-box !important;\n  }\n}\n\n// Used to generate UIDs for keyframes used to change the text field autofill styles.\n$cdk-text-field-autofill-color-frame-count: 0;\n\n// Mixin used to apply custom background and foreground colors to an autofilled text field.\n// Based on: https://stackoverflow.com/questions/2781549/\n// removing-input-background-colour-for-chrome-autocomplete#answer-37432260\n@mixin cdk-text-field-autofill-color($background, $foreground:'') {\n  @keyframes cdk-text-field-autofill-color-#{$cdk-text-field-autofill-color-frame-count} {\n    to {\n      background: $background;\n      @if $foreground != '' { color: $foreground; }\n    }\n  }\n\n  &:-webkit-autofill {\n    animation-name: cdk-text-field-autofill-color-#{$cdk-text-field-autofill-color-frame-count};\n    animation-fill-mode: both;\n  }\n\n  &.cdk-text-field-autofill-monitored:-webkit-autofill {\n    animation-name: cdk-text-field-autofill-start,\n                    cdk-text-field-autofill-color-#{$cdk-text-field-autofill-color-frame-count};\n  }\n\n  $cdk-text-field-autofill-color-frame-count:\n      $cdk-text-field-autofill-color-frame-count + 1 !global;\n}\n\n\n// Core styles that can be used to apply material design treatments to any element.\n// Media queries\n// TODO(josephperrott): Change $mat-xsmall and $mat-small usages to rely on BreakpointObserver,\n$mat-xsmall: 'max-width: 599px';\n$mat-small: 'max-width: 959px';\n\n// TODO: Revisit all z-indices before beta\n// z-index master list\n\n$z-index-fab: 20 !default;\n$z-index-drawer: 100 !default;\n\n// Global constants\n$pi: 3.14159265;\n\n// Padding between input toggles and their labels\n$mat-toggle-padding: 8px !default;\n// Width and height of input toggles\n$mat-toggle-size: 20px !default;\n\n// Easing Curves\n// TODO(jelbourn): all of these need to be revisited\n\n// The default animation curves used by material design.\n$mat-linear-out-slow-in-timing-function: cubic-bezier(0, 0, 0.2, 0.1) !default;\n$mat-fast-out-slow-in-timing-function: cubic-bezier(0.4, 0, 0.2, 1) !default;\n$mat-fast-out-linear-in-timing-function: cubic-bezier(0.4, 0, 1, 1) !default;\n\n$ease-in-out-curve-function: cubic-bezier(0.35, 0, 0.25, 1) !default;\n\n$swift-ease-out-duration: 400ms !default;\n$swift-ease-out-timing-function: cubic-bezier(0.25, 0.8, 0.25, 1) !default;\n$swift-ease-out: all $swift-ease-out-duration $swift-ease-out-timing-function !default;\n\n$swift-ease-in-duration: 300ms !default;\n$swift-ease-in-timing-function: cubic-bezier(0.55, 0, 0.55, 0.2) !default;\n$swift-ease-in: all $swift-ease-in-duration $swift-ease-in-timing-function !default;\n\n$swift-ease-in-out-duration: 500ms !default;\n$swift-ease-in-out-timing-function: $ease-in-out-curve-function !default;\n$swift-ease-in-out: all $swift-ease-in-out-duration $swift-ease-in-out-timing-function !default;\n\n$swift-linear-duration: 80ms !default;\n$swift-linear-timing-function: linear !default;\n$swift-linear: all $swift-linear-duration $swift-linear-timing-function !default;\n\n\n\n// A collection of mixins and CSS classes that can be used to apply elevation to a material\n// element.\n// See: https://material.io/design/environment/elevation.html\n// Examples:\n//\n//\n// .mat-foo {\n//   @include $mat-elevation(2);\n//\n//   &:active {\n//     @include $mat-elevation(8);\n//   }\n// }\n//\n// <div id=\"external-card\" class=\"mat-elevation-z2\"><p>Some content</p></div>\n//\n// For an explanation of the design behind how elevation is implemented, see the design doc at\n// https://goo.gl/Kq0k9Z.\n\n// Colors for umbra, penumbra, and ambient shadows. As described in the design doc, each elevation\n// level is created using a set of 3 shadow values, one for umbra (the shadow representing the\n// space completely obscured by an object relative to its light source), one for penumbra (the\n// space partially obscured by an object), and one for ambient (the space which contains the object\n// itself). For a further explanation of these terms and their meanings, see\n// https://en.wikipedia.org/wiki/Umbra,_penumbra_and_antumbra.\n\n// Maps for the different shadow sets and their values within each z-space. These values were\n// created by taking a few reference shadow sets created by Google's Designers and interpolating\n// all of the values between them.\n\n@function _get-umbra-map($color, $opacity) {\n  $shadow-color: if(type-of($color) == color, rgba($color, $opacity * 0.2), $color);\n\n  @return (\n    0: '0px 0px 0px 0px #{$shadow-color}',\n    1: '0px 2px 1px -1px #{$shadow-color}',\n    2: '0px 3px 1px -2px #{$shadow-color}',\n    3: '0px 3px 3px -2px #{$shadow-color}',\n    4: '0px 2px 4px -1px #{$shadow-color}',\n    5: '0px 3px 5px -1px #{$shadow-color}',\n    6: '0px 3px 5px -1px #{$shadow-color}',\n    7: '0px 4px 5px -2px #{$shadow-color}',\n    8: '0px 5px 5px -3px #{$shadow-color}',\n    9: '0px 5px 6px -3px #{$shadow-color}',\n    10: '0px 6px 6px -3px #{$shadow-color}',\n    11: '0px 6px 7px -4px #{$shadow-color}',\n    12: '0px 7px 8px -4px #{$shadow-color}',\n    13: '0px 7px 8px -4px #{$shadow-color}',\n    14: '0px 7px 9px -4px #{$shadow-color}',\n    15: '0px 8px 9px -5px #{$shadow-color}',\n    16: '0px 8px 10px -5px #{$shadow-color}',\n    17: '0px 8px 11px -5px #{$shadow-color}',\n    18: '0px 9px 11px -5px #{$shadow-color}',\n    19: '0px 9px 12px -6px #{$shadow-color}',\n    20: '0px 10px 13px -6px #{$shadow-color}',\n    21: '0px 10px 13px -6px #{$shadow-color}',\n    22: '0px 10px 14px -6px #{$shadow-color}',\n    23: '0px 11px 14px -7px #{$shadow-color}',\n    24: '0px 11px 15px -7px #{$shadow-color}'\n  );\n}\n\n@function _get-penumbra-map($color, $opacity) {\n  $shadow-color: if(type-of($color) == color, rgba($color, $opacity * 0.14), $color);\n\n  @return (\n    0: '0px 0px 0px 0px #{$shadow-color}',\n    1: '0px 1px 1px 0px #{$shadow-color}',\n    2: '0px 2px 2px 0px #{$shadow-color}',\n    3: '0px 3px 4px 0px #{$shadow-color}',\n    4: '0px 4px 5px 0px #{$shadow-color}',\n    5: '0px 5px 8px 0px #{$shadow-color}',\n    6: '0px 6px 10px 0px #{$shadow-color}',\n    7: '0px 7px 10px 1px #{$shadow-color}',\n    8: '0px 8px 10px 1px #{$shadow-color}',\n    9: '0px 9px 12px 1px #{$shadow-color}',\n    10: '0px 10px 14px 1px #{$shadow-color}',\n    11: '0px 11px 15px 1px #{$shadow-color}',\n    12: '0px 12px 17px 2px #{$shadow-color}',\n    13: '0px 13px 19px 2px #{$shadow-color}',\n    14: '0px 14px 21px 2px #{$shadow-color}',\n    15: '0px 15px 22px 2px #{$shadow-color}',\n    16: '0px 16px 24px 2px #{$shadow-color}',\n    17: '0px 17px 26px 2px #{$shadow-color}',\n    18: '0px 18px 28px 2px #{$shadow-color}',\n    19: '0px 19px 29px 2px #{$shadow-color}',\n    20: '0px 20px 31px 3px #{$shadow-color}',\n    21: '0px 21px 33px 3px #{$shadow-color}',\n    22: '0px 22px 35px 3px #{$shadow-color}',\n    23: '0px 23px 36px 3px #{$shadow-color}',\n    24: '0px 24px 38px 3px #{$shadow-color}'\n  );\n}\n\n@function _get-ambient-map($color, $opacity) {\n  $shadow-color: if(type-of($color) == color, rgba($color, $opacity * 0.12), $color);\n\n  @return (\n    0: '0px 0px 0px 0px #{$shadow-color}',\n    1: '0px 1px 3px 0px #{$shadow-color}',\n    2: '0px 1px 5px 0px #{$shadow-color}',\n    3: '0px 1px 8px 0px #{$shadow-color}',\n    4: '0px 1px 10px 0px #{$shadow-color}',\n    5: '0px 1px 14px 0px #{$shadow-color}',\n    6: '0px 1px 18px 0px #{$shadow-color}',\n    7: '0px 2px 16px 1px #{$shadow-color}',\n    8: '0px 3px 14px 2px #{$shadow-color}',\n    9: '0px 3px 16px 2px #{$shadow-color}',\n    10: '0px 4px 18px 3px #{$shadow-color}',\n    11: '0px 4px 20px 3px #{$shadow-color}',\n    12: '0px 5px 22px 4px #{$shadow-color}',\n    13: '0px 5px 24px 4px #{$shadow-color}',\n    14: '0px 5px 26px 4px #{$shadow-color}',\n    15: '0px 6px 28px 5px #{$shadow-color}',\n    16: '0px 6px 30px 5px #{$shadow-color}',\n    17: '0px 6px 32px 5px #{$shadow-color}',\n    18: '0px 7px 34px 6px #{$shadow-color}',\n    19: '0px 7px 36px 6px #{$shadow-color}',\n    20: '0px 8px 38px 7px #{$shadow-color}',\n    21: '0px 8px 40px 7px #{$shadow-color}',\n    22: '0px 8px 42px 7px #{$shadow-color}',\n    23: '0px 9px 44px 8px #{$shadow-color}',\n    24: '0px 9px 46px 8px #{$shadow-color}'\n  );\n}\n\n// The default duration value for elevation transitions.\n$mat-elevation-transition-duration: 280ms !default;\n\n// The default easing value for elevation transitions.\n$mat-elevation-transition-timing-function: $mat-fast-out-slow-in-timing-function;\n\n// The default color for elevation shadows.\n$mat-elevation-color: black !default;\n\n// The default opacity scaling value for elevation shadows.\n$mat-elevation-opacity: 1 !default;\n\n// Prefix for elevation-related selectors.\n$_mat-elevation-prefix: 'mat-elevation-z';\n\n// Applies the correct css rules to an element to give it the elevation specified by $zValue.\n// The $zValue must be between 0 and 24.\n@mixin mat-elevation($zValue, $color: $mat-elevation-color, $opacity: $mat-elevation-opacity) {\n  @if type-of($zValue) != number or not unitless($zValue) {\n    @error '$zValue must be a unitless number';\n  }\n  @if $zValue < 0 or $zValue > 24 {\n    @error '$zValue must be between 0 and 24';\n  }\n\n  box-shadow: #{map-get(_get-umbra-map($color, $opacity), $zValue)},\n              #{map-get(_get-penumbra-map($color, $opacity), $zValue)},\n              #{map-get(_get-ambient-map($color, $opacity), $zValue)};\n}\n\n@mixin _mat-theme-elevation($zValue, $theme, $opacity: $mat-elevation-opacity) {\n  $foreground: map-get($theme, foreground);\n  $elevation-color: map-get($foreground, elevation);\n  $elevation-color-or-default: if($elevation-color == null, $mat-elevation-color, $elevation-color);\n\n  @include mat-elevation($zValue, $elevation-color-or-default, $opacity);\n}\n\n// Applies the elevation to an element in a manner that allows\n// consumers to override it via the Material elevation classes.\n@mixin mat-overridable-elevation(\n    $zValue,\n    $color: $mat-elevation-color,\n    $opacity: $mat-elevation-opacity) {\n  &:not([class*='#{$_mat-elevation-prefix}']) {\n    @include mat-elevation($zValue, $color, $opacity);\n  }\n}\n\n@mixin _mat-theme-overridable-elevation($zValue, $theme, $opacity: $mat-elevation-opacity) {\n  $foreground: map-get($theme, foreground);\n  $elevation-color: map-get($foreground, elevation);\n  $elevation-color-or-default: if($elevation-color == null, $mat-elevation-color, $elevation-color);\n\n  @include mat-overridable-elevation($zValue, $elevation-color-or-default, $opacity);\n}\n\n// Returns a string that can be used as the value for a transition property for elevation.\n// Calling this function directly is useful in situations where a component needs to transition\n// more than one property.\n//\n// .foo {\n//   transition: mat-elevation-transition-property-value(), opacity 100ms ease;\n// }\n@function mat-elevation-transition-property-value(\n    $duration: $mat-elevation-transition-duration,\n    $easing: $mat-elevation-transition-timing-function) {\n  @return box-shadow #{$duration} #{$easing};\n}\n\n// Applies the correct css rules needed to have an element transition between elevations.\n// This mixin should be applied to elements whose elevation values will change depending on their\n// context (e.g. when active or disabled).\n//\n// NOTE(traviskaufman): Both this mixin and the above function use default parameters so they can\n// be used in the same way by clients.\n@mixin mat-elevation-transition(\n    $duration: $mat-elevation-transition-duration,\n    $easing: $mat-elevation-transition-timing-function) {\n  transition: mat-elevation-transition-property-value($duration, $easing);\n}\n\n// Color palettes from the Material Design spec.\n// See https://material.io/design/color/\n//\n// Contrast colors are hard-coded because it is too difficult (probably impossible) to\n// calculate them. These contrast colors are pulled from the public Material Design spec swatches.\n// While the contrast colors in the spec are not prescriptive, we use them for convenience.\n\n\n// @deprecated renamed to $dark-primary-text.\n// @breaking-change 8.0.0\n$black-87-opacity: rgba(black, 0.87);\n// @deprecated renamed to $light-primary-text.\n// @breaking-change 8.0.0\n$white-87-opacity: rgba(white, 0.87);\n// @deprecated use $dark-[secondary-text,disabled-text,dividers,focused] instead.\n// @breaking-change 8.0.0\n$black-12-opacity: rgba(black, 0.12);\n// @deprecated use $light-[secondary-text,disabled-text,dividers,focused] instead.\n// @breaking-change 8.0.0\n$white-12-opacity: rgba(white, 0.12);\n// @deprecated use $dark-[secondary-text,disabled-text,dividers,focused] instead.\n// @breaking-change 8.0.0\n$black-6-opacity: rgba(black, 0.06);\n// @deprecated use $light-[secondary-text,disabled-text,dividers,focused] instead.\n// @breaking-change 8.0.0\n$white-6-opacity: rgba(white, 0.06);\n\n$dark-primary-text: rgba(black, 0.87);\n$dark-secondary-text: rgba(black, 0.54);\n$dark-disabled-text: rgba(black, 0.38);\n$dark-dividers: rgba(black, 0.12);\n$dark-focused: rgba(black, 0.12);\n$light-primary-text: white;\n$light-secondary-text: rgba(white, 0.7);\n$light-disabled-text: rgba(white, 0.5);\n$light-dividers: rgba(white, 0.12);\n$light-focused: rgba(white, 0.12);\n\n$mat-red: (\n  50: #ffebee,\n  100: #ffcdd2,\n  200: #ef9a9a,\n  300: #e57373,\n  400: #ef5350,\n  500: #f44336,\n  600: #e53935,\n  700: #d32f2f,\n  800: #c62828,\n  900: #b71c1c,\n  A100: #ff8a80,\n  A200: #ff5252,\n  A400: #ff1744,\n  A700: #d50000,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $light-primary-text,\n    A400: $light-primary-text,\n    A700: $light-primary-text,\n  )\n);\n\n$mat-pink: (\n  50: #fce4ec,\n  100: #f8bbd0,\n  200: #f48fb1,\n  300: #f06292,\n  400: #ec407a,\n  500: #e91e63,\n  600: #d81b60,\n  700: #c2185b,\n  800: #ad1457,\n  900: #880e4f,\n  A100: #ff80ab,\n  A200: #ff4081,\n  A400: #f50057,\n  A700: #c51162,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $light-primary-text,\n    A400: $light-primary-text,\n    A700: $light-primary-text,\n  )\n);\n\n$mat-purple: (\n  50: #f3e5f5,\n  100: #e1bee7,\n  200: #ce93d8,\n  300: #ba68c8,\n  400: #ab47bc,\n  500: #9c27b0,\n  600: #8e24aa,\n  700: #7b1fa2,\n  800: #6a1b9a,\n  900: #4a148c,\n  A100: #ea80fc,\n  A200: #e040fb,\n  A400: #d500f9,\n  A700: #aa00ff,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $light-primary-text,\n    400: $light-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $light-primary-text,\n    A400: $light-primary-text,\n    A700: $light-primary-text,\n  )\n);\n\n$mat-deep-purple: (\n  50: #ede7f6,\n  100: #d1c4e9,\n  200: #b39ddb,\n  300: #9575cd,\n  400: #7e57c2,\n  500: #673ab7,\n  600: #5e35b1,\n  700: #512da8,\n  800: #4527a0,\n  900: #311b92,\n  A100: #b388ff,\n  A200: #7c4dff,\n  A400: #651fff,\n  A700: #6200ea,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $light-primary-text,\n    400: $light-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $light-primary-text,\n    A400: $light-primary-text,\n    A700: $light-primary-text,\n  )\n);\n\n$mat-indigo: (\n  50: #e8eaf6,\n  100: #c5cae9,\n  200: #9fa8da,\n  300: #7986cb,\n  400: #5c6bc0,\n  500: #3f51b5,\n  600: #3949ab,\n  700: #303f9f,\n  800: #283593,\n  900: #1a237e,\n  A100: #8c9eff,\n  A200: #536dfe,\n  A400: #3d5afe,\n  A700: #304ffe,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $light-primary-text,\n    400: $light-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $light-primary-text,\n    A400: $light-primary-text,\n    A700: $light-primary-text,\n  )\n);\n\n$mat-blue: (\n  50: #e3f2fd,\n  100: #bbdefb,\n  200: #90caf9,\n  300: #64b5f6,\n  400: #42a5f5,\n  500: #2196f3,\n  600: #1e88e5,\n  700: #1976d2,\n  800: #1565c0,\n  900: #0d47a1,\n  A100: #82b1ff,\n  A200: #448aff,\n  A400: #2979ff,\n  A700: #2962ff,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $light-primary-text,\n    A400: $light-primary-text,\n    A700: $light-primary-text,\n  )\n);\n\n$mat-light-blue: (\n  50: #e1f5fe,\n  100: #b3e5fc,\n  200: #81d4fa,\n  300: #4fc3f7,\n  400: #29b6f6,\n  500: #03a9f4,\n  600: #039be5,\n  700: #0288d1,\n  800: #0277bd,\n  900: #01579b,\n  A100: #80d8ff,\n  A200: #40c4ff,\n  A400: #00b0ff,\n  A700: #0091ea,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $dark-primary-text,\n    A700: $light-primary-text,\n  )\n);\n\n$mat-cyan: (\n  50: #e0f7fa,\n  100: #b2ebf2,\n  200: #80deea,\n  300: #4dd0e1,\n  400: #26c6da,\n  500: #00bcd4,\n  600: #00acc1,\n  700: #0097a7,\n  800: #00838f,\n  900: #006064,\n  A100: #84ffff,\n  A200: #18ffff,\n  A400: #00e5ff,\n  A700: #00b8d4,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $dark-primary-text,\n    A700: $dark-primary-text,\n  )\n);\n\n$mat-teal: (\n  50: #e0f2f1,\n  100: #b2dfdb,\n  200: #80cbc4,\n  300: #4db6ac,\n  400: #26a69a,\n  500: #009688,\n  600: #00897b,\n  700: #00796b,\n  800: #00695c,\n  900: #004d40,\n  A100: #a7ffeb,\n  A200: #64ffda,\n  A400: #1de9b6,\n  A700: #00bfa5,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $dark-primary-text,\n    A700: $dark-primary-text,\n  )\n);\n\n$mat-green: (\n  50: #e8f5e9,\n  100: #c8e6c9,\n  200: #a5d6a7,\n  300: #81c784,\n  400: #66bb6a,\n  500: #4caf50,\n  600: #43a047,\n  700: #388e3c,\n  800: #2e7d32,\n  900: #1b5e20,\n  A100: #b9f6ca,\n  A200: #69f0ae,\n  A400: #00e676,\n  A700: #00c853,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $dark-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $dark-primary-text,\n    A700: $dark-primary-text,\n  )\n);\n\n$mat-light-green: (\n  50: #f1f8e9,\n  100: #dcedc8,\n  200: #c5e1a5,\n  300: #aed581,\n  400: #9ccc65,\n  500: #8bc34a,\n  600: #7cb342,\n  700: #689f38,\n  800: #558b2f,\n  900: #33691e,\n  A100: #ccff90,\n  A200: #b2ff59,\n  A400: #76ff03,\n  A700: #64dd17,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $dark-primary-text,\n    600: $dark-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $dark-primary-text,\n    A700: $dark-primary-text,\n  )\n);\n\n$mat-lime: (\n  50: #f9fbe7,\n  100: #f0f4c3,\n  200: #e6ee9c,\n  300: #dce775,\n  400: #d4e157,\n  500: #cddc39,\n  600: #c0ca33,\n  700: #afb42b,\n  800: #9e9d24,\n  900: #827717,\n  A100: #f4ff81,\n  A200: #eeff41,\n  A400: #c6ff00,\n  A700: #aeea00,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $dark-primary-text,\n    600: $dark-primary-text,\n    700: $dark-primary-text,\n    800: $dark-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $dark-primary-text,\n    A700: $dark-primary-text,\n  )\n);\n\n$mat-yellow: (\n  50: #fffde7,\n  100: #fff9c4,\n  200: #fff59d,\n  300: #fff176,\n  400: #ffee58,\n  500: #ffeb3b,\n  600: #fdd835,\n  700: #fbc02d,\n  800: #f9a825,\n  900: #f57f17,\n  A100: #ffff8d,\n  A200: #ffff00,\n  A400: #ffea00,\n  A700: #ffd600,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $dark-primary-text,\n    600: $dark-primary-text,\n    700: $dark-primary-text,\n    800: $dark-primary-text,\n    900: $dark-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $dark-primary-text,\n    A700: $dark-primary-text,\n  )\n);\n\n$mat-amber: (\n  50: #fff8e1,\n  100: #ffecb3,\n  200: #ffe082,\n  300: #ffd54f,\n  400: #ffca28,\n  500: #ffc107,\n  600: #ffb300,\n  700: #ffa000,\n  800: #ff8f00,\n  900: #ff6f00,\n  A100: #ffe57f,\n  A200: #ffd740,\n  A400: #ffc400,\n  A700: #ffab00,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $dark-primary-text,\n    600: $dark-primary-text,\n    700: $dark-primary-text,\n    800: $dark-primary-text,\n    900: $dark-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $dark-primary-text,\n    A700: $dark-primary-text,\n  )\n);\n\n$mat-orange: (\n  50: #fff3e0,\n  100: #ffe0b2,\n  200: #ffcc80,\n  300: #ffb74d,\n  400: #ffa726,\n  500: #ff9800,\n  600: #fb8c00,\n  700: #f57c00,\n  800: #ef6c00,\n  900: #e65100,\n  A100: #ffd180,\n  A200: #ffab40,\n  A400: #ff9100,\n  A700: #ff6d00,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $dark-primary-text,\n    600: $dark-primary-text,\n    700: $dark-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $dark-primary-text,\n    A700: black,\n  )\n);\n\n$mat-deep-orange: (\n  50: #fbe9e7,\n  100: #ffccbc,\n  200: #ffab91,\n  300: #ff8a65,\n  400: #ff7043,\n  500: #ff5722,\n  600: #f4511e,\n  700: #e64a19,\n  800: #d84315,\n  900: #bf360c,\n  A100: #ff9e80,\n  A200: #ff6e40,\n  A400: #ff3d00,\n  A700: #dd2c00,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $light-primary-text,\n    A700: $light-primary-text,\n  )\n);\n\n$mat-brown: (\n  50: #efebe9,\n  100: #d7ccc8,\n  200: #bcaaa4,\n  300: #a1887f,\n  400: #8d6e63,\n  500: #795548,\n  600: #6d4c41,\n  700: #5d4037,\n  800: #4e342e,\n  900: #3e2723,\n  A100: #d7ccc8,\n  A200: #bcaaa4,\n  A400: #8d6e63,\n  A700: #5d4037,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $light-primary-text,\n    400: $light-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $light-primary-text,\n    A700: $light-primary-text,\n  )\n);\n\n$mat-grey: (\n  50: #fafafa,\n  100: #f5f5f5,\n  200: #eeeeee,\n  300: #e0e0e0,\n  400: #bdbdbd,\n  500: #9e9e9e,\n  600: #757575,\n  700: #616161,\n  800: #424242,\n  900: #212121,\n  A100: #ffffff,\n  A200: #eeeeee,\n  A400: #bdbdbd,\n  A700: #616161,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $dark-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $dark-primary-text,\n    A700: $light-primary-text,\n  )\n);\n\n// Alias for alternate spelling.\n$mat-gray: $mat-grey;\n\n$mat-blue-grey: (\n  50: #eceff1,\n  100: #cfd8dc,\n  200: #b0bec5,\n  300: #90a4ae,\n  400: #78909c,\n  500: #607d8b,\n  600: #546e7a,\n  700: #455a64,\n  800: #37474f,\n  900: #263238,\n  A100: #cfd8dc,\n  A200: #b0bec5,\n  A400: #78909c,\n  A700: #455a64,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $light-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $light-primary-text,\n    A700: $light-primary-text,\n  )\n);\n\n// Alias for alternate spelling.\n$mat-blue-gray: $mat-blue-grey;\n\n\n// Background palette for light themes.\n$mat-light-theme-background: (\n  status-bar: map_get($mat-grey, 300),\n  app-bar:    map_get($mat-grey, 100),\n  background: map_get($mat-grey, 50),\n  hover:      rgba(black, 0.04), // TODO(kara): check style with Material Design UX\n  card:       white,\n  dialog:     white,\n  disabled-button: rgba(black, 0.12),\n  raised-button: white,\n  focused-button: $dark-focused,\n  selected-button: map_get($mat-grey, 300),\n  selected-disabled-button: map_get($mat-grey, 400),\n  disabled-button-toggle: map_get($mat-grey, 200),\n  unselected-chip: map_get($mat-grey, 300),\n  disabled-list-option: map_get($mat-grey, 200),\n  tooltip: map_get($mat-grey, 700),\n);\n\n// Background palette for dark themes.\n$mat-dark-theme-background: (\n  status-bar: black,\n  app-bar:    map_get($mat-grey, 900),\n  background: #303030,\n  hover:      rgba(white, 0.04), // TODO(kara): check style with Material Design UX\n  card:       map_get($mat-grey, 800),\n  dialog:     map_get($mat-grey, 800),\n  disabled-button: rgba(white, 0.12),\n  raised-button: map-get($mat-grey, 800),\n  focused-button: $light-focused,\n  selected-button: map_get($mat-grey, 900),\n  selected-disabled-button: map_get($mat-grey, 800),\n  disabled-button-toggle: black,\n  unselected-chip: map_get($mat-grey, 700),\n  disabled-list-option: black,\n  tooltip: map_get($mat-grey, 700),\n);\n\n// Foreground palette for light themes.\n$mat-light-theme-foreground: (\n  base:              black,\n  divider:           $dark-dividers,\n  dividers:          $dark-dividers,\n  disabled:          $dark-disabled-text,\n  disabled-button:   rgba(black, 0.26),\n  disabled-text:     $dark-disabled-text,\n  elevation:         black,\n  hint-text:         $dark-disabled-text,\n  secondary-text:    $dark-secondary-text,\n  icon:              rgba(black, 0.54),\n  icons:             rgba(black, 0.54),\n  text:              rgba(black, 0.87),\n  slider-min:        rgba(black, 0.87),\n  slider-off:        rgba(black, 0.26),\n  slider-off-active: rgba(black, 0.38),\n);\n\n// Foreground palette for dark themes.\n$mat-dark-theme-foreground: (\n  base:              white,\n  divider:           $light-dividers,\n  dividers:          $light-dividers,\n  disabled:          $light-disabled-text,\n  disabled-button:   rgba(white, 0.3),\n  disabled-text:     $light-disabled-text,\n  elevation:         black,\n  hint-text:         $light-disabled-text,\n  secondary-text:    $light-secondary-text,\n  icon:              white,\n  icons:             white,\n  text:              white,\n  slider-min:        white,\n  slider-off:        rgba(white, 0.3),\n  slider-off-active: rgba(white, 0.3),\n);\n\n\n\n// For a given hue in a palette, return the contrast color from the map of contrast palettes.\n// @param $color-map\n// @param $hue\n@function mat-contrast($palette, $hue) {\n  @return map-get(map-get($palette, contrast), $hue);\n}\n\n\n// Creates a map of hues to colors for a theme. This is used to define a theme palette in terms\n// of the Material Design hues.\n// @param $color-map\n// @param $primary\n// @param $lighter\n@function mat-palette($base-palette, $default: 500, $lighter: 100, $darker: 700, $text: $default) {\n  $result: map_merge($base-palette, (\n    default: map-get($base-palette, $default),\n    lighter: map-get($base-palette, $lighter),\n    darker: map-get($base-palette, $darker),\n    text: map-get($base-palette, $text),\n\n    default-contrast: mat-contrast($base-palette, $default),\n    lighter-contrast: mat-contrast($base-palette, $lighter),\n    darker-contrast: mat-contrast($base-palette, $darker)\n  ));\n\n  // For each hue in the palette, add a \"-contrast\" color to the map.\n  @each $hue, $color in $base-palette {\n    $result: map_merge($result, (\n      '#{$hue}-contrast': mat-contrast($base-palette, $hue)\n    ));\n  }\n\n  @return $result;\n}\n\n\n// Gets a color from a theme palette (the output of mat-palette).\n// The hue can be one of the standard values (500, A400, etc.), one of the three preconfigured\n// hues (default, lighter, darker), or any of the aforementioned prefixed with \"-contrast\".\n//\n// @param $color-map The theme palette (output of mat-palette).\n// @param $hue The hue from the palette to use. If this is a value between 0 and 1, it will\n//     be treated as opacity.\n// @param $opacity The alpha channel value for the color.\n@function mat-color($palette, $hue: default, $opacity: null) {\n  // If hueKey is a number between zero and one, then it actually contains an\n  // opacity value, so recall this function with the default hue and that given opacity.\n  @if type-of($hue) == number and $hue >= 0 and $hue <= 1 {\n    @return mat-color($palette, default, $hue);\n  }\n\n  $color: map-get($palette, $hue);\n\n  @if (type-of($color) != color) {\n    // If the $color resolved to something different from a color (e.g. a CSS variable),\n    // we can't apply the opacity anyway so we return the value as is, otherwise Sass can\n    // throw an error or output something invalid.\n    @return $color;\n  }\n\n  @return rgba($color, if($opacity == null, opacity($color), $opacity));\n}\n\n\n// Creates a container object for a light theme to be given to individual component theme mixins.\n@function mat-light-theme($primary, $accent, $warn: mat-palette($mat-red)) {\n  @return (\n    primary: $primary,\n    accent: $accent,\n    warn: $warn,\n    is-dark: false,\n    foreground: $mat-light-theme-foreground,\n    background: $mat-light-theme-background,\n  );\n}\n\n\n// Creates a container object for a dark theme to be given to individual component theme mixins.\n@function mat-dark-theme($primary, $accent, $warn: mat-palette($mat-red)) {\n  @return (\n    primary: $primary,\n    accent: $accent,\n    warn: $warn,\n    is-dark: true,\n    foreground: $mat-dark-theme-foreground,\n    background: $mat-dark-theme-background,\n  );\n}\n\n\n\n$mat-ripple-color-opacity: 0.1;\n\n@mixin mat-ripple() {\n\n  // The host element of an mat-ripple directive should always have a position of \"absolute\" or\n  // \"relative\" so that the ripples inside are correctly positioned relatively to the container.\n  .mat-ripple {\n    overflow: hidden;\n\n    // By default, every ripple container should have position: relative in favor of creating an\n    // easy API for developers using the MatRipple directive.\n    position: relative;\n  }\n\n  .mat-ripple.mat-ripple-unbounded {\n    overflow: visible;\n  }\n\n  .mat-ripple-element {\n    position: absolute;\n    border-radius: 50%;\n    pointer-events: none;\n\n    transition: opacity, transform 0ms cubic-bezier(0, 0, 0.2, 1);\n    transform: scale(0);\n\n    // In high contrast mode the ripple is opaque, causing it to obstruct the content.\n    @include cdk-high-contrast(active, off) {\n      display: none;\n    }\n  }\n}\n\n/* Theme for the ripple elements.*/\n@mixin mat-ripple-theme($theme) {\n  $foreground: map_get($theme, foreground);\n  $foreground-base: map_get($foreground, base);\n\n  .mat-ripple-element {\n    // If the ripple color is resolves to a color *type*, we can use it directly, otherwise\n    // (e.g. it resolves to a CSS variable) we fall back to using the color and setting an opacity.\n    @if (type-of($foreground-base) == color) {\n      background-color: rgba($foreground-base, $mat-ripple-color-opacity);\n    }\n    @else {\n      background-color: $foreground-base;\n      opacity: $mat-ripple-color-opacity;\n    }\n  }\n}\n\n\n\n// Utility for fetching a nested value from a typography config.\n@function _mat-get-type-value($config, $level, $name) {\n  @return map-get(map-get($config, $level), $name);\n}\n\n// Gets the font size for a level inside a typography config.\n@function mat-font-size($config, $level) {\n  @return _mat-get-type-value($config, $level, font-size);\n}\n\n// Gets the line height for a level inside a typography config.\n@function mat-line-height($config, $level) {\n  @return _mat-get-type-value($config, $level, line-height);\n}\n\n// Gets the font weight for a level inside a typography config.\n@function mat-font-weight($config, $level) {\n  @return _mat-get-type-value($config, $level, font-weight);\n}\n\n// Gets the letter spacing for a level inside a typography config.\n@function mat-letter-spacing($config, $level) {\n  @return _mat-get-type-value($config, $level, letter-spacing);\n}\n\n// Gets the font-family from a typography config and removes the quotes around it.\n@function mat-font-family($config, $level: null) {\n  $font-family: map-get($config, font-family);\n\n  @if $level != null {\n    $font-family: _mat-get-type-value($config, $level, font-family);\n  }\n\n  // Guard against unquoting non-string values, because it's deprecated.\n  @return if(type-of($font-family) == string, unquote($font-family), $font-family);\n}\n\n// Outputs the shorthand `font` CSS property, based on a set of typography values. Falls back to\n// the individual properties if a value that isn't allowed in the shorthand is passed in.\n@mixin mat-typography-font-shorthand($font-size, $font-weight, $line-height, $font-family) {\n  // If any of the values are set to `inherit`, we can't use the shorthand\n  // so we fall back to passing in the individual properties.\n  @if ($font-size == inherit or\n       $font-weight == inherit or\n       $line-height == inherit or\n       $font-family == inherit or\n       $font-size == null or\n       $font-weight == null or\n       $line-height == null or\n       $font-family == null) {\n\n    font-size: $font-size;\n    font-weight: $font-weight;\n    line-height: $line-height;\n    font-family: $font-family;\n  }\n  @else {\n    // Otherwise use the shorthand `font`, because it's the least amount of bytes. Note\n    // that we need to use interpolation for `font-size/line-height` in order to prevent\n    // Sass from dividing the two values.\n    font: $font-weight #{$font-size}/#{$line-height} $font-family;\n  }\n}\n\n// Converts a typography level into CSS styles.\n@mixin mat-typography-level-to-styles($config, $level) {\n  $font-size: mat-font-size($config, $level);\n  $font-weight: mat-font-weight($config, $level);\n  $line-height: mat-line-height($config, $level);\n  $font-family: mat-font-family($config, $level);\n\n  @include mat-typography-font-shorthand($font-size, $font-weight, $line-height, $font-family);\n  letter-spacing: mat-letter-spacing($config, $level);\n}\n\n\n@mixin mat-option-theme($theme) {\n  $foreground: map-get($theme, foreground);\n  $background: map-get($theme, background);\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n\n  .mat-option {\n    color: mat-color($foreground, text);\n\n    &:hover:not(.mat-option-disabled),\n    &:focus:not(.mat-option-disabled) {\n      background: mat-color($background, hover);\n    }\n\n    // In multiple mode there is a checkbox to show that the option is selected.\n    &.mat-selected:not(.mat-option-multiple):not(.mat-option-disabled) {\n      background: mat-color($background, hover);\n    }\n\n    &.mat-active {\n      background: mat-color($background, hover);\n      color: mat-color($foreground, text);\n    }\n\n    &.mat-option-disabled {\n      color: mat-color($foreground, hint-text);\n    }\n  }\n\n  .mat-primary .mat-option.mat-selected:not(.mat-option-disabled) {\n    color: mat-color($primary, text);\n  }\n\n  .mat-accent .mat-option.mat-selected:not(.mat-option-disabled) {\n    color: mat-color($accent, text);\n  }\n\n  .mat-warn .mat-option.mat-selected:not(.mat-option-disabled) {\n    color: mat-color($warn, text);\n  }\n}\n\n@mixin mat-option-typography($config) {\n  .mat-option {\n    font: {\n      family: mat-font-family($config);\n      size: mat-font-size($config, subheading-2);\n    }\n  }\n}\n\n\n\n\n\n@mixin mat-optgroup-theme($theme) {\n  $foreground: map-get($theme, foreground);\n\n  .mat-optgroup-label {\n    color: mat-color($foreground, secondary-text);\n  }\n\n  .mat-optgroup-disabled .mat-optgroup-label {\n    color: mat-color($foreground, hint-text);\n  }\n}\n\n@mixin mat-optgroup-typography($config) {\n  .mat-optgroup-label {\n    @include mat-typography-level-to-styles($config, body-2);\n  }\n}\n\n\n\n@mixin mat-pseudo-checkbox-theme($theme) {\n  $is-dark-theme: map-get($theme, is-dark);\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n  $background: map-get($theme, background);\n\n  // NOTE(traviskaufman): While the spec calls for translucent blacks/whites for disabled colors,\n  // this does not work well with elements layered on top of one another. To get around this we\n  // blend the colors together based on the base color and the theme background.\n  $white-30pct-opacity-on-dark: #686868;\n  $black-26pct-opacity-on-light: #b0b0b0;\n  $disabled-color: if($is-dark-theme, $white-30pct-opacity-on-dark, $black-26pct-opacity-on-light);\n  $colored-box-selector: '.mat-pseudo-checkbox-checked, .mat-pseudo-checkbox-indeterminate';\n\n  .mat-pseudo-checkbox {\n    color: mat-color(map-get($theme, foreground), secondary-text);\n\n    &::after {\n      color: mat-color($background, background);\n    }\n  }\n\n  .mat-pseudo-checkbox-disabled {\n    color: $disabled-color;\n  }\n\n  .mat-primary .mat-pseudo-checkbox-checked,\n  .mat-primary .mat-pseudo-checkbox-indeterminate {\n    background: mat-color(map-get($theme, primary));\n  }\n\n  // Default to the accent color. Note that the pseudo checkboxes are meant to inherit the\n  // theme from their parent, rather than implementing their own theming, which is why we\n  // don't attach to the `mat-*` classes. Also note that this needs to be below `.mat-primary`\n  // in order to allow for the color to be overwritten if the checkbox is inside a parent that\n  // has `mat-accent` and is placed inside another parent that has `mat-primary`.\n  .mat-pseudo-checkbox-checked,\n  .mat-pseudo-checkbox-indeterminate,\n  .mat-accent .mat-pseudo-checkbox-checked,\n  .mat-accent .mat-pseudo-checkbox-indeterminate {\n    background: mat-color(map-get($theme, accent));\n  }\n\n  .mat-warn .mat-pseudo-checkbox-checked,\n  .mat-warn .mat-pseudo-checkbox-indeterminate {\n    background: mat-color(map-get($theme, warn));\n  }\n\n  .mat-pseudo-checkbox-checked,\n  .mat-pseudo-checkbox-indeterminate {\n    &.mat-pseudo-checkbox-disabled {\n      background: $disabled-color;\n    }\n  }\n}\n\n\n\n// Represents a typography level from the Material design spec.\n@function mat-typography-level(\n  $font-size,\n  $line-height: $font-size,\n  $font-weight: 400,\n  $font-family: null,\n  $letter-spacing: null) {\n\n  @return (\n    font-size: $font-size,\n    line-height: $line-height,\n    font-weight: $font-weight,\n    font-family: $font-family,\n    letter-spacing: $letter-spacing\n  );\n}\n\n// Represents a collection of typography levels.\n// Defaults come from https://material.io/guidelines/style/typography.html\n// Note: The spec doesn't mention letter spacing. The values here come from\n// eyeballing it until it looked exactly like the spec examples.\n@function mat-typography-config(\n  $font-family:   'Roboto, \"Helvetica Neue\", sans-serif',\n  $display-4:     mat-typography-level(112px, 112px, 300, $letter-spacing: -0.05em),\n  $display-3:     mat-typography-level(56px, 56px, 400, $letter-spacing: -0.02em),\n  $display-2:     mat-typography-level(45px, 48px, 400, $letter-spacing: -0.005em),\n  $display-1:     mat-typography-level(34px, 40px, 400),\n  $headline:      mat-typography-level(24px, 32px, 400),\n  $title:         mat-typography-level(20px, 32px, 500),\n  $subheading-2:  mat-typography-level(16px, 28px, 400),\n  $subheading-1:  mat-typography-level(15px, 24px, 400),\n  $body-2:        mat-typography-level(14px, 24px, 500),\n  $body-1:        mat-typography-level(14px, 20px, 400),\n  $caption:       mat-typography-level(12px, 20px, 400),\n  $button:        mat-typography-level(14px, 14px, 500),\n  // Line-height must be unit-less fraction of the font-size.\n  $input:         mat-typography-level(inherit, 1.125, 400)\n) {\n\n  // Declare an initial map with all of the levels.\n  $config: (\n    display-4:      $display-4,\n    display-3:      $display-3,\n    display-2:      $display-2,\n    display-1:      $display-1,\n    headline:       $headline,\n    title:          $title,\n    subheading-2:   $subheading-2,\n    subheading-1:   $subheading-1,\n    body-2:         $body-2,\n    body-1:         $body-1,\n    caption:        $caption,\n    button:         $button,\n    input:          $input,\n  );\n\n  // Loop through the levels and set the `font-family` of the ones that don't have one to the base.\n  // Note that Sass can't modify maps in place, which means that we need to merge and re-assign.\n  @each $key, $level in $config {\n    @if map-get($level, font-family) == null {\n      $new-level: map-merge($level, (font-family: $font-family));\n      $config: map-merge($config, ($key: $new-level));\n    }\n  }\n\n  // Add the base font family to the config.\n  @return map-merge($config, (font-family: $font-family));\n}\n\n// Adds the base typography styles, based on a config.\n@mixin mat-base-typography($config, $selector: '.mat-typography') {\n  .mat-h1, .mat-headline, #{$selector} h1 {\n    @include mat-typography-level-to-styles($config, headline);\n    margin: 0 0 16px;\n  }\n\n  .mat-h2, .mat-title, #{$selector} h2 {\n    @include mat-typography-level-to-styles($config, title);\n    margin: 0 0 16px;\n  }\n\n  .mat-h3, .mat-subheading-2, #{$selector} h3 {\n    @include mat-typography-level-to-styles($config, subheading-2);\n    margin: 0 0 16px;\n  }\n\n  .mat-h4, .mat-subheading-1, #{$selector} h4 {\n    @include mat-typography-level-to-styles($config, subheading-1);\n    margin: 0 0 16px;\n  }\n\n  // Note: the spec doesn't have anything that would correspond to h5 and h6, but we add these for\n  // consistency. The font sizes come from the Chrome user agent styles which have h5 at 0.83em\n  // and h6 at 0.67em.\n  .mat-h5, #{$selector} h5 {\n    @include mat-typography-font-shorthand(\n       // calc is used here to support css variables\n      calc(#{mat-font-size($config, body-1)} * 0.83),\n      mat-font-weight($config, body-1),\n      mat-line-height($config, body-1),\n      mat-font-family($config, body-1)\n    );\n\n    margin: 0 0 12px;\n  }\n\n  .mat-h6, #{$selector} h6 {\n    @include mat-typography-font-shorthand(\n       // calc is used here to support css variables\n      calc(#{mat-font-size($config, body-1)} * 0.67),\n      mat-font-weight($config, body-1),\n      mat-line-height($config, body-1),\n      mat-font-family($config, body-1)\n    );\n\n    margin: 0 0 12px;\n  }\n\n  .mat-body-strong, .mat-body-2 {\n    @include mat-typography-level-to-styles($config, body-2);\n  }\n\n  .mat-body, .mat-body-1, #{$selector} {\n    @include mat-typography-level-to-styles($config, body-1);\n\n    p {\n      margin: 0 0 12px;\n    }\n  }\n\n  .mat-small, .mat-caption {\n    @include mat-typography-level-to-styles($config, caption);\n  }\n\n  .mat-display-4, #{$selector} .mat-display-4 {\n    @include mat-typography-level-to-styles($config, display-4);\n    margin: 0 0 56px;\n  }\n\n  .mat-display-3, #{$selector} .mat-display-3 {\n    @include mat-typography-level-to-styles($config, display-3);\n    margin: 0 0 64px;\n  }\n\n  .mat-display-2, #{$selector} .mat-display-2 {\n    @include mat-typography-level-to-styles($config, display-2);\n    margin: 0 0 64px;\n  }\n\n  .mat-display-1, #{$selector} .mat-display-1 {\n    @include mat-typography-level-to-styles($config, display-1);\n    margin: 0 0 64px;\n  }\n}\n\n\n\n\n@mixin mat-autocomplete-theme($theme) {\n  $foreground: map-get($theme, foreground);\n  $background: map-get($theme, background);\n\n  .mat-autocomplete-panel {\n    @include _mat-theme-overridable-elevation(4, $theme);\n    background: mat-color($background, card);\n    color: mat-color($foreground, text);\n\n    // Selected options in autocompletes should not be gray, but we\n    // only want to override the background for selected options if\n    // they are *not* in hover or focus state. This change has to be\n    // made here because base option styles are shared between the\n    // autocomplete and the select.\n    .mat-option.mat-selected:not(.mat-active):not(:hover) {\n      background: mat-color($background, card);\n\n      &:not(.mat-option-disabled) {\n        color: mat-color($foreground, text);\n      }\n    }\n  }\n\n}\n\n@mixin mat-autocomplete-typography($config) { }\n\n// This contains all of the styles for the badge\n// rather than just the color/theme because of\n// no style sheet support for directives.\n\n\n\n\n\n$mat-badge-font-size: 12px;\n$mat-badge-font-weight: 600;\n$mat-badge-default-size: 22px !default;\n$mat-badge-small-size: $mat-badge-default-size - 6;\n$mat-badge-large-size: $mat-badge-default-size + 6;\n\n// Mixin for building offset given different sizes\n@mixin _mat-badge-size($size) {\n  .mat-badge-content {\n    width: $size;\n    height: $size;\n    line-height: $size;\n  }\n\n  &.mat-badge-above {\n    .mat-badge-content {\n      top: -$size / 2;\n    }\n  }\n\n  &.mat-badge-below {\n    .mat-badge-content {\n      bottom: -$size / 2;\n    }\n  }\n\n  &.mat-badge-before {\n    .mat-badge-content {\n      left: -$size;\n    }\n  }\n\n  [dir='rtl'] &.mat-badge-before {\n    .mat-badge-content {\n      left: auto;\n      right: -$size;\n    }\n  }\n\n  &.mat-badge-after {\n    .mat-badge-content {\n      right: -$size;\n    }\n  }\n\n  [dir='rtl'] &.mat-badge-after {\n    .mat-badge-content {\n      right: auto;\n      left: -$size;\n    }\n  }\n\n  &.mat-badge-overlap {\n    &.mat-badge-before {\n      .mat-badge-content {\n        left: -$size / 2;\n      }\n    }\n\n    [dir='rtl'] &.mat-badge-before {\n      .mat-badge-content {\n        left: auto;\n        right: -$size / 2;\n      }\n    }\n\n    &.mat-badge-after {\n      .mat-badge-content {\n        right: -$size / 2;\n      }\n    }\n\n    [dir='rtl'] &.mat-badge-after {\n      .mat-badge-content {\n        right: auto;\n        left: -$size / 2;\n      }\n    }\n  }\n}\n\n@mixin mat-badge-theme($theme) {\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n  $primary: map-get($theme, primary);\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n  .mat-badge-content {\n    color: mat-color($primary, default-contrast);\n    background: mat-color($primary);\n\n    @include cdk-high-contrast(active, off) {\n      outline: solid 1px;\n      border-radius: 0;\n    }\n  }\n\n  .mat-badge-accent {\n    .mat-badge-content {\n      background: mat-color($accent);\n      color: mat-color($accent, default-contrast);\n    }\n  }\n\n  .mat-badge-warn {\n    .mat-badge-content {\n      color: mat-color($warn, default-contrast);\n      background: mat-color($warn);\n    }\n  }\n\n  .mat-badge {\n    position: relative;\n  }\n\n  .mat-badge-hidden {\n    .mat-badge-content {\n      display: none;\n    }\n  }\n\n  .mat-badge-disabled {\n    .mat-badge-content {\n      $app-background: mat-color($background, 'background');\n      $badge-color: mat-color($foreground, disabled-button);\n\n      // The disabled color usually has some kind of opacity, but because the badge is overlayed\n      // on top of something else, it won't look good if it's opaque. If it is a color *type*,\n      // we convert it into a solid color by taking the opacity from the rgba value and using\n      // the value to determine the percentage of the background to put into foreground when\n      // mixing the colors together.\n      @if (type-of($badge-color) == color and type-of($app-background) == color) {\n        $badge-opacity: opacity($badge-color);\n        background: mix($app-background, rgba($badge-color, 1), (1 - $badge-opacity) * 100%);\n      }\n      @else {\n        background: $badge-color;\n      }\n\n      color: mat-color($foreground, disabled-text);\n    }\n  }\n\n  .mat-badge-content {\n    position: absolute;\n    text-align: center;\n    display: inline-block;\n    border-radius: 50%;\n    transition: transform 200ms ease-in-out;\n    transform: scale(0.6);\n    overflow: hidden;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    pointer-events: none;\n  }\n\n  .ng-animate-disabled .mat-badge-content,\n  .mat-badge-content._mat-animation-noopable {\n    transition: none;\n  }\n\n  // The active class is added after the element is added\n  // so it can animate scale to default\n  .mat-badge-content.mat-badge-active {\n    // Scale to `none` instead of `1` to avoid blurry text in some browsers.\n    transform: none;\n  }\n\n  .mat-badge-small {\n    @include _mat-badge-size($mat-badge-small-size);\n  }\n  .mat-badge-medium {\n    @include _mat-badge-size($mat-badge-default-size);\n  }\n  .mat-badge-large {\n    @include _mat-badge-size($mat-badge-large-size);\n  }\n}\n\n@mixin mat-badge-typography($config) {\n  .mat-badge-content {\n    font-weight: $mat-badge-font-weight;\n    font-size: $mat-badge-font-size;\n    font-family: mat-font-family($config);\n  }\n\n  .mat-badge-small .mat-badge-content {\n    // Set the font size to 75% of the original.\n    font-size: $mat-badge-font-size * 0.75;\n  }\n\n  .mat-badge-large .mat-badge-content {\n    font-size: $mat-badge-font-size * 2;\n  }\n}\n\n\n\n\n\n@mixin mat-bottom-sheet-theme($theme) {\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n  .mat-bottom-sheet-container {\n    @include _mat-theme-elevation(16, $theme);\n    background: mat-color($background, dialog);\n    color: mat-color($foreground, text);\n  }\n}\n\n@mixin mat-bottom-sheet-typography($config) {\n  .mat-bottom-sheet-container {\n    @include mat-typography-level-to-styles($config, body-1);\n  }\n}\n\n\n\n\n\n$_mat-button-ripple-opacity: 0.1;\n\n// Applies a focus style to an mat-button element for each of the supported palettes.\n@mixin _mat-button-focus-overlay-color($theme) {\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n\n  &.mat-primary .mat-button-focus-overlay {\n    background-color: mat-color($primary);\n  }\n\n  &.mat-accent .mat-button-focus-overlay {\n    background-color: mat-color($accent);\n  }\n\n  &.mat-warn .mat-button-focus-overlay {\n    background-color: mat-color($warn);\n  }\n\n  &[disabled] .mat-button-focus-overlay {\n    background-color: transparent;\n  }\n}\n\n// Applies the background color for a ripple. If the value provided is not a Sass color,\n// we assume that we've been given a CSS variable. Since we can't perform alpha-blending\n// on a CSS variable, we instead add the opacity directly to the ripple element.\n@mixin _mat-button-ripple-background($palette, $hue, $opacity) {\n  $background-color: mat-color($palette, $hue, $opacity);\n  background-color: $background-color;\n  @if (type-of($background-color) != color) {\n    opacity: $opacity;\n  }\n}\n\n@mixin _mat-button-ripple-color($theme, $hue, $opacity: $_mat-button-ripple-opacity) {\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n\n  &.mat-primary .mat-ripple-element {\n    @include _mat-button-ripple-background($primary, $hue, $opacity);\n  }\n\n  &.mat-accent .mat-ripple-element {\n    @include _mat-button-ripple-background($accent, $hue, $opacity);\n  }\n\n  &.mat-warn .mat-ripple-element {\n    @include _mat-button-ripple-background($warn, $hue, $opacity);\n  }\n}\n\n// Applies a property to an mat-button element for each of the supported palettes.\n@mixin _mat-button-theme-property($theme, $property, $hue) {\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n  &.mat-primary {\n    #{$property}: mat-color($primary, $hue);\n  }\n  &.mat-accent {\n    #{$property}: mat-color($accent, $hue);\n  }\n  &.mat-warn {\n    #{$property}: mat-color($warn, $hue);\n  }\n\n  &.mat-primary, &.mat-accent, &.mat-warn, &[disabled] {\n    &[disabled] {\n      $palette: if($property == 'color', $foreground, $background);\n      #{$property}: mat-color($palette, disabled-button);\n    }\n  }\n}\n\n@mixin mat-button-theme($theme) {\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n  .mat-button, .mat-icon-button, .mat-stroked-button {\n    // Buttons without a background color should inherit the font color. This is necessary to\n    // ensure that the button is readable on custom background colors. It's wrong to always assume\n    // that those buttons are always placed inside of containers with the default background\n    // color of the theme (e.g. themed toolbars).\n    color: inherit;\n    background: transparent;\n\n    @include _mat-button-theme-property($theme, 'color', text);\n    @include _mat-button-focus-overlay-color($theme);\n\n    // Setup the ripple color to be based on the text color. This ensures that the ripples\n    // are matching with the current theme palette and are in contrast to the background color\n    // (e.g in themed toolbars).\n    .mat-ripple-element {\n      opacity: $_mat-button-ripple-opacity;\n      background-color: currentColor;\n    }\n  }\n\n  .mat-button-focus-overlay {\n    background: map_get($foreground, base);\n  }\n\n  // Note: this needs a bit extra specificity, because we're not guaranteed the inclusion\n  // order of the theme styles and the button reset may end up resetting this as well.\n  .mat-stroked-button:not([disabled]) {\n    border-color: mat-color($foreground, divider);\n  }\n\n  .mat-flat-button, .mat-raised-button, .mat-fab, .mat-mini-fab {\n    // Default font and background color when not using any color palette.\n    color: mat-color($foreground, text);\n    background-color: mat-color($background, raised-button);\n\n    @include _mat-button-theme-property($theme, 'color', default-contrast);\n    @include _mat-button-theme-property($theme, 'background-color', default);\n    @include _mat-button-ripple-color($theme, default-contrast);\n  }\n\n  .mat-stroked-button, .mat-flat-button {\n    @include _mat-theme-overridable-elevation(0, $theme);\n  }\n\n  .mat-raised-button {\n    @include _mat-theme-overridable-elevation(2, $theme);\n\n    &:not([disabled]):active {\n      @include _mat-theme-overridable-elevation(8, $theme);\n    }\n\n    &[disabled] {\n      @include _mat-theme-overridable-elevation(0, $theme);\n    }\n  }\n\n  .mat-fab, .mat-mini-fab {\n    @include _mat-theme-overridable-elevation(6, $theme);\n\n    &:not([disabled]):active {\n      @include _mat-theme-overridable-elevation(12, $theme);\n    }\n\n    &[disabled] {\n      @include _mat-theme-overridable-elevation(0, $theme);\n    }\n  }\n}\n\n@mixin mat-button-typography($config) {\n  .mat-button, .mat-raised-button, .mat-icon-button, .mat-stroked-button,\n  .mat-flat-button, .mat-fab, .mat-mini-fab {\n    font: {\n      family: mat-font-family($config, button);\n      size: mat-font-size($config, button);\n      weight: mat-font-weight($config, button);\n    }\n  }\n}\n\n\n\n\n\n\n@mixin mat-button-toggle-theme($theme) {\n  $foreground: map-get($theme, foreground);\n  $background: map-get($theme, background);\n  $divider-color: mat-color($foreground, divider);\n\n  .mat-button-toggle-standalone,\n  .mat-button-toggle-group {\n    @include _mat-theme-elevation(2, $theme);\n  }\n\n  .mat-button-toggle-standalone.mat-button-toggle-appearance-standard,\n  .mat-button-toggle-group-appearance-standard {\n    box-shadow: none;\n  }\n\n  .mat-button-toggle {\n    color: mat-color($foreground, hint-text);\n\n    .mat-button-toggle-focus-overlay {\n      background-color: mat-color($background, focused-button);\n    }\n  }\n\n  .mat-button-toggle-appearance-standard {\n    color: mat-color($foreground, text);\n    background: mat-color($background, card);\n\n    .mat-button-toggle-focus-overlay {\n      background-color: mat-color($background, focused-button, 1);\n    }\n  }\n\n  .mat-button-toggle-group-appearance-standard .mat-button-toggle + .mat-button-toggle {\n    border-left: solid 1px $divider-color;\n  }\n\n  [dir='rtl'] .mat-button-toggle-group-appearance-standard .mat-button-toggle + .mat-button-toggle {\n    border-left: none;\n    border-right: solid 1px $divider-color;\n  }\n\n  .mat-button-toggle-group-appearance-standard.mat-button-toggle-vertical {\n    .mat-button-toggle + .mat-button-toggle {\n      border-left: none;\n      border-right: none;\n      border-top: solid 1px $divider-color;\n    }\n  }\n\n  .mat-button-toggle-checked {\n    background-color: mat-color($background, selected-button);\n    color: mat-color($foreground, secondary-text);\n\n    &.mat-button-toggle-appearance-standard {\n      color: mat-color($foreground, text);\n    }\n  }\n\n  .mat-button-toggle-disabled {\n    color: mat-color($foreground, disabled-button);\n    background-color: mat-color($background, disabled-button-toggle);\n\n    &.mat-button-toggle-appearance-standard {\n      background: mat-color($background, card);\n    }\n\n    &.mat-button-toggle-checked {\n      background-color: mat-color($background, selected-disabled-button);\n    }\n  }\n\n  .mat-button-toggle-standalone.mat-button-toggle-appearance-standard,\n  .mat-button-toggle-group-appearance-standard {\n    border: solid 1px $divider-color;\n  }\n}\n\n@mixin mat-button-toggle-typography($config) {\n  .mat-button-toggle {\n    font-family: mat-font-family($config);\n  }\n}\n\n\n\n\n\n\n\n@mixin mat-card-theme($theme) {\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n  .mat-card {\n    @include _mat-theme-overridable-elevation(1, $theme);\n    background: mat-color($background, card);\n    color: mat-color($foreground, text);\n\n    // Needs extra specificity to be able to override the elevation selectors.\n    &.mat-card-flat {\n      @include _mat-theme-overridable-elevation(0, $theme);\n    }\n  }\n\n  .mat-card-subtitle {\n    color: mat-color($foreground, secondary-text);\n  }\n}\n\n@mixin mat-card-typography($config) {\n  .mat-card {\n    font-family: mat-font-family($config);\n  }\n\n  .mat-card-title {\n    font: {\n      size: mat-font-size($config, headline);\n      weight: mat-font-weight($config, title);\n    }\n  }\n\n  .mat-card-header .mat-card-title {\n    font-size: mat-font-size($config, title);\n  }\n\n  .mat-card-subtitle,\n  .mat-card-content {\n    font-size: mat-font-size($config, body-1);\n  }\n}\n\n\n\n\n\n@mixin mat-checkbox-theme($theme) {\n  $is-dark-theme: map-get($theme, is-dark);\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n\n  // The color of the checkbox's checkmark / mixedmark.\n  $checkbox-mark-color: mat-color($background, background);\n\n  // NOTE(traviskaufman): While the spec calls for translucent blacks/whites for disabled colors,\n  // this does not work well with elements layered on top of one another. To get around this we\n  // blend the colors together based on the base color and the theme background.\n  $white-30pct-opacity-on-dark: #686868;\n  $black-26pct-opacity-on-light: #b0b0b0;\n  $disabled-color: if($is-dark-theme, $white-30pct-opacity-on-dark, $black-26pct-opacity-on-light);\n\n  .mat-checkbox-frame {\n    border-color: mat-color($foreground, secondary-text);\n  }\n\n  .mat-checkbox-checkmark {\n    fill: $checkbox-mark-color;\n  }\n\n  .mat-checkbox-checkmark-path {\n    // !important is needed here because a stroke must be set as an\n    // attribute on the SVG in order for line animation to work properly.\n    stroke: $checkbox-mark-color !important;\n  }\n\n  .mat-checkbox-mixedmark {\n    background-color: $checkbox-mark-color;\n  }\n\n  .mat-checkbox-indeterminate, .mat-checkbox-checked {\n    &.mat-primary .mat-checkbox-background {\n      background-color: mat-color($primary);\n    }\n\n    &.mat-accent .mat-checkbox-background {\n      background-color: mat-color($accent);\n    }\n\n    &.mat-warn .mat-checkbox-background {\n      background-color: mat-color($warn);\n    }\n  }\n\n  .mat-checkbox-disabled {\n    &.mat-checkbox-checked,\n    &.mat-checkbox-indeterminate {\n      .mat-checkbox-background {\n        background-color: $disabled-color;\n      }\n    }\n\n    &:not(.mat-checkbox-checked) {\n      .mat-checkbox-frame {\n        border-color: $disabled-color;\n      }\n    }\n\n    .mat-checkbox-label {\n      color: mat-color($foreground, secondary-text);\n    }\n  }\n\n  // Switch this to a solid color since we're using `opacity`\n  // to control how opaque the ripple should be.\n  .mat-checkbox .mat-ripple-element {\n    background-color: map_get(map-get($theme, foreground), base);\n  }\n\n  .mat-checkbox-checked:not(.mat-checkbox-disabled),\n  .mat-checkbox:active:not(.mat-checkbox-disabled) {\n    &.mat-primary .mat-ripple-element {\n      background: mat-color($primary);\n    }\n\n    &.mat-accent .mat-ripple-element {\n      background: mat-color($accent);\n    }\n\n    &.mat-warn .mat-ripple-element {\n      background: mat-color($warn);\n    }\n  }\n}\n\n@mixin mat-checkbox-typography($config) {\n  .mat-checkbox {\n    font-family: mat-font-family($config);\n  }\n\n  // TODO(kara): Remove this style when fixing vertical baseline\n  .mat-checkbox-layout .mat-checkbox-label {\n    line-height: mat-line-height($config, body-2);\n  }\n}\n\n\n\n\n\n\n$mat-chip-remove-font-size: 18px;\n\n@mixin mat-chips-color($foreground, $background) {\n  background-color: $background;\n  color: $foreground;\n\n  .mat-chip-remove {\n    color: $foreground;\n    opacity: 0.4;\n  }\n}\n\n\n// Applies the background color for a ripple element.\n// If the color value provided is not a Sass color,\n// we assume that we've been given a CSS variable.\n// Since we can't perform alpha-blending on a CSS variable,\n// we instead add the opacity directly to the ripple element.\n@mixin _mat-chips-ripple-background($palette, $default-contrast, $opacity) {\n  $background-color: mat-color($palette, $default-contrast, $opacity);\n  background-color: $background-color;\n  @if (type-of($background-color) != color) {\n    opacity: $opacity;\n  }\n}\n\n@mixin mat-chips-theme-color($palette) {\n  @include mat-chips-color(mat-color($palette, default-contrast), mat-color($palette));\n\n  .mat-ripple-element {\n   @include _mat-chips-ripple-background($palette, default-contrast, 0.1);\n  }\n}\n\n@mixin mat-chips-theme($theme) {\n  $is-dark-theme: map-get($theme, is-dark);\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n  $unselected-background: mat-color($background, unselected-chip);\n  $unselected-foreground: mat-color($foreground, text);\n\n  .mat-chip.mat-standard-chip {\n    @include mat-chips-color($unselected-foreground, $unselected-background);\n\n    &:not(.mat-chip-disabled) {\n      &:active {\n        @include _mat-theme-elevation(3, $theme);\n      }\n\n      .mat-chip-remove:hover {\n        opacity: 0.54;\n      }\n    }\n\n    &.mat-chip-disabled {\n      opacity: 0.4;\n    }\n\n    &::after {\n      background: map_get($foreground, base);\n    }\n  }\n\n  .mat-chip.mat-standard-chip.mat-chip-selected {\n    &.mat-primary {\n      @include mat-chips-theme-color($primary);\n    }\n\n    &.mat-warn {\n      @include mat-chips-theme-color($warn);\n    }\n\n    &.mat-accent {\n      @include mat-chips-theme-color($accent);\n    }\n  }\n}\n\n@mixin mat-chips-typography($config) {\n  .mat-chip {\n    font-size: mat-font-size($config, body-2);\n    font-weight: mat-font-weight($config, body-2);\n\n    .mat-chip-trailing-icon.mat-icon,\n    .mat-chip-remove.mat-icon {\n      font-size: $mat-chip-remove-font-size;\n    }\n  }\n}\n\n\n\n\n\n@mixin mat-table-theme($theme) {\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n  .mat-table {\n    background: mat-color($background, 'card');\n  }\n\n  .mat-table thead, .mat-table tbody, .mat-table tfoot,\n  mat-header-row, mat-row, mat-footer-row,\n  [mat-header-row], [mat-row], [mat-footer-row],\n  .mat-table-sticky {\n    background: inherit;\n  }\n\n  mat-row, mat-header-row, mat-footer-row,\n  th.mat-header-cell, td.mat-cell, td.mat-footer-cell {\n    border-bottom-color: mat-color($foreground, divider);\n  }\n\n  .mat-header-cell {\n    color: mat-color($foreground, secondary-text);\n  }\n\n  .mat-cell, .mat-footer-cell {\n    color: mat-color($foreground, text);\n  }\n}\n\n@mixin mat-table-typography($config) {\n  .mat-table {\n    font-family: mat-font-family($config);\n  }\n\n  .mat-header-cell {\n    font-size: mat-font-size($config, caption);\n    font-weight: mat-font-weight($config, body-2);\n  }\n\n  .mat-cell, .mat-footer-cell {\n    font-size: mat-font-size($config, body-1);\n  }\n}\n\n\n\n\n\n\n\n$mat-datepicker-selected-today-box-shadow-width: 1px;\n$mat-datepicker-selected-fade-amount: 0.6;\n$mat-datepicker-today-fade-amount: 0.2;\n$mat-calendar-body-font-size: 13px !default;\n$mat-calendar-weekday-table-font-size: 11px !default;\n\n@mixin _mat-datepicker-color($palette) {\n  .mat-calendar-body-selected {\n    background-color: mat-color($palette);\n    color: mat-color($palette, default-contrast);\n  }\n\n  .mat-calendar-body-disabled > .mat-calendar-body-selected {\n    $background: mat-color($palette);\n\n    @if (type-of($background) == color) {\n      background-color: fade-out($background, $mat-datepicker-selected-fade-amount);\n    }\n    @else {\n      // If we couldn't resolve to background to a color (e.g. it's a CSS variable),\n      // fall back to fading the content out via `opacity`.\n      opacity: $mat-datepicker-today-fade-amount;\n    }\n  }\n\n  .mat-calendar-body-today.mat-calendar-body-selected {\n    box-shadow: inset 0 0 0 $mat-datepicker-selected-today-box-shadow-width\n                mat-color($palette, default-contrast);\n  }\n}\n\n@mixin mat-datepicker-theme($theme) {\n  $foreground: map-get($theme, foreground);\n  $background: map-get($theme, background);\n\n  .mat-calendar-arrow {\n    border-top-color: mat-color($foreground, icon);\n  }\n\n  // The prev/next buttons need a bit more specificity to\n  // avoid being overwritten by the .mat-icon-button.\n  .mat-datepicker-toggle,\n  .mat-datepicker-content .mat-calendar-next-button,\n  .mat-datepicker-content .mat-calendar-previous-button {\n    color: mat-color($foreground, icon);\n  }\n\n  .mat-calendar-table-header {\n    color: mat-color($foreground, hint-text);\n  }\n\n  .mat-calendar-table-header-divider::after {\n    background: mat-color($foreground, divider);\n  }\n\n  .mat-calendar-body-label {\n    color: mat-color($foreground, secondary-text);\n  }\n\n  .mat-calendar-body-cell-content {\n    color: mat-color($foreground, text);\n    border-color: transparent;\n  }\n\n  .mat-calendar-body-disabled > .mat-calendar-body-cell-content:not(.mat-calendar-body-selected) {\n    color: mat-color($foreground, disabled-text);\n  }\n\n  .mat-calendar-body-cell:not(.mat-calendar-body-disabled):hover,\n  .cdk-keyboard-focused .mat-calendar-body-active,\n  .cdk-program-focused .mat-calendar-body-active {\n    & > .mat-calendar-body-cell-content:not(.mat-calendar-body-selected) {\n      background-color: mat-color($background, hover);\n    }\n  }\n\n  .mat-calendar-body-today:not(.mat-calendar-body-selected) {\n    // Note: though it's not text, the border is a hint about the fact that this is today's date,\n    // so we use the hint color.\n    border-color: mat-color($foreground, hint-text);\n  }\n\n  .mat-calendar-body-disabled > .mat-calendar-body-today:not(.mat-calendar-body-selected) {\n    $color: mat-color($foreground, hint-text);\n\n    @if (type-of($color) == color) {\n      border-color: fade-out($color, $mat-datepicker-today-fade-amount);\n    }\n    @else {\n      // If the color didn't resolve to a color value, but something like a CSS variable, we can't\n      // fade it out so we fall back to reducing the element opacity. Note that we don't use the\n      // $mat-datepicker-today-fade-amount, because hint text usually has some opacity applied\n      // to it already and we don't want them to stack on top of each other.\n      opacity: 0.5;\n    }\n  }\n\n  @include _mat-datepicker-color(map-get($theme, primary));\n\n  .mat-datepicker-content {\n    @include _mat-theme-elevation(4, $theme);\n    background-color: mat-color($background, card);\n    color: mat-color($foreground, text);\n\n    &.mat-accent {\n      @include _mat-datepicker-color(map-get($theme, accent));\n    }\n\n    &.mat-warn {\n      @include _mat-datepicker-color(map-get($theme, warn));\n    }\n  }\n\n  .mat-datepicker-content-touch {\n    @include _mat-theme-elevation(0, $theme);\n  }\n\n  .mat-datepicker-toggle-active {\n    color: mat-color(map-get($theme, primary), text);\n\n    &.mat-accent {\n      color: mat-color(map-get($theme, accent), text);\n    }\n\n    &.mat-warn {\n      color: mat-color(map-get($theme, warn), text);\n    }\n  }\n}\n\n@mixin mat-datepicker-typography($config) {\n  .mat-calendar {\n    font-family: mat-font-family($config);\n  }\n\n  .mat-calendar-body {\n    font-size: $mat-calendar-body-font-size;\n  }\n\n  .mat-calendar-body-label,\n  .mat-calendar-period-button {\n    font: {\n      size: mat-font-size($config, button);\n      weight: mat-font-weight($config, button);\n    }\n  }\n\n  .mat-calendar-table-header th {\n    font: {\n      size: $mat-calendar-weekday-table-font-size;\n      weight: mat-font-weight($config, body-1);\n    }\n  }\n}\n\n\n\n\n\n\n\n@mixin mat-dialog-theme($theme) {\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n  .mat-dialog-container {\n    @include _mat-theme-elevation(24, $theme);\n    background: mat-color($background, dialog);\n    color: mat-color($foreground, text);\n  }\n}\n\n@mixin mat-dialog-typography($config) {\n  .mat-dialog-title {\n    @include mat-typography-level-to-styles($config, title);\n  }\n}\n\n\n\n\n\n\n@mixin mat-expansion-panel-theme($theme) {\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n  .mat-expansion-panel {\n    @include _mat-theme-overridable-elevation(2, $theme);\n    background: mat-color($background, card);\n    color: mat-color($foreground, text);\n  }\n\n  .mat-action-row {\n    border-top-color: mat-color($foreground, divider);\n  }\n\n  .mat-expansion-panel {\n    & .mat-expansion-panel-header.cdk-keyboard-focused,\n    & .mat-expansion-panel-header.cdk-program-focused,\n    &:not(.mat-expanded) .mat-expansion-panel-header:hover {\n      &:not([aria-disabled='true']) {\n        background: mat-color($background, hover);\n      }\n    }\n  }\n\n  // Disable the hover on touch devices since it can appear like it is stuck. We can't use\n  // `@media (hover)` above, because the desktop support browser support isn't great.\n  @media (hover: none) {\n    .mat-expansion-panel:not(.mat-expanded):not([aria-disabled='true'])\n      .mat-expansion-panel-header:hover {\n      background: mat-color($background, card);\n    }\n  }\n\n  .mat-expansion-panel-header-title {\n    color: mat-color($foreground, text);\n  }\n\n  .mat-expansion-panel-header-description,\n  .mat-expansion-indicator::after {\n    color: mat-color($foreground, secondary-text);\n  }\n\n  .mat-expansion-panel-header[aria-disabled='true'] {\n    color: mat-color($foreground, disabled-button);\n\n    .mat-expansion-panel-header-title,\n    .mat-expansion-panel-header-description {\n      color: inherit;\n    }\n  }\n}\n\n@mixin mat-expansion-panel-typography($config) {\n  .mat-expansion-panel-header {\n    font: {\n      family: mat-font-family($config, subheading-1);\n      size: mat-font-size($config, subheading-1);\n      weight: mat-font-weight($config, subheading-1);\n    }\n  }\n\n  .mat-expansion-panel-content {\n    @include mat-typography-level-to-styles($config, body-1);\n  }\n}\n\n\n\n\n// This mixin will ensure that lines that overflow the container will hide the overflow and\n// truncate neatly with an ellipsis.\n@mixin mat-truncate-line() {\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n// Mixin to provide all mat-line styles, changing secondary font size based on whether the list\n// is in dense mode.\n@mixin mat-line-base($secondary-font-size) {\n  .mat-line {\n    @include mat-truncate-line();\n    display: block;\n    box-sizing: border-box;\n\n    // all lines but the top line should have smaller text\n    &:nth-child(n+2) {\n      font-size: $secondary-font-size;\n    }\n  }\n}\n\n// This mixin normalizes default element styles, e.g. font weight for heading text.\n@mixin mat-normalize-text() {\n  & > * {\n    margin: 0;\n    padding: 0;\n    font-weight: normal;\n    font-size: inherit;\n  }\n}\n\n// This mixin provides base styles for the wrapper around mat-line elements in a list.\n@mixin mat-line-wrapper-base() {\n  @include mat-normalize-text();\n\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  box-sizing: border-box;\n  overflow: hidden;\n\n  // Must remove wrapper when lines are empty or it takes up horizontal\n  // space and pushes other elements to the right.\n  &:empty {\n    display: none;\n  }\n}\n\n\n\n// Include this empty mixin for consistency with the other components.\n@mixin mat-grid-list-theme($theme) { }\n\n@mixin mat-grid-list-typography($config) {\n  .mat-grid-tile-header,\n  .mat-grid-tile-footer {\n    @include mat-line-base(mat-font-size($config, caption));\n    font-size: mat-font-size($config, body-1);\n  }\n}\n\n\n\n\n// Include this empty mixin for consistency with the other components.\n@mixin mat-icon-theme($theme) {\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n  .mat-icon {\n    &.mat-primary {\n      color: mat-color($primary, text);\n    }\n\n    &.mat-accent {\n      color: mat-color($accent, text);\n    }\n\n    &.mat-warn {\n      color: mat-color($warn, text);\n    }\n  }\n}\n\n@mixin mat-icon-typography($config) { }\n\n\n\n\n\n// Renders a gradient for showing the dashed line when the input is disabled.\n// Unlike using a border, a gradient allows us to adjust the spacing of the dotted line\n// to match the Material Design spec.\n@mixin mat-control-disabled-underline($color) {\n  background-image: linear-gradient(to right, $color 0%, $color 33%, transparent 0%);\n  background-size: 4px 100%;\n  background-repeat: repeat-x;\n}\n\n// Figures out the color of the placeholder for a form control.\n// Used primarily to prevent the various form controls from\n// becoming out of sync since these colors aren't in a palette.\n@function _mat-control-placeholder-color($theme) {\n  $foreground: map-get($theme, foreground);\n  $is-dark-theme: map-get($theme, is-dark);\n  @return mat-color($foreground, secondary-text, if($is-dark-theme, 0.5, 0.42));\n}\n\n\n/* stylelint-disable material/no-prefixes */\n@mixin user-select($value) {\n  -webkit-user-select: $value;\n  -moz-user-select: $value;\n  -ms-user-select: $value;\n  user-select: $value;\n}\n\n@mixin input-placeholder {\n  &::placeholder {\n    @content;\n  }\n\n  &::-moz-placeholder {\n    @content;\n  }\n\n  &::-webkit-input-placeholder {\n    @content;\n  }\n\n  &:-ms-input-placeholder {\n    @content;\n  }\n}\n\n@mixin cursor-grab {\n  cursor: -webkit-grab;\n  cursor: grab;\n}\n\n@mixin cursor-grabbing {\n  cursor: -webkit-grabbing;\n  cursor: grabbing;\n}\n\n@mixin backface-visibility($value) {\n  -webkit-backface-visibility: $value;\n  backface-visibility: $value;\n}\n/* stylelint-enable */\n\n\n\n@mixin mat-input-theme($theme) {\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n  $foreground: map-get($theme, foreground);\n\n  .mat-form-field-type-mat-native-select .mat-form-field-infix::after {\n    color: mat-color($foreground, secondary-text);\n  }\n\n  .mat-input-element:disabled,\n  .mat-form-field-type-mat-native-select.mat-form-field-disabled .mat-form-field-infix::after {\n    color: mat-color($foreground, disabled-text);\n  }\n\n  .mat-input-element {\n    caret-color: mat-color($primary, text);\n\n    @include input-placeholder {\n      color: _mat-control-placeholder-color($theme);\n    }\n\n    // On dark themes we set the native `select` color to some shade of white,\n    // however the color propagates to all of the `option` elements, which are\n    // always on a white background inside the dropdown, causing them to blend in.\n    // Since we can't change background of the dropdown, we need to explicitly\n    // reset the color of the options to something dark.\n    @if (map-get($theme, is-dark)) {\n      option {\n        color: $dark-primary-text;\n      }\n\n      option:disabled {\n        color: $dark-disabled-text;\n      }\n    }\n  }\n\n  .mat-accent .mat-input-element {\n    caret-color: mat-color($accent, text);\n  }\n\n  .mat-warn .mat-input-element,\n  .mat-form-field-invalid .mat-input-element {\n    caret-color: mat-color($warn, text);\n  }\n\n  .mat-form-field-type-mat-native-select.mat-form-field-invalid .mat-form-field-infix::after {\n    color: mat-color($warn, text);\n  }\n}\n\n@mixin mat-input-typography($config) {\n  // The unit-less line-height from the font config.\n  $line-height: mat-line-height($config, input);\n\n  // The amount of space between the top of the line and the top of the actual text\n  // (as a fraction of the font-size).\n  $line-spacing: ($line-height - 1) / 2;\n\n  // <input> elements seem to have their height set slightly too large on Safari causing the text to\n  // be misaligned w.r.t. the placeholder. Adding this margin corrects it.\n  input.mat-input-element {\n    margin-top: -$line-spacing * 1em;\n  }\n}\n\n\n\n\n\n\n\n@mixin mat-list-theme($theme) {\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n  .mat-list-base {\n    .mat-list-item {\n      color: mat-color($foreground, text);\n    }\n\n    .mat-list-option {\n      color: mat-color($foreground, text);\n    }\n\n    .mat-subheader {\n      color: mat-color($foreground, secondary-text);\n    }\n  }\n\n  .mat-list-item-disabled {\n    background-color: mat-color($background, disabled-list-option);\n  }\n\n  .mat-list-option,\n  .mat-nav-list .mat-list-item,\n  .mat-action-list .mat-list-item {\n    &:hover, &:focus {\n      background: mat-color($background, 'hover');\n    }\n  }\n}\n\n@mixin mat-list-typography($config) {\n  $font-family: mat-font-family($config);\n\n  .mat-list-item {\n    font-family: $font-family;\n  }\n\n  .mat-list-option {\n    font-family: $font-family;\n  }\n\n  // Default list\n  .mat-list-base {\n    .mat-list-item {\n      font-size: mat-font-size($config, subheading-2);\n      @include mat-line-base(mat-font-size($config, body-1));\n    }\n\n    .mat-list-option {\n      font-size: mat-font-size($config, subheading-2);\n      @include mat-line-base(mat-font-size($config, body-1));\n    }\n\n    .mat-subheader {\n      font-family: mat-font-family($config, body-2);\n      font-size: mat-font-size($config, body-2);\n      font-weight: mat-font-weight($config, body-2);\n    }\n  }\n\n  // Dense list\n  .mat-list-base[dense] {\n    .mat-list-item {\n      font-size: mat-font-size($config, caption);\n      @include mat-line-base(mat-font-size($config, caption));\n    }\n\n    .mat-list-option {\n      font-size: mat-font-size($config, caption);\n      @include mat-line-base(mat-font-size($config, caption));\n    }\n\n    .mat-subheader {\n      font-family: $font-family;\n      font-size: mat-font-size($config, caption);\n      font-weight: mat-font-weight($config, body-2);\n    }\n  }\n}\n\n\n\n\n\n\n\n@mixin mat-menu-theme($theme) {\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n  .mat-menu-panel {\n    @include _mat-theme-overridable-elevation(4, $theme);\n    background: mat-color($background, 'card');\n  }\n\n  .mat-menu-item {\n    background: transparent;\n    color: mat-color($foreground, 'text');\n\n    &[disabled] {\n      &, &::after {\n        color: mat-color($foreground, 'disabled');\n      }\n    }\n  }\n\n  .mat-menu-item .mat-icon-no-color,\n  .mat-menu-item-submenu-trigger::after {\n    color: mat-color($foreground, 'icon');\n  }\n\n  .mat-menu-item:hover,\n  .mat-menu-item.cdk-program-focused,\n  .mat-menu-item.cdk-keyboard-focused,\n  .mat-menu-item-highlighted {\n    &:not([disabled]) {\n      background: mat-color($background, 'hover');\n    }\n  }\n}\n\n@mixin mat-menu-typography($config) {\n  .mat-menu-item {\n    font: {\n      family: mat-font-family($config, body-1);\n      size: mat-font-size($config, body-1);\n      weight: mat-font-weight($config, body-1);\n    }\n  }\n}\n\n\n\n\n\n\n@mixin mat-paginator-theme($theme) {\n  $foreground: map-get($theme, foreground);\n  $background: map-get($theme, background);\n\n  .mat-paginator {\n    background: mat-color($background, 'card');\n  }\n\n  .mat-paginator,\n  .mat-paginator-page-size .mat-select-trigger {\n    color: mat-color($foreground, secondary-text);\n  }\n\n  .mat-paginator-decrement,\n  .mat-paginator-increment {\n    border-top: 2px solid mat-color($foreground, 'icon');\n    border-right: 2px solid mat-color($foreground, 'icon');\n  }\n\n  .mat-paginator-first,\n  .mat-paginator-last {\n    border-top: 2px solid mat-color($foreground, 'icon');\n  }\n\n  .mat-icon-button[disabled] {\n    .mat-paginator-decrement,\n    .mat-paginator-increment,\n    .mat-paginator-first,\n    .mat-paginator-last {\n      border-color: mat-color($foreground, 'disabled');\n    }\n  }\n}\n\n@mixin mat-paginator-typography($config) {\n  .mat-paginator,\n  .mat-paginator-page-size .mat-select-trigger {\n    font: {\n      family: mat-font-family($config, caption);\n      size: mat-font-size($config, caption);\n    }\n  }\n}\n\n\n\n\n\n@mixin mat-progress-bar-theme($theme) {\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n\n  .mat-progress-bar-background {\n    fill: mat-color($primary, lighter);\n  }\n\n  .mat-progress-bar-buffer {\n    background-color: mat-color($primary, lighter);\n  }\n\n  .mat-progress-bar-fill::after {\n    background-color: mat-color($primary);\n  }\n\n  .mat-progress-bar.mat-accent {\n    .mat-progress-bar-background {\n      fill: mat-color($accent, lighter);\n    }\n\n    .mat-progress-bar-buffer {\n      background-color: mat-color($accent, lighter);\n    }\n\n    .mat-progress-bar-fill::after {\n      background-color: mat-color($accent);\n    }\n  }\n\n  .mat-progress-bar.mat-warn {\n    .mat-progress-bar-background {\n      fill: mat-color($warn, lighter);\n    }\n\n    .mat-progress-bar-buffer {\n      background-color: mat-color($warn, lighter);\n    }\n\n    .mat-progress-bar-fill::after {\n      background-color: mat-color($warn);\n    }\n  }\n}\n\n@mixin mat-progress-bar-typography($config) { }\n\n\n\n\n\n\n@mixin mat-progress-spinner-theme($theme) {\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n\n  .mat-progress-spinner, .mat-spinner {\n    circle {\n      stroke: mat-color($primary);\n    }\n\n    &.mat-accent circle {\n      stroke: mat-color($accent);\n    }\n\n    &.mat-warn circle {\n      stroke: mat-color($warn);\n    }\n  }\n}\n\n@mixin mat-progress-spinner-typography($config) { }\n\n\n\n\n\n@mixin _mat-radio-color($palette) {\n  &.mat-radio-checked .mat-radio-outer-circle {\n    border-color: mat-color($palette);\n  }\n\n  .mat-radio-inner-circle,\n  .mat-radio-ripple .mat-ripple-element:not(.mat-radio-persistent-ripple),\n  &.mat-radio-checked .mat-radio-persistent-ripple,\n  &:active .mat-radio-persistent-ripple {\n    background-color: mat-color($palette);\n  }\n}\n\n@mixin mat-radio-theme($theme) {\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n  .mat-radio-outer-circle {\n    border-color: mat-color($foreground, secondary-text);\n  }\n\n  .mat-radio-button {\n    &.mat-primary {\n      @include _mat-radio-color($primary);\n    }\n\n    &.mat-accent {\n      @include _mat-radio-color($accent);\n    }\n\n    &.mat-warn {\n      @include _mat-radio-color($warn);\n    }\n\n    // This needs extra specificity, because the classes above are combined\n    // (e.g. `.mat-radio-button.mat-accent`) which increases their specificity a lot.\n    // TODO: consider making the selectors into descendants (`.mat-primary .mat-radio-button`).\n    &.mat-radio-disabled {\n      &.mat-radio-checked .mat-radio-outer-circle,\n      .mat-radio-outer-circle {\n        border-color: mat-color($foreground, disabled);\n      }\n\n      .mat-radio-ripple .mat-ripple-element,\n      .mat-radio-inner-circle {\n        background-color: mat-color($foreground, disabled);\n      }\n\n      .mat-radio-label-content {\n        color: mat-color($foreground, disabled);\n      }\n    }\n\n    // Switch this to a solid color since we're using `opacity`\n    // to control how opaque the ripple should be.\n    .mat-ripple-element {\n      background-color: map_get($foreground, base);\n    }\n  }\n}\n\n@mixin mat-radio-typography($config) {\n  .mat-radio-button {\n    font-family: mat-font-family($config);\n  }\n}\n\n\n\n\n\n\n\n\n@mixin mat-select-theme($theme) {\n  $foreground: map-get($theme, foreground);\n  $background: map-get($theme, background);\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n\n  .mat-select-value {\n    color: mat-color($foreground, text);\n  }\n\n  .mat-select-placeholder {\n    color: _mat-control-placeholder-color($theme);\n  }\n\n  .mat-select-disabled .mat-select-value {\n    color: mat-color($foreground, disabled-text);\n  }\n\n  .mat-select-arrow {\n    color: mat-color($foreground, secondary-text);\n  }\n\n  .mat-select-panel {\n    background: mat-color($background, card);\n    @include _mat-theme-overridable-elevation(4, $theme);\n\n    .mat-option.mat-selected:not(.mat-option-multiple) {\n      background: mat-color($background, hover, 0.12);\n    }\n  }\n\n  .mat-form-field {\n    &.mat-focused {\n      &.mat-primary .mat-select-arrow {\n        color: mat-color($primary, text);\n      }\n\n      &.mat-accent .mat-select-arrow {\n        color: mat-color($accent, text);\n      }\n\n      &.mat-warn .mat-select-arrow {\n        color: mat-color($warn, text);\n      }\n    }\n\n    .mat-select.mat-select-invalid .mat-select-arrow {\n      color: mat-color($warn, text);\n    }\n\n    .mat-select.mat-select-disabled .mat-select-arrow {\n      color: mat-color($foreground, disabled-text);\n    }\n  }\n}\n\n@mixin mat-select-typography($config) {\n  // The unit-less line-height from the font config.\n  $line-height: mat-line-height($config, input);\n\n  .mat-select {\n    font-family: mat-font-family($config);\n  }\n\n  .mat-select-trigger {\n    height: $line-height * 1em;\n  }\n}\n\n\n\n\n\n\n@mixin mat-sidenav-theme($theme) {\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n  $drawer-background-color: mat-color($background, dialog);\n  $drawer-container-background-color:  mat-color($background, background);\n  $drawer-push-background-color: mat-color($background, dialog);\n  $drawer-side-border: solid 1px mat-color($foreground, divider);\n\n  .mat-drawer-container {\n    background-color: $drawer-container-background-color;\n    color: mat-color($foreground, text);\n  }\n\n  .mat-drawer {\n    background-color: $drawer-background-color;\n    color: mat-color($foreground, text);\n\n    &.mat-drawer-push {\n      background-color: $drawer-push-background-color;\n    }\n\n    &:not(.mat-drawer-side) {\n      // The elevation of z-16 is noted in the design specifications.\n      // See https://material.io/design/components/navigation-drawer.html\n      @include _mat-theme-elevation(16, $theme);\n    }\n  }\n\n  .mat-drawer-side {\n    border-right: $drawer-side-border;\n\n    &.mat-drawer-end {\n      border-left: $drawer-side-border;\n      border-right: none;\n    }\n  }\n\n  [dir='rtl'] .mat-drawer-side {\n    border-left: $drawer-side-border;\n    border-right: none;\n\n    &.mat-drawer-end {\n      border-left: none;\n      border-right: $drawer-side-border;\n    }\n  }\n\n  .mat-drawer-backdrop.mat-drawer-shown {\n    $opacity: 0.6;\n    $backdrop-color: mat-color($background, card, $opacity);\n\n    @if (type-of($backdrop-color) == color) {\n      // We use invert() here to have the darken the background color expected to be used. If the\n      // background is light, we use a dark backdrop. If the background is dark,\n      // we use a light backdrop.\n      background-color: invert($backdrop-color);\n    }\n    @else {\n      // If we couldn't resolve the backdrop color to a color value, fall back to using\n      // `opacity` to make it opaque since its end value could be a solid color.\n      background-color: $backdrop-color;\n      opacity: $opacity;\n    }\n  }\n}\n\n@mixin mat-sidenav-typography($config) { }\n\n\n\n\n\n\n@mixin _mat-slide-toggle-checked($palette, $thumb-checked-hue) {\n  &.mat-checked {\n    .mat-slide-toggle-thumb {\n      background-color: mat-color($palette, $thumb-checked-hue);\n    }\n\n    .mat-slide-toggle-bar {\n      // Opacity is determined from the specs for the selection controls.\n      // See: https://material.io/design/components/selection-controls.html#specs\n      background-color: mat-color($palette, $thumb-checked-hue, 0.54);\n    }\n\n    .mat-ripple-element {\n      // Set no opacity for the ripples because the ripple opacity will be adjusted dynamically\n      // based on the type of interaction with the slide-toggle (e.g. for hover, focus)\n      background-color: mat-color($palette, $thumb-checked-hue);\n    }\n  }\n}\n\n@mixin mat-slide-toggle-theme($theme) {\n  $is-dark: map_get($theme, is-dark);\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n  // Color hues are based on the specs which briefly show the hues that are applied to a switch.\n  // The 2018 specs no longer describe how dark switches should look like. Due to the lack of\n  // information for dark themed switches, we partially keep the old behavior that is based on\n  // the previous specifications. For the checked color we always use the `default` hue because\n  // that follows MDC and also makes it easier for people to create a custom theme without needing\n  // to specify each hue individually.\n  $thumb-unchecked-hue: if($is-dark, 400, 50);\n  $thumb-checked-hue: default;\n\n  $bar-unchecked-color: mat-color($foreground, disabled);\n  $ripple-unchecked-color: mat-color($foreground, base);\n\n  .mat-slide-toggle {\n    @include _mat-slide-toggle-checked($accent, $thumb-checked-hue);\n\n    &.mat-primary {\n      @include _mat-slide-toggle-checked($primary, $thumb-checked-hue);\n    }\n\n    &.mat-warn {\n      @include _mat-slide-toggle-checked($warn, $thumb-checked-hue);\n    }\n\n    &:not(.mat-checked) .mat-ripple-element {\n      // Set no opacity for the ripples because the ripple opacity will be adjusted dynamically\n      // based on the type of interaction with the slide-toggle (e.g. for hover, focus)\n      background-color: $ripple-unchecked-color;\n    }\n  }\n\n  .mat-slide-toggle-thumb {\n    @include _mat-theme-elevation(1, $theme);\n    background-color: mat-color($mat-grey, $thumb-unchecked-hue);\n  }\n\n  .mat-slide-toggle-bar {\n    background-color: $bar-unchecked-color;\n  }\n}\n\n@mixin mat-slide-toggle-typography($config) {\n  .mat-slide-toggle-content {\n    font-family: mat-font-family($config);\n  }\n}\n\n\n\n\n\n@mixin _mat-slider-inner-content-theme($palette) {\n  .mat-slider-track-fill,\n  .mat-slider-thumb,\n  .mat-slider-thumb-label {\n    background-color: mat-color($palette);\n  }\n\n  .mat-slider-thumb-label-text {\n    color: mat-color($palette, default-contrast);\n  }\n}\n\n@mixin mat-slider-theme($theme) {\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n  $mat-slider-off-color: mat-color($foreground, slider-off);\n  $mat-slider-off-focused-color: mat-color($foreground, slider-off-active);\n  $mat-slider-disabled-color: mat-color($foreground, slider-off);\n  $mat-slider-labeled-min-value-thumb-color: mat-color($foreground, slider-min);\n  $mat-slider-labeled-min-value-thumb-label-color: mat-color($foreground, slider-off);\n  $mat-slider-tick-opacity: 0.7;\n  $mat-slider-tick-color: mat-color($foreground, base, $mat-slider-tick-opacity);\n  $mat-slider-tick-size: 2px;\n\n  .mat-slider-track-background {\n    background-color: $mat-slider-off-color;\n  }\n\n  .mat-primary {\n    @include _mat-slider-inner-content-theme($primary);\n  }\n\n  .mat-accent {\n    @include _mat-slider-inner-content-theme($accent);\n  }\n\n  .mat-warn {\n    @include _mat-slider-inner-content-theme($warn);\n  }\n\n  .mat-slider-focus-ring {\n    $opacity: 0.2;\n    $color: mat-color($accent, default, $opacity);\n    background-color: $color;\n\n    // `mat-color` uses `rgba` for the opacity which won't work with\n    // CSS variables so we need to use `opacity` as a fallback.\n    @if (type-of($color) != color) {\n      opacity: $opacity;\n    }\n  }\n\n  .mat-slider:hover,\n  .cdk-focused {\n    .mat-slider-track-background {\n      background-color: $mat-slider-off-focused-color;\n    }\n  }\n\n  .mat-slider-disabled {\n    .mat-slider-track-background,\n    .mat-slider-track-fill,\n    .mat-slider-thumb {\n      background-color: $mat-slider-disabled-color;\n    }\n\n    &:hover {\n      .mat-slider-track-background {\n        background-color: $mat-slider-disabled-color;\n      }\n    }\n  }\n\n  .mat-slider-min-value {\n    .mat-slider-focus-ring {\n      $opacity: 0.12;\n      $color: mat-color($foreground, base, $opacity);\n      background-color: $color;\n\n      // `mat-color` uses `rgba` for the opacity which won't work with\n      // CSS variables so we need to use `opacity` as a fallback.\n      @if (type-of($color) != color) {\n        opacity: $opacity;\n      }\n    }\n\n    &.mat-slider-thumb-label-showing {\n      .mat-slider-thumb,\n      .mat-slider-thumb-label {\n        background-color: $mat-slider-labeled-min-value-thumb-color;\n      }\n\n      &.cdk-focused {\n        .mat-slider-thumb,\n        .mat-slider-thumb-label {\n          background-color: $mat-slider-labeled-min-value-thumb-label-color;\n        }\n      }\n    }\n\n    &:not(.mat-slider-thumb-label-showing) {\n      .mat-slider-thumb {\n        border-color: $mat-slider-off-color;\n        background-color: transparent;\n      }\n\n      &:hover,\n      &.cdk-focused {\n        .mat-slider-thumb {\n          border-color: $mat-slider-off-focused-color;\n        }\n\n        &.mat-slider-disabled .mat-slider-thumb {\n          border-color: $mat-slider-disabled-color;\n        }\n      }\n    }\n  }\n\n  .mat-slider-has-ticks .mat-slider-wrapper::after {\n    border-color: $mat-slider-tick-color;\n\n    // `mat-color` uses `rgba` for the opacity which won't work with\n    // CSS variables so we need to use `opacity` as a fallback.\n    @if (type-of($mat-slider-tick-color) != color) {\n      opacity: $mat-slider-tick-opacity;\n    }\n  }\n\n  .mat-slider-horizontal .mat-slider-ticks {\n    background-image: repeating-linear-gradient(to right, $mat-slider-tick-color,\n        $mat-slider-tick-color $mat-slider-tick-size, transparent 0, transparent);\n    // Firefox doesn't draw the gradient correctly with 'to right'\n    // (see https://bugzilla.mozilla.org/show_bug.cgi?id=1314319).\n    background-image: -moz-repeating-linear-gradient(0.0001deg, $mat-slider-tick-color,\n        $mat-slider-tick-color $mat-slider-tick-size, transparent 0, transparent);\n\n    // `mat-color` uses `rgba` for the opacity which won't work with\n    // CSS variables so we need to use `opacity` as a fallback.\n    @if (type-of($mat-slider-tick-color) != color) {\n      opacity: $mat-slider-tick-opacity;\n    }\n  }\n\n  .mat-slider-vertical .mat-slider-ticks {\n    background-image: repeating-linear-gradient(to bottom, $mat-slider-tick-color,\n        $mat-slider-tick-color $mat-slider-tick-size, transparent 0, transparent);\n\n    // `mat-color` uses `rgba` for the opacity which won't work with\n    // CSS variables so we need to use `opacity` as a fallback.\n    @if (type-of($mat-slider-tick-color) != color) {\n      opacity: $mat-slider-tick-opacity;\n    }\n  }\n}\n\n@mixin mat-slider-typography($config) {\n  .mat-slider-thumb-label-text {\n    font: {\n      family: mat-font-family($config);\n      size: mat-font-size($config, caption);\n      weight: mat-font-weight($config, body-2);\n    }\n  }\n}\n\n\n\n\n\n@mixin mat-stepper-theme($theme) {\n  $foreground: map-get($theme, foreground);\n  $background: map-get($theme, background);\n  $primary: map-get($theme, primary);\n  $warn: map-get($theme, warn);\n\n  .mat-step-header {\n    &.cdk-keyboard-focused,\n    &.cdk-program-focused,\n    &:hover {\n      background-color: mat-color($background, hover);\n    }\n\n    // On touch devices the :hover state will linger on the element after a tap.\n    // Reset it via `@media` after the declaration, because the media query isn't\n    // supported by all browsers yet.\n    @media (hover: none) {\n      &:hover {\n        background: none;\n      }\n    }\n\n    .mat-step-label,\n    .mat-step-optional {\n      // TODO(josephperrott): Update to using a corrected disabled-text contrast\n      // instead of secondary-text.\n      color: mat-color($foreground, secondary-text);\n    }\n\n    .mat-step-icon {\n      // TODO(josephperrott): Update to using a corrected disabled-text contrast\n      // instead of secondary-text.\n      background-color: mat-color($foreground, secondary-text);\n      color: mat-color($primary, default-contrast);\n    }\n\n    .mat-step-icon-selected,\n    .mat-step-icon-state-done,\n    .mat-step-icon-state-edit {\n      background-color: mat-color($primary);\n      color: mat-color($primary, default-contrast);\n    }\n\n    .mat-step-icon-state-error {\n      background-color: transparent;\n      color: mat-color($warn, text);\n    }\n\n    .mat-step-label.mat-step-label-active {\n      color: mat-color($foreground, text);\n    }\n\n    .mat-step-label.mat-step-label-error {\n      color: mat-color($warn, text);\n    }\n  }\n\n  .mat-stepper-horizontal, .mat-stepper-vertical {\n    background-color: mat-color($background, card);\n  }\n\n  .mat-stepper-vertical-line::before {\n    border-left-color: mat-color($foreground, divider);\n  }\n\n  .mat-horizontal-stepper-header::before,\n  .mat-horizontal-stepper-header::after,\n  .mat-stepper-horizontal-line {\n    border-top-color: mat-color($foreground, divider);\n  }\n}\n\n@mixin mat-stepper-typography($config) {\n  .mat-stepper-vertical, .mat-stepper-horizontal {\n    font-family: mat-font-family($config);\n  }\n\n  .mat-step-label {\n    font: {\n      size: mat-font-size($config, body-1);\n      weight: mat-font-weight($config, body-1);\n    };\n  }\n\n  .mat-step-sub-label-error {\n    font-weight: normal;\n  }\n\n  .mat-step-label-error {\n    font-size: mat-font-size($config, body-2);\n  }\n\n  .mat-step-label-selected {\n    font: {\n      size: mat-font-size($config, body-2);\n      weight: mat-font-weight($config, body-2);\n    };\n  }\n}\n\n@mixin mat-sort-theme($theme) {\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n  .mat-sort-header-arrow {\n    $table-background: mat-color($background, 'card');\n    $text-color: mat-color($foreground, secondary-text);\n\n    // Because the arrow is made up of multiple elements that are stacked on top of each other,\n    // we can't use the semi-trasparent color from the theme directly. If the value is a color\n    // *type*, we convert it into a solid color by taking the opacity from the rgba value and\n    // using the value to determine the percentage of the background to put into foreground\n    // when mixing the colors together. Otherwise, if it resolves to something different\n    // (e.g. it resolves to a CSS variable), we use the color directly.\n    @if (type-of($table-background) == color and type-of($text-color) == color) {\n      $text-opacity: opacity($text-color);\n      color: mix($table-background, rgba($text-color, 1), (1 - $text-opacity) * 100%);\n    }\n    @else {\n      color: $text-color;\n    }\n  }\n}\n\n@mixin mat-sort-typography($config) { }\n\n\n\n\n\n@mixin mat-tabs-theme($theme) {\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n  $header-border: 1px solid mat-color($foreground, divider);\n\n  .mat-tab-nav-bar,\n  .mat-tab-header {\n    border-bottom: $header-border;\n  }\n\n  .mat-tab-group-inverted-header {\n    .mat-tab-nav-bar,\n    .mat-tab-header {\n      border-top: $header-border;\n      border-bottom: none;\n    }\n  }\n\n  .mat-tab-label, .mat-tab-link {\n    color: mat-color($foreground, text);\n\n    &.mat-tab-disabled {\n      color: mat-color($foreground, disabled-text);\n    }\n  }\n\n  .mat-tab-header-pagination-chevron {\n    border-color: mat-color($foreground, text);\n  }\n\n  .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron {\n    border-color: mat-color($foreground, disabled-text);\n  }\n\n  // Remove header border when there is a background color\n  .mat-tab-group[class*='mat-background-'] .mat-tab-header,\n  .mat-tab-nav-bar[class*='mat-background-'] {\n    border-bottom: none;\n    border-top: none;\n  }\n\n  .mat-tab-group, .mat-tab-nav-bar {\n    $theme-colors: (\n      primary: $primary,\n      accent: $accent,\n      warn: $warn\n    );\n\n    @each $name, $color in $theme-colors {\n      // Set the foreground color of the tabs\n      &.mat-#{$name} {\n        @include _mat-tab-label-focus($color);\n        @include _mat-ink-bar($color);\n\n        // Override ink bar when background color is the same\n        &.mat-background-#{$name} {\n          @include _mat-ink-bar($color, default-contrast);\n        }\n      }\n    }\n\n    @each $name, $color in $theme-colors {\n      // Set background color of the tabs and override focus color\n      &.mat-background-#{$name} {\n        @include _mat-tab-label-focus($color);\n        @include _mat-tabs-background($color);\n      }\n    }\n  }\n}\n\n@mixin _mat-ink-bar($color, $hue: default) {\n  .mat-ink-bar {\n    background-color: mat-color($color, $hue);\n  }\n}\n\n@mixin _mat-tab-label-focus($tab-focus-color) {\n  .mat-tab-label,\n  .mat-tab-link {\n    &.cdk-keyboard-focused,\n    &.cdk-program-focused {\n      &:not(.mat-tab-disabled) {\n        background-color: mat-color($tab-focus-color, lighter, 0.3);\n      }\n    }\n  }\n}\n\n@mixin _mat-tabs-background($background-color) {\n  // Set background color for the tab group\n  .mat-tab-header, .mat-tab-links, .mat-tab-header-pagination {\n    background-color: mat-color($background-color);\n  }\n\n  // Set labels to contrast against background\n  .mat-tab-label, .mat-tab-link {\n    color: mat-color($background-color, default-contrast);\n\n    &.mat-tab-disabled {\n      color: mat-color($background-color, default-contrast, 0.4);\n    }\n  }\n\n  // Set pagination chevrons to contrast background\n  .mat-tab-header-pagination-chevron {\n    border-color: mat-color($background-color, default-contrast);\n  }\n\n  .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron {\n    border-color: mat-color($background-color, default-contrast, 0.4);\n  }\n\n  // Set ripples color to be the contrast color of the new background. Otherwise the ripple\n  // color will be based on the app background color.\n  .mat-ripple-element {\n    background-color: mat-color($background-color, default-contrast, 0.12);\n  }\n}\n\n@mixin mat-tabs-typography($config) {\n  .mat-tab-group {\n    font-family: mat-font-family($config);\n  }\n\n  .mat-tab-label, .mat-tab-link {\n    font: {\n      family: mat-font-family($config, button);\n      size: mat-font-size($config, button);\n      weight: mat-font-weight($config, button);\n    }\n  }\n}\n\n\n\n\n\n\n@mixin _mat-toolbar-color($palette) {\n  background: mat-color($palette);\n  color: mat-color($palette, default-contrast);\n}\n\n@mixin _mat-toolbar-form-field-overrides {\n  .mat-form-field-underline,\n  .mat-form-field-ripple,\n  .mat-focused .mat-form-field-ripple {\n    background-color: currentColor;\n  }\n\n  .mat-form-field-label,\n  .mat-focused .mat-form-field-label,\n  .mat-select-value,\n  .mat-select-arrow,\n  .mat-form-field.mat-focused .mat-select-arrow {\n    color: inherit;\n  }\n\n  .mat-input-element {\n    caret-color: currentColor;\n  }\n}\n\n@mixin mat-toolbar-theme($theme) {\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n  .mat-toolbar {\n    background: mat-color($background, app-bar);\n    color: mat-color($foreground, text);\n\n    &.mat-primary {\n      @include _mat-toolbar-color($primary);\n    }\n\n    &.mat-accent {\n      @include _mat-toolbar-color($accent);\n    }\n\n    &.mat-warn {\n      @include _mat-toolbar-color($warn);\n    }\n\n    @include _mat-toolbar-form-field-overrides;\n  }\n}\n\n@mixin mat-toolbar-typography($config) {\n  .mat-toolbar,\n  .mat-toolbar h1,\n  .mat-toolbar h2,\n  .mat-toolbar h3,\n  .mat-toolbar h4,\n  .mat-toolbar h5,\n  .mat-toolbar h6 {\n    @include mat-typography-level-to-styles($config, title);\n    margin: 0;\n  }\n}\n\n\n\n\n\n$mat-tooltip-target-height: 22px;\n$mat-tooltip-font-size: 10px;\n$mat-tooltip-vertical-padding: ($mat-tooltip-target-height - $mat-tooltip-font-size) / 2;\n\n$mat-tooltip-handset-target-height: 30px;\n$mat-tooltip-handset-font-size: 14px;\n$mat-tooltip-handset-vertical-padding:\n    ($mat-tooltip-handset-target-height - $mat-tooltip-handset-font-size) / 2;\n\n@mixin mat-tooltip-theme($theme) {\n  $background: map-get($theme, background);\n\n  .mat-tooltip {\n    background: mat-color($background, tooltip, 0.9);\n  }\n}\n\n@mixin mat-tooltip-typography($config) {\n  .mat-tooltip {\n    font-family: mat-font-family($config);\n    font-size: $mat-tooltip-font-size;\n    padding-top: $mat-tooltip-vertical-padding;\n    padding-bottom: $mat-tooltip-vertical-padding;\n  }\n\n  .mat-tooltip-handset {\n    font-size: $mat-tooltip-handset-font-size;\n    padding-top: $mat-tooltip-handset-vertical-padding;\n    padding-bottom: $mat-tooltip-handset-vertical-padding;\n  }\n}\n\n\n\n\n\n@mixin mat-snack-bar-theme($theme) {\n  $is-dark-theme: map-get($theme, is-dark);\n  $accent: map-get($theme, accent);\n\n  .mat-snack-bar-container {\n    // Use the primary text on the dark theme, even though the lighter one uses\n    // a secondary, because the contrast on the light primary text is poor.\n    color: if($is-dark-theme, $dark-primary-text, $light-secondary-text);\n    background: if($is-dark-theme, map-get($mat-grey, 50), #323232);\n\n    @include _mat-theme-elevation(6, $theme);\n  }\n\n  .mat-simple-snackbar-action {\n    color: if($is-dark-theme, inherit, mat-color($accent, text));\n  }\n}\n\n@mixin mat-snack-bar-typography($config) {\n  .mat-simple-snackbar {\n    font: {\n      family: mat-font-family($config, body-1);\n      size: mat-font-size($config, body-1);\n    }\n  }\n\n  .mat-simple-snackbar-action {\n    line-height: 1;\n    font: {\n      family: inherit;\n      size: inherit;\n      weight: mat-font-weight($config, button);\n    }\n  }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// Theme styles that only apply to the fill appearance of the form-field.\n\n@mixin mat-form-field-fill-theme($theme) {\n  $foreground: map-get($theme, foreground);\n  $is-dark-theme: map-get($theme, is-dark);\n\n  $fill-background: mat-color($foreground, base, if($is-dark-theme, 0.1, 0.04));\n  $fill-disabled-background: mat-color($foreground, base, if($is-dark-theme, 0.05, 0.02));\n  $underline-color: mat-color($foreground, divider, if($is-dark-theme, 0.5, 0.42));\n  $label-disabled-color: mat-color($foreground, disabled-text);\n\n  .mat-form-field-appearance-fill {\n    .mat-form-field-flex {\n      background-color: $fill-background;\n    }\n\n    &.mat-form-field-disabled .mat-form-field-flex {\n      background-color: $fill-disabled-background;\n    }\n\n    .mat-form-field-underline::before {\n      background-color: $underline-color;\n    }\n\n    &.mat-form-field-disabled {\n      .mat-form-field-label {\n        color: $label-disabled-color;\n      }\n\n      .mat-form-field-underline::before {\n        background-color: transparent;\n      }\n    }\n  }\n}\n\n// Used to make instances of the _mat-form-field-label-floating mixin negligibly different,\n// and prevent Google's CSS Optimizer from collapsing the declarations. This is needed because some\n// of the selectors contain pseudo-classes not recognized in all browsers. If a browser encounters\n// an unknown pseudo-class it will discard the entire rule set.\n$mat-form-field-fill-dedupe: 0;\n\n// Applies a floating label above the form field control itself.\n@mixin _mat-form-field-fill-label-floating($font-scale, $infix-padding, $infix-margin-top) {\n  transform: translateY(-$infix-margin-top - $infix-padding + $mat-form-field-fill-dedupe)\n             scale($font-scale);\n  width: 100% / $font-scale + $mat-form-field-fill-dedupe;\n\n  $mat-form-field-fill-dedupe: $mat-form-field-fill-dedupe + 0.00001 !global;\n}\n\n@mixin mat-form-field-fill-typography($config) {\n  // The unit-less line-height from the font config.\n  $line-height: mat-line-height($config, input);\n  // The amount to scale the font for the floating label and subscript.\n  $subscript-font-scale: 0.75;\n  // The padding on top of the infix.\n  $infix-padding-top: 0.25em;\n  // The padding below the infix.\n  $infix-padding-bottom: 0.75em;\n  // The margin applied to the form-field-infix to reserve space for the floating label.\n  $infix-margin-top: 1em * $line-height * $subscript-font-scale;\n  // The amount we offset the label from the input text in the fill appearance.\n  $fill-appearance-label-offset: -0.5em;\n\n  .mat-form-field-appearance-fill {\n    .mat-form-field-infix {\n      padding: $infix-padding-top 0 $infix-padding-bottom 0;\n    }\n\n    .mat-form-field-label {\n      top: $infix-margin-top + $infix-padding-top;\n      margin-top: $fill-appearance-label-offset;\n    }\n\n    &.mat-form-field-can-float {\n      &.mat-form-field-should-float .mat-form-field-label,\n      .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\n        @include _mat-form-field-fill-label-floating(\n                $subscript-font-scale, $infix-padding-top + $fill-appearance-label-offset,\n                $infix-margin-top);\n      }\n\n      // Server-side rendered matInput with a label attribute but label not shown\n      // (used as a pure CSS stand-in for mat-form-field-should-float).\n      .mat-input-server[label]:not(:label-shown) + .mat-form-field-label-wrapper\n      .mat-form-field-label {\n        @include _mat-form-field-fill-label-floating(\n                $subscript-font-scale, $infix-padding-top + $fill-appearance-label-offset,\n                $infix-margin-top);\n      }\n    }\n  }\n}\n\n\n\n\n\n\n\n// Theme styles that only apply to the legacy appearance of the form-field.\n\n@mixin mat-form-field-legacy-theme($theme) {\n  $foreground: map-get($theme, foreground);\n  $is-dark-theme: map-get($theme, is-dark);\n\n  $label-color: mat-color($foreground, secondary-text);\n  $underline-color: mat-color($foreground, divider, if($is-dark-theme, 0.7, 0.42));\n\n  .mat-form-field-appearance-legacy {\n    .mat-form-field-label {\n      color: $label-color;\n    }\n\n    .mat-hint {\n      color: $label-color;\n    }\n\n    .mat-form-field-underline {\n      background-color: $underline-color;\n    }\n\n    &.mat-form-field-disabled .mat-form-field-underline {\n      @include mat-control-disabled-underline($underline-color);\n    }\n  }\n}\n\n// Used to make instances of the _mat-form-field-label-floating mixin negligibly different,\n// and prevent Google's CSS Optimizer from collapsing the declarations. This is needed because some\n// of the selectors contain pseudo-classes not recognized in all browsers. If a browser encounters\n// an unknown pseudo-class it will discard the entire rule set.\n$mat-form-field-legacy-dedupe: 0;\n\n// Applies a floating label above the form field control itself.\n@mixin _mat-form-field-legacy-label-floating($font-scale, $infix-padding, $infix-margin-top) {\n  // We use perspective to fix the text blurriness as described here:\n  // http://www.useragentman.com/blog/2014/05/04/fixing-typography-inside-of-2-d-css-transforms/\n  // This results in a small jitter after the label floats on Firefox, which the\n  // translateZ fixes.\n  transform: translateY(-$infix-margin-top - $infix-padding) scale($font-scale) perspective(100px)\n  translateZ(0.001px + $mat-form-field-legacy-dedupe);\n  // The tricks above used to smooth out the animation on chrome and firefox actually make things\n  // worse on IE, so we don't include them in the IE version.\n  -ms-transform: translateY(-$infix-margin-top - $infix-padding + $mat-form-field-legacy-dedupe)\n                  scale($font-scale);\n\n  width: 100% / $font-scale + $mat-form-field-legacy-dedupe;\n\n  $mat-form-field-legacy-dedupe: $mat-form-field-legacy-dedupe + 0.00001 !global;\n}\n\n// Same as mixin above, but omits the translateZ for printing purposes.\n@mixin _mat-form-field-legacy-label-floating-print($font-scale, $infix-padding, $infix-margin-top) {\n  // This results in a small jitter after the label floats on Firefox, which the\n  // translateZ fixes.\n  transform: translateY(-$infix-margin-top - $infix-padding + $mat-form-field-legacy-dedupe)\n                  scale($font-scale);\n  // The tricks above used to smooth out the animation on chrome and firefox actually make things\n  // worse on IE, so we don't include them in the IE version.\n  $mat-form-field-legacy-dedupe: $mat-form-field-legacy-dedupe + 0.00001 !global;\n}\n\n@mixin mat-form-field-legacy-typography($config) {\n  // The unit-less line-height from the font config.\n  $line-height: mat-line-height($config, input);\n  // The amount to scale the font for the floating label and subscript.\n  $subscript-font-scale: 0.75;\n  // The amount of space between the top of the line and the top of the actual text\n  // (as a fraction of the font-size).\n  $line-spacing: ($line-height - 1) / 2;\n  // The padding on the infix. Mocks show half of the text size, but seem to measure from the edge\n  // of the text itself, not the edge of the line; therefore we subtract off the line spacing.\n  $infix-padding: 0.5em - $line-spacing;\n  // The margin applied to the form-field-infix to reserve space for the floating label.\n  $infix-margin-top: 1em * $line-height * $subscript-font-scale;\n  // The space between the bottom of the .mat-form-field-flex area and the subscript wrapper.\n  // Mocks show half of the text size, but this margin is applied to an element with the subscript\n  // text font size, so we need to divide by the scale factor to make it half of the original text\n  // size. We again need to subtract off the line spacing since the mocks measure to the edge of the\n  // text, not the  edge of the line.\n  $subscript-margin-top: 0.5em / $subscript-font-scale - ($line-spacing * 2);\n  // The padding applied to the form-field-wrapper to reserve space for the subscript, since it's\n  // absolutely positioned. This is a combination of the subscript's margin and line-height, but we\n  // need to multiply by the subscript font scale factor since the wrapper has a larger font size.\n  $wrapper-padding-bottom: ($subscript-margin-top + $line-height) * $subscript-font-scale;\n\n  .mat-form-field-appearance-legacy {\n    .mat-form-field-wrapper {\n      padding-bottom: $wrapper-padding-bottom;\n    }\n\n    .mat-form-field-infix {\n      padding: $infix-padding 0;\n    }\n\n    &.mat-form-field-can-float {\n      &.mat-form-field-should-float .mat-form-field-label,\n      .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\n        @include _mat-form-field-legacy-label-floating(\n                $subscript-font-scale, $infix-padding, $infix-margin-top);\n      }\n\n      // @breaking-change 8.0.0 will rely on AutofillMonitor instead.\n      .mat-form-field-autofill-control:-webkit-autofill + .mat-form-field-label-wrapper\n      .mat-form-field-label {\n        @include _mat-form-field-legacy-label-floating(\n                $subscript-font-scale, $infix-padding, $infix-margin-top);\n      }\n\n      // Server-side rendered matInput with a label attribute but label not shown\n      // (used as a pure CSS stand-in for mat-form-field-should-float).\n      .mat-input-server[label]:not(:label-shown) + .mat-form-field-label-wrapper\n      .mat-form-field-label {\n        @include _mat-form-field-legacy-label-floating(\n                $subscript-font-scale, $infix-padding, $infix-margin-top);\n      }\n    }\n\n    .mat-form-field-label {\n      top: $infix-margin-top + $infix-padding;\n    }\n\n    .mat-form-field-underline {\n      // We want the underline to start at the end of the content box, not the padding box,\n      // so we move it up by the padding amount.\n      bottom: $wrapper-padding-bottom;\n    }\n\n    .mat-form-field-subscript-wrapper {\n      margin-top: $subscript-margin-top;\n\n      // We want the subscript to start at the end of the content box, not the padding box,\n      // so we move it up by the padding amount (adjusted for the smaller font size);\n      top: calc(100% - #{$wrapper-padding-bottom / $subscript-font-scale});\n    }\n  }\n\n  // translateZ causes the label to not appear while printing, so we override it to not\n  // apply translateZ while printing\n  @media print {\n    .mat-form-field-appearance-legacy {\n      &.mat-form-field-can-float {\n        &.mat-form-field-should-float .mat-form-field-label,\n        .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\n          @include _mat-form-field-legacy-label-floating-print(\n                  $subscript-font-scale, $infix-padding, $infix-margin-top);\n        }\n\n        // @breaking-change 8.0.0 will rely on AutofillMonitor instead.\n        .mat-form-field-autofill-control:-webkit-autofill + .mat-form-field-label-wrapper\n        .mat-form-field-label {\n          @include _mat-form-field-legacy-label-floating-print(\n                  $subscript-font-scale, $infix-padding, $infix-margin-top);\n        }\n\n        // Server-side rendered matInput with a label attribute but label not shown\n        // (used as a pure CSS stand-in for mat-form-field-should-float).\n        .mat-input-server[label]:not(:label-shown) + .mat-form-field-label-wrapper\n        .mat-form-field-label {\n          @include _mat-form-field-legacy-label-floating-print(\n                  $subscript-font-scale, $infix-padding, $infix-margin-top);\n        }\n      }\n    }\n  }\n}\n\n\n\n\n\n\n\n// Theme styles that only apply to the outline appearance of the form-field.\n\n@mixin mat-form-field-outline-theme($theme) {\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n  $foreground: map-get($theme, foreground);\n  $is-dark-theme: map-get($theme, is-dark);\n\n  $label-disabled-color: mat-color($foreground, disabled-text);\n  $outline-color: mat-color($foreground, divider, if($is-dark-theme, 0.3, 0.12));\n  $outline-color-hover: mat-color($foreground, divider, if($is-dark-theme, 1, 0.87));\n  $outline-color-primary: mat-color($primary);\n  $outline-color-accent: mat-color($accent);\n  $outline-color-warn: mat-color($warn);\n  $outline-color-disabled: mat-color($foreground, divider, if($is-dark-theme, 0.15, 0.06));\n\n  .mat-form-field-appearance-outline {\n    .mat-form-field-outline {\n      color: $outline-color;\n    }\n\n    .mat-form-field-outline-thick {\n      color: $outline-color-hover;\n    }\n\n    &.mat-focused {\n      .mat-form-field-outline-thick {\n        color: $outline-color-primary;\n      }\n\n      &.mat-accent .mat-form-field-outline-thick {\n        color: $outline-color-accent;\n      }\n\n      &.mat-warn .mat-form-field-outline-thick {\n        color: $outline-color-warn;\n      }\n    }\n\n    // Class repeated so that rule is specific enough to override focused accent color case.\n    &.mat-form-field-invalid.mat-form-field-invalid {\n      .mat-form-field-outline-thick {\n        color: $outline-color-warn;\n      }\n    }\n\n    &.mat-form-field-disabled {\n      .mat-form-field-label {\n        color: $label-disabled-color;\n      }\n\n      .mat-form-field-outline {\n        color: $outline-color-disabled;\n      }\n    }\n  }\n}\n\n// Used to make instances of the _mat-form-field-label-floating mixin negligibly different,\n// and prevent Google's CSS Optimizer from collapsing the declarations. This is needed because some\n// of the selectors contain pseudo-classes not recognized in all browsers. If a browser encounters\n// an unknown pseudo-class it will discard the entire rule set.\n$mat-form-field-outline-dedupe: 0;\n\n// Applies a floating label above the form field control itself.\n@mixin _mat-form-field-outline-label-floating($font-scale, $infix-padding, $infix-margin-top) {\n  transform: translateY(-$infix-margin-top - $infix-padding + $mat-form-field-outline-dedupe)\n  scale($font-scale);\n  width: 100% / $font-scale + $mat-form-field-outline-dedupe;\n\n  $mat-form-field-outline-dedupe: $mat-form-field-outline-dedupe + 0.00001 !global;\n}\n\n@mixin mat-form-field-outline-typography($config) {\n  // The unit-less line-height from the font config.\n  $line-height: mat-line-height($config, input);\n  // The amount to scale the font for the floating label and subscript.\n  $subscript-font-scale: 0.75;\n  // The padding above and below the infix.\n  $infix-padding: 1em;\n  // The margin applied to the form-field-infix to reserve space for the floating label.\n  $infix-margin-top: 1em * $line-height * $subscript-font-scale;\n  // The space between the bottom of the .mat-form-field-flex area and the subscript wrapper.\n  // Mocks show half of the text size, but this margin is applied to an element with the subscript\n  // text font size, so we need to divide by the scale factor to make it half of the original text\n  // size.\n  $subscript-margin-top: 0.5em / $subscript-font-scale;\n  // The padding applied to the form-field-wrapper to reserve space for the subscript, since it's\n  // absolutely positioned. This is a combination of the subscript's margin and line-height, but we\n  // need to multiply by the subscript font scale factor since the wrapper has a larger font size.\n  $wrapper-padding-bottom: ($subscript-margin-top + $line-height) * $subscript-font-scale;\n  // The amount we offset the label from the input text in the outline appearance.\n  $outline-appearance-label-offset: -0.25em;\n\n  .mat-form-field-appearance-outline {\n    .mat-form-field-infix {\n      padding: $infix-padding 0 $infix-padding 0;\n    }\n\n    .mat-form-field-label {\n      top: $infix-margin-top + $infix-padding;\n      margin-top: $outline-appearance-label-offset;\n    }\n\n    &.mat-form-field-can-float {\n      &.mat-form-field-should-float .mat-form-field-label,\n      .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\n        @include _mat-form-field-outline-label-floating(\n                $subscript-font-scale, $infix-padding + $outline-appearance-label-offset,\n                $infix-margin-top);\n      }\n\n      // Server-side rendered matInput with a label attribute but label not shown\n      // (used as a pure CSS stand-in for mat-form-field-should-float).\n      .mat-input-server[label]:not(:label-shown) + .mat-form-field-label-wrapper\n      .mat-form-field-label {\n        @include _mat-form-field-outline-label-floating(\n                $subscript-font-scale, $infix-padding + $outline-appearance-label-offset,\n                $infix-margin-top);\n      }\n    }\n  }\n}\n\n\n\n\n\n\n\n// Theme styles that only apply to the standard appearance of the form-field.\n\n@mixin mat-form-field-standard-theme($theme) {\n  $foreground: map-get($theme, foreground);\n  $is-dark-theme: map-get($theme, is-dark);\n\n  $underline-color: mat-color($foreground, divider, if($is-dark-theme, 0.7, 0.42));\n\n  .mat-form-field-appearance-standard {\n    .mat-form-field-underline {\n      background-color: $underline-color;\n    }\n\n    &.mat-form-field-disabled .mat-form-field-underline {\n      @include mat-control-disabled-underline($underline-color);\n    }\n  }\n}\n\n@mixin mat-form-field-standard-typography($config) {}\n\n\n// Theme styles that apply to all appearances of the form-field.\n@mixin mat-form-field-theme($theme) {\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n  $is-dark-theme: map-get($theme, is-dark);\n\n  // Label colors. Required is used for the `*` star shown in the label.\n  $label-color: mat-color($foreground, secondary-text, if($is-dark-theme, 0.7, 0.6));\n  $focused-label-color: mat-color($primary, text);\n  $required-label-color: mat-color($accent, text);\n\n  // Underline colors.\n  $underline-color-base: mat-color($foreground, divider, if($is-dark-theme, 1, 0.87));\n  $underline-color-accent: mat-color($accent, text);\n  $underline-color-warn: mat-color($warn, text);\n  $underline-focused-color: mat-color($primary, text);\n\n  .mat-form-field-label {\n    color: $label-color;\n  }\n\n  .mat-hint {\n    color: $label-color;\n  }\n\n  .mat-form-field.mat-focused .mat-form-field-label {\n    color: $focused-label-color;\n\n    &.mat-accent {\n      color: $underline-color-accent;\n    }\n\n    &.mat-warn {\n      color: $underline-color-warn;\n    }\n  }\n\n  .mat-focused .mat-form-field-required-marker {\n    color: $required-label-color;\n  }\n\n  .mat-form-field-ripple {\n    background-color: $underline-color-base;\n  }\n\n  .mat-form-field.mat-focused {\n    .mat-form-field-ripple {\n      background-color: $underline-focused-color;\n\n      &.mat-accent {\n        background-color: $underline-color-accent;\n      }\n\n      &.mat-warn {\n        background-color: $underline-color-warn;\n      }\n    }\n  }\n\n  .mat-form-field-type-mat-native-select.mat-focused:not(.mat-form-field-invalid) {\n    .mat-form-field-infix::after {\n      color: $underline-focused-color;\n    }\n\n    &.mat-accent .mat-form-field-infix::after {\n      color: $underline-color-accent;\n    }\n\n    &.mat-warn .mat-form-field-infix::after {\n      color: $underline-color-warn;\n    }\n  }\n\n  // Styling for the error state of the form field. Note that while the same can be\n  // achieved with the ng-* classes, we use this approach in order to ensure that the same\n  // logic is used to style the error state and to show the error messages.\n  .mat-form-field.mat-form-field-invalid {\n    .mat-form-field-label {\n      color: $underline-color-warn;\n\n      &.mat-accent,\n      .mat-form-field-required-marker {\n        color: $underline-color-warn;\n      }\n    }\n\n    .mat-form-field-ripple,\n    .mat-form-field-ripple.mat-accent {\n      background-color: $underline-color-warn;\n    }\n  }\n\n  .mat-error {\n    color: $underline-color-warn;\n  }\n\n  @include mat-form-field-legacy-theme($theme);\n  @include mat-form-field-standard-theme($theme);\n  @include mat-form-field-fill-theme($theme);\n  @include mat-form-field-outline-theme($theme);\n}\n\n// Used to make instances of the _mat-form-field-label-floating mixin negligibly different,\n// and prevent Google's CSS Optimizer from collapsing the declarations. This is needed because some\n// of the selectors contain pseudo-classes not recognized in all browsers. If a browser encounters\n// an unknown pseudo-class it will discard the entire rule set.\n$mat-form-field-dedupe: 0;\n\n// Applies a floating label above the form field control itself.\n@mixin _mat-form-field-label-floating($font-scale, $infix-padding, $infix-margin-top) {\n  transform: translateY(-$infix-margin-top - $infix-padding + $mat-form-field-dedupe)\n             scale($font-scale);\n  width: 100% / $font-scale + $mat-form-field-dedupe;\n\n  $mat-form-field-dedupe: $mat-form-field-dedupe + 0.00001 !global;\n}\n\n@mixin mat-form-field-typography($config) {\n  // The unit-less line-height from the font config.\n  $line-height: mat-line-height($config, input);\n\n  // The amount to scale the font for the floating label and subscript.\n  $subscript-font-scale: 0.75;\n  // The amount to scale the font for the prefix and suffix icons.\n  $prefix-suffix-icon-font-scale: 1.5;\n\n  // The padding on the infix. Mocks show half of the text size.\n  $infix-padding: 0.5em;\n  // The margin applied to the form-field-infix to reserve space for the floating label.\n  $infix-margin-top: 1em * $line-height * $subscript-font-scale;\n  // Font size to use for the label and subscript text.\n  $subscript-font-size: $subscript-font-scale * 100%;\n  // Font size to use for the for the prefix and suffix icons.\n  $prefix-suffix-icon-font-size: $prefix-suffix-icon-font-scale * 100%;\n  // The space between the bottom of the .mat-form-field-flex area and the subscript wrapper.\n  // Mocks show half of the text size, but this margin is applied to an element with the subscript\n  // text font size, so we need to divide by the scale factor to make it half of the original text\n  // size.\n  $subscript-margin-top: 0.5em / $subscript-font-scale;\n  // The padding applied to the form-field-wrapper to reserve space for the subscript, since it's\n  // absolutely positioned. This is a combination of the subscript's margin and line-height, but we\n  // need to multiply by the subscript font scale factor since the wrapper has a larger font size.\n  $wrapper-padding-bottom: ($subscript-margin-top + $line-height) * $subscript-font-scale;\n\n  .mat-form-field {\n    @include mat-typography-level-to-styles($config, input);\n  }\n\n  .mat-form-field-wrapper {\n    padding-bottom: $wrapper-padding-bottom;\n  }\n\n  .mat-form-field-prefix,\n  .mat-form-field-suffix {\n    // Allow icons in a prefix or suffix to adapt to the correct size.\n    .mat-icon {\n      font-size: $prefix-suffix-icon-font-size;\n      line-height: $line-height;\n    }\n\n    // Allow icon buttons in a prefix or suffix to adapt to the correct size.\n    .mat-icon-button {\n      height: $prefix-suffix-icon-font-scale * 1em;\n      width: $prefix-suffix-icon-font-scale * 1em;\n\n      .mat-icon {\n        height: $line-height * 1em;\n        line-height: $line-height;\n      }\n    }\n  }\n\n  .mat-form-field-infix {\n    padding: $infix-padding 0;\n    // Throws off the baseline if we do it as a real margin, so we do it as a border instead.\n    border-top: $infix-margin-top solid transparent;\n  }\n\n  .mat-form-field-can-float {\n    &.mat-form-field-should-float .mat-form-field-label,\n    .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\n      @include _mat-form-field-label-floating(\n              $subscript-font-scale, $infix-padding, $infix-margin-top);\n    }\n\n    // Server-side rendered matInput with a label attribute but label not shown\n    // (used as a pure CSS stand-in for mat-form-field-should-float).\n    .mat-input-server[label]:not(:label-shown) + .mat-form-field-label-wrapper\n        .mat-form-field-label {\n      @include _mat-form-field-label-floating(\n              $subscript-font-scale, $infix-padding, $infix-margin-top);\n    }\n  }\n\n  .mat-form-field-label-wrapper {\n    top: -$infix-margin-top;\n    padding-top: $infix-margin-top;\n  }\n\n  .mat-form-field-label {\n    top: $infix-margin-top + $infix-padding;\n  }\n\n  .mat-form-field-underline {\n    // We want the underline to start at the end of the content box, not the padding box,\n    // so we move it up by the padding amount.\n    bottom: $wrapper-padding-bottom;\n  }\n\n  .mat-form-field-subscript-wrapper {\n    font-size: $subscript-font-size;\n    margin-top: $subscript-margin-top;\n\n    // We want the subscript to start at the end of the content box, not the padding box,\n    // so we move it up by the padding amount (adjusted for the smaller font size);\n    top: calc(100% - #{$wrapper-padding-bottom / $subscript-font-scale});\n  }\n\n  @include mat-form-field-legacy-typography($config);\n  @include mat-form-field-standard-typography($config);\n  @include mat-form-field-fill-typography($config);\n  @include mat-form-field-outline-typography($config);\n}\n\n\n\n\n\n@mixin mat-tree-theme($theme) {\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n  .mat-tree {\n    background: mat-color($background, 'card');\n  }\n\n  .mat-tree-node,\n  .mat-nested-tree-node {\n    color: mat-color($foreground, text);\n  }\n}\n\n@mixin mat-tree-typography($config) {\n  .mat-tree {\n    font-family: mat-font-family($config);\n  }\n\n  .mat-tree-node,\n  .mat-nested-tree-node {\n    font-weight: mat-font-weight($config, body-1);\n    font-size: mat-font-size($config, body-1);\n  }\n}\n\n\n\n// Includes all of the typographic styles.\n@mixin angular-material-typography($config: null) {\n  @if $config == null {\n    $config: mat-typography-config();\n  }\n\n  @include mat-badge-typography($config);\n  @include mat-base-typography($config);\n  @include mat-autocomplete-typography($config);\n  @include mat-bottom-sheet-typography($config);\n  @include mat-button-typography($config);\n  @include mat-button-toggle-typography($config);\n  @include mat-card-typography($config);\n  @include mat-checkbox-typography($config);\n  @include mat-chips-typography($config);\n  @include mat-table-typography($config);\n  @include mat-datepicker-typography($config);\n  @include mat-dialog-typography($config);\n  @include mat-expansion-panel-typography($config);\n  @include mat-form-field-typography($config);\n  @include mat-grid-list-typography($config);\n  @include mat-icon-typography($config);\n  @include mat-input-typography($config);\n  @include mat-menu-typography($config);\n  @include mat-paginator-typography($config);\n  @include mat-progress-bar-typography($config);\n  @include mat-progress-spinner-typography($config);\n  @include mat-radio-typography($config);\n  @include mat-select-typography($config);\n  @include mat-sidenav-typography($config);\n  @include mat-slide-toggle-typography($config);\n  @include mat-slider-typography($config);\n  @include mat-stepper-typography($config);\n  @include mat-sort-typography($config);\n  @include mat-tabs-typography($config);\n  @include mat-toolbar-typography($config);\n  @include mat-tooltip-typography($config);\n  @include mat-list-typography($config);\n  @include mat-option-typography($config);\n  @include mat-optgroup-typography($config);\n  @include mat-snack-bar-typography($config);\n  @include mat-tree-typography($config);\n}\n\n\n// Mixin that renders all of the core styles that are not theme-dependent.\n@mixin mat-core($typography-config: null) {\n  @include angular-material-typography($typography-config);\n  @include mat-ripple();\n  @include cdk-a11y();\n  @include cdk-overlay();\n  @include cdk-text-field();\n}\n\n// Mixin that renders all of the core styles that depend on the theme.\n@mixin mat-core-theme($theme) {\n  @include mat-ripple-theme($theme);\n  @include mat-option-theme($theme);\n  @include mat-optgroup-theme($theme);\n  @include mat-pseudo-checkbox-theme($theme);\n\n  // Provides external CSS classes for each elevation value. Each CSS class is formatted as\n  // `mat-elevation-z$zValue` where `$zValue` corresponds to the z-space to which the element is\n  // elevated.\n  @for $zValue from 0 through 24 {\n    .#{$_mat-elevation-prefix}#{$zValue} {\n      @include _mat-theme-elevation($zValue, $theme);\n    }\n  }\n\n  // Wrapper element that provides the theme background when the user's content isn't\n  // inside of a `mat-sidenav-container`. Note that we need to exclude the ampersand\n  // selector in case the mixin is included at the top level.\n  .mat-app-background#{if(&, ', &.mat-app-background', '')} {\n    $background: map-get($theme, background);\n    $foreground: map-get($theme, foreground);\n\n    background-color: mat-color($background, background);\n    color: mat-color($foreground, text);\n  }\n\n  // Marker that is used to determine whether the user has added a theme to their page.\n  @at-root {\n    .mat-theme-loaded-marker {\n      display: none;\n    }\n  }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n@mixin mat-divider-theme($theme) {\n  $foreground: map-get($theme, foreground);\n\n  .mat-divider {\n    border-top-color: mat-color($foreground, divider);\n  }\n\n  .mat-divider-vertical {\n    border-right-color: mat-color($foreground, divider);\n  }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// Create a theme.\n@mixin angular-material-theme($theme) {\n  @include mat-core-theme($theme);\n  @include mat-autocomplete-theme($theme);\n  @include mat-badge-theme($theme);\n  @include mat-bottom-sheet-theme($theme);\n  @include mat-button-theme($theme);\n  @include mat-button-toggle-theme($theme);\n  @include mat-card-theme($theme);\n  @include mat-checkbox-theme($theme);\n  @include mat-chips-theme($theme);\n  @include mat-table-theme($theme);\n  @include mat-datepicker-theme($theme);\n  @include mat-dialog-theme($theme);\n  @include mat-divider-theme($theme);\n  @include mat-expansion-panel-theme($theme);\n  @include mat-form-field-theme($theme);\n  @include mat-grid-list-theme($theme);\n  @include mat-icon-theme($theme);\n  @include mat-input-theme($theme);\n  @include mat-list-theme($theme);\n  @include mat-menu-theme($theme);\n  @include mat-paginator-theme($theme);\n  @include mat-progress-bar-theme($theme);\n  @include mat-progress-spinner-theme($theme);\n  @include mat-radio-theme($theme);\n  @include mat-select-theme($theme);\n  @include mat-sidenav-theme($theme);\n  @include mat-slide-toggle-theme($theme);\n  @include mat-slider-theme($theme);\n  @include mat-stepper-theme($theme);\n  @include mat-sort-theme($theme);\n  @include mat-tabs-theme($theme);\n  @include mat-toolbar-theme($theme);\n  @include mat-tooltip-theme($theme);\n  @include mat-tree-theme($theme);\n  @include mat-snack-bar-theme($theme);\n}\n","@import 'fonts-variables.less';\n\n@font-face {\n    font-family : SourceSansPro;\n    src : url(/static/dataiku/fonts/SourceSansPro-Bold.woff);\n    font-weight: @font-weight-bold;\n}\n\n@font-face {\n    font-family : SourceSansPro;\n    src : url(/static/dataiku/fonts/SourceSansPro-Semibold.woff);\n    font-weight: @font-weight-semi-bold;\n}\n\n@font-face {\n    font-family : SourceSansPro;\n    src : url(/static/dataiku/fonts/SourceSansPro-Regular.woff);\n    font-weight: @font-weight-normal;\n}\n\n.mx-ssp(@size, @weight) {\n    font-family : 'SourceSansPro';\n    font-weight: @weight;\n    font-size: @size;\n}\n\n.mx-rightcol-title-font {\n    .mx-ssp(13px, @font-weight-bold);\n}\n\n.font-weight-normal {\n    font-weight: @font-weight-normal;\n}\n\n.font-weight-semi-bold {\n    font-weight: @font-weight-semi-bold;\n}\n\n.font-weight-bold {\n    font-weight: @font-weight-bold;\n}\n\n.dku-huge-title {\n    font-weight: @font-weight-normal;\n    font-size: 38px;\n    line-height: 48px;\n    color: @text-important;\n}\n\n.dku-huge-title-sb {\n    font-weight: @font-weight-semi-bold; \n    font-size: 38px;\n    line-height: 48px;\n    color: @text-important;\n}\n\n.dku-ultralarge-title-sb {\n    font-weight: @font-weight-semi-bold;\n    font-size: 32px;\n    line-height: 40px;\n    color: @text-important;\n}\n\n.dku-extralarge-title-sb {\n    font-weight: @font-weight-semi-bold;\n    font-size: 30px;\n    line-height: 38px;\n    color: @text-important;\n}\n\n.dku-large-title-sb {\n    font-weight: @font-weight-semi-bold;\n    font-size: 26px;\n    line-height: 33px;\n    color: @text-important;\n}\n\n.dku-grand-title-sb {\n    font-weight: @font-weight-semi-bold;\n    font-size: 22px;\n    line-height: 28px;\n    color: @text-important;\n}\n\n.dku-grand-title {\n    font-weight: @font-weight-normal;\n    font-size: 22px;\n    line-height: 28px;\n    color: @text-important;\n}\n\n.dku-medium-title-sb {\n    font-weight: @font-weight-semi-bold;\n    font-size: 18px;\n    line-height: 23px;\n    color: @text-important;\n}\n\n.dku-small-title-sb {\n    font-weight: @font-weight-semi-bold;\n    font-size: 16px;\n    line-height: 20px;\n    color: @text-important;\n}\n\n.dku-small-title {\n    font-weight: @font-weight-normal;\n    font-size: 16px;\n    line-height: 20px;\n    color: @text-important;\n}\n\n.dku-text {\n    font-weight: @font-weight-normal;\n    font-size: 13px;\n    line-height: 16px;\n    color: @text-important;\n}\n\n.dku-text-sb {\n    font-weight: @font-weight-semi-bold;\n    font-size: 13px;\n    line-height: 16px;\n    color: @text-important;\n}\n\n.dku-text-b {\n    font-weight: @font-weight-bold;\n    font-size: 13px;\n    line-height: 16px;\n    color: @text-important;\n}\n\n.dku-tiny-text {\n    font-weight: @font-weight-normal;\n    font-size: 10px;\n    line-height: 13px;\n    color: @text-important;\n}\n\n.dku-tiny-text-sb {\n    font-weight: @font-weight-semi-bold; \n    font-size: 10px;\n    line-height: 13px;\n    color: @text-important;\n}\n","/***** Dataiku Brand Color *****/\n/***** Universe color *****/\n/***** Primary action colors *****/\n/***** Greyscale *****/\n/***** Status colors *****/\n/******* Chart color *******/\n/******* Colors per object types *******/\n/******* Custom colors for plugin recipes *******/\n/******* Variables helpers *******/\n/****** Components *******/\n/* Dropdowns */\n/* Buttons */\n/* Alerts */\n/****** Class helpers *******/\n.text-important {\n  color: #222222;\n}\n.text-weak {\n  color: #666666;\n}\n.text-prompt {\n  color: #BBBBBB;\n}\n.text-active {\n  color: #31708F;\n}\n.text-disabled {\n  color: #CCCCCC;\n}\n.text-error {\n  color: #CE1228;\n}\n.text-success {\n  color: #4CAF50;\n}\n.text-warning {\n  color: #F28C37;\n}\n.text-primary {\n  color: #3B99FC;\n}\n.text-debug {\n  color: #999999;\n}\n.success-background {\n  background-color: #4CAF50;\n}\n.success-background--light {\n  background-color: #D7F0D6;\n}\n.info-background {\n  background-color: #31708F;\n}\n.info-background--light {\n  background-color: #D9E6ED;\n}\n.error-background {\n  background-color: #CE1228;\n}\n.error-background--light {\n  background-color: #F9E3E5;\n}\n.warning-background {\n  background-color: #F28C37;\n}\n.warning-background--light {\n  background-color: #FDE5CA;\n}\n.link-normal {\n  color: #2D86FB;\n}\n.link-hover {\n  color: #267CFB;\n}\n.link-visited {\n  color: #196BFA;\n}\n.border {\n  border-color: #CCCCCC;\n}\n.line-hover {\n  background-color: #F2F2F2;\n}\n.line-selected {\n  background-color: #E7F3FF;\n}\n.odd-line {\n  background-color: #F2F2F2;\n}\n.divider {\n  border-bottom: #DDDDDD;\n}\n.disabled {\n  color: #CCCCCC;\n}\n.page-background {\n  background-color: #FFFFFF;\n}\n.background {\n  background-color: #F2F2F2;\n}\n.chips {\n  color: #F2F2F2;\n}\n.universe-color.home {\n  color: #2AB1AC;\n}\n.universe-color.flow,\n.universe-color.recipe {\n  color: #F9BD38;\n}\n.universe-color.datasets,\n.universe-color.dataset {\n  color: #28A9DD;\n}\n.universe-color.streaming-endpoint,\n.universe-color.streaming_endpoint {\n  color: #3B7879;\n}\n.universe-color.managed-folder,\n.universe-color.managed_folder {\n  color: #28A9DD;\n}\n.universe-color.analysis {\n  color: #29AF5D;\n}\n.universe-color.notebooks,\n.universe-color.notebook,\n.universe-color.web_app,\n.universe-color.report {\n  color: #F28C38;\n}\n.universe-color.job,\n.universe-color.jobs,\n.universe-color.scenario {\n  color: #8541AA;\n}\n.universe-color.dashboard {\n  color: #F44336;\n}\n.universe-color.project {\n  color: #333333;\n}\n.universe-color.column {\n  color: #333333;\n}\n.universe-color.discussion {\n  color: #333333;\n}\n.universe-color.wiki,\n.universe-color.article {\n  color: #427B98;\n}\n.universe-color.bundle {\n  color: #54707E;\n}\n.universe-color.metrics {\n  color: #333333;\n}\n.universe-color.recipe {\n  color: #F28C38;\n}\n.universe-color.recipe-visual {\n  color: #F9BD38;\n}\n.universe-color.recipe-custom {\n  color: #AA4141;\n}\n.universe-color.recipe-custom-red {\n  color: #E13D3C;\n}\n.universe-color.recipe-custom-pink {\n  color: #E91E63;\n}\n.universe-color.recipe-custom-purple {\n  color: #8C2DA7;\n}\n.universe-color.recipe-custom-blue {\n  color: #31439C;\n}\n.universe-color.recipe-custom-green {\n  color: #0F786B;\n}\n.universe-color.recipe-custom-sky {\n  color: #00BCD4;\n}\n.universe-color.recipe-custom-yellow {\n  color: #CDDC39;\n}\n.universe-color.recipe-custom-orange {\n  color: #E44B27;\n}\n.universe-color.recipe-custom-brown {\n  color: #795548;\n}\n.universe-color.recipe-custom-gray {\n  color: #465A64;\n}\n.universe-color.recipe-code {\n  color: #F28C38;\n}\n.universe-color.recipe-continuous {\n  color: #3B7879;\n}\n.universe-color.recipe-train,\n.universe-color.recipe-score,\n.universe-color.recipe-clustering,\n.universe-color.recipe-evaluation,\n.universe-color.recipe-standalone,\n.universe-color.recipe-standalone_evaluation {\n  color: #29AF5D;\n}\n.universe-color.insight {\n  color: #F44336;\n}\n.universe-color.model-evaluation-store,\n.universe-color.model_evaluation_store {\n  color: #29AF5D;\n}\n.universe-color.saved-model,\n.universe-color.saved_model {\n  color: #29AF5D;\n}\n.universe-color.lambda-service {\n  color: #2AB1AC;\n}\n.universe-color.chart {\n  color: #3075AE;\n}\n.universe-color.meaning {\n  color: #333333;\n}\n.universe-color.plugin {\n  color: #444444;\n}\n.universe-color.more {\n  color: #54707E;\n}\n.universe-color.navigation {\n  color: #666666;\n}\n.universe-color.api-deployer {\n  color: #2AB1AC;\n}\n.universe-color.project-deployer {\n  color: #3F51B5;\n}\n.universe-background {\n  color: #FFFFFF !important;\n  background: #2AB1AC;\n}\n.universe-background.home {\n  background-color: #2AB1AC;\n}\n.universe-background.flow,\n.universe-background.recipe {\n  background-color: #F9BD38;\n}\n.universe-background.datasets,\n.universe-background.dataset {\n  background-color: #28A9DD;\n}\n.universe-background.streaming-endpoint,\n.universe-background.streaming_endpoint {\n  background-color: #3B7879;\n}\n.universe-background.chart {\n  background-color: #3075AE;\n}\n.universe-background.managed-folder,\n.universe-background.managed_folder {\n  background-color: #28A9DD;\n}\n.universe-background.analysis {\n  background-color: #29AF5D;\n}\n.universe-background.notebooks,\n.universe-background.notebook,\n.universe-background.web_app,\n.universe-background.report {\n  background-color: #F28C38;\n}\n.universe-background.job,\n.universe-background.jobs,\n.universe-background.scenario {\n  background-color: #8541AA;\n}\n.universe-background.dashboard,\n.universe-background.insight {\n  background-color: #F44336;\n}\n.universe-background.discussion,\n.universe-background.metrics {\n  background-color: #666666;\n}\n.universe-background.wiki,\n.universe-background.article {\n  background-color: #427B98;\n}\n.universe-background.bundle {\n  background-color: #54707E;\n}\n.universe-background.recipe-visual {\n  background-color: #F9BD38;\n}\n.universe-background.recipe-code {\n  background-color: #F28C38;\n}\n.universe-background.recipe-continuous {\n  background-color: #3B7879;\n}\n.universe-background.recipe-train,\n.universe-background.recipe-score,\n.universe-background.recipe-clustering,\n.universe-background.recipe-evaluation,\n.universe-background.recipe-standalone_evaluation,\n.universe-background.saved-model,\n.universe-background.saved_model {\n  background-color: #29AF5D;\n}\n.universe-background.model-evaluation-store,\n.universe-background.model_evaluation_store {\n  background-color: #29AF5D;\n}\n.universe-background.recipe-custom {\n  background-color: #AA4141;\n}\n.universe-background.recipe-custom-red {\n  background-color: #E13D3C;\n}\n.universe-background.recipe-custom-pink {\n  background-color: #E91E63;\n}\n.universe-background.recipe-custom-purple {\n  background-color: #8C2DA7;\n}\n.universe-background.recipe-custom-blue {\n  background-color: #31439C;\n}\n.universe-background.recipe-custom-green {\n  background-color: #0F786B;\n}\n.universe-background.recipe-custom-sky {\n  background-color: #00BCD4;\n}\n.universe-background.recipe-custom-yellow {\n  background-color: #CDDC39;\n}\n.universe-background.recipe-custom-orange {\n  background-color: #E44B27;\n}\n.universe-background.recipe-custom-brown {\n  background-color: #795548;\n}\n.universe-background.recipe-custom-gray {\n  background-color: #465A64;\n}\n.universe-background.shared-objects {\n  background-color: #F9BD38;\n}\n.universe-background.shared-objects.object-icon i.icon {\n  color: #222222 !important;\n}\n.universe-background.plugin {\n  background-color: #444444;\n}\n.universe-background.admin {\n  background-color: #444444;\n}\n.universe-background.catalog {\n  background-color: #444444;\n}\n.universe-background.inbox {\n  background-color: #444444;\n}\n.universe-background.meanings {\n  background-color: #444444;\n}\n.universe-background.api-deployer {\n  background-color: #2AB1AC;\n}\n.universe-background.project-deployer {\n  background-color: #3F51B5;\n}\n.universe-background.profile {\n  background-color: #444444;\n}\n.universe-background.alation {\n  background-color: #444444;\n}\n.universe-fill {\n  color: #FFFFFF !important;\n  fill: #666666;\n}\n.universe-fill.home {\n  fill: #2AB1AC;\n}\n.universe-fill.flow,\n.universe-fill.recipe {\n  fill: #F9BD38;\n}\n.universe-fill.datasets,\n.universe-fill.dataset {\n  fill: #28A9DD;\n}\n.universe-fill.managed-folder,\n.universe-fill.managed_folder {\n  fill: #28A9DD;\n}\n.universe-fill.analysis {\n  fill: #29AF5D;\n}\n.universe-fill.notebooks,\n.universe-fill.notebook {\n  fill: #F28C38;\n}\n.universe-fill.job,\n.universe-fill.jobs,\n.universe-fill.scenario {\n  fill: #8541AA;\n}\n.universe-fill.dashboard {\n  fill: #F44336;\n}\n.universe-fill.project {\n  fill: #222222;\n}\n.universe-fill.column {\n  fill: #28A9DD;\n}\n.universe-fill.discussions {\n  color: #434A54;\n}\n.universe-fill.metrics {\n  fill: #666666;\n}\n.universe-fill.wiki,\n.universe-fill.article {\n  fill: #427B98;\n}\n.universe-fill.recipe {\n  fill: #F28C38;\n}\n.universe-fill.recipe-visual {\n  fill: #F9BD38;\n}\n.universe-fill.recipe-custom {\n  fill: #AA4141;\n}\n.universe-fill.recipe-custom-red {\n  fill: #E13D3C;\n}\n.universe-fill.recipe-custom-pink {\n  fill: #E91E63;\n}\n.universe-fill.recipe-custom-purple {\n  fill: #8C2DA7;\n}\n.universe-fill.recipe-custom-blue {\n  fill: #31439C;\n}\n.universe-fill.recipe-custom-green {\n  fill: #0F786B;\n}\n.universe-fill.recipe-custom-sky {\n  fill: #00BCD4;\n}\n.universe-fill.recipe-custom-yellow {\n  fill: #CDDC39;\n}\n.universe-fill.recipe-custom-orange {\n  fill: #E44B27;\n}\n.universe-fill.recipe-custom-brown {\n  fill: #795548;\n}\n.universe-fill.recipe-custom-gray {\n  fill: #465A64;\n}\n.universe-fill.recipe-code {\n  fill: #F28C38;\n}\n.universe-fill.recipe-train,\n.universe-fill.recipe-score,\n.universe-fill.recipe-clustering,\n.universe-fill.recipe-evaluation,\n.universe-fill.recipe-standalone_evaluation {\n  fill: #29AF5D;\n}\n.universe-fill.insight {\n  fill: #F44336;\n}\n.universe-fill.saved-model,\n.universe-fill.saved_model {\n  fill: #29AF5D;\n}\n.universe-fill.model-evaluation-store,\n.universe-fill.model_evaluation_store {\n  fill: #29AF5D;\n}\n.universe-fill.chart {\n  fill: #3075AE;\n}\n.universe-fill.meaning {\n  fill: #28A9DD;\n}\n.color-visual-recipe {\n  color: #F9BD38;\n}\n.color-code-recipe {\n  color: #F28C38;\n}\n.color-ml-recipe {\n  color: #29AF5D;\n}\n@font-face {\n  font-family: SourceSansPro;\n  src: url(/static/dataiku/fonts/SourceSansPro-Bold.woff);\n  font-weight: 600;\n}\n@font-face {\n  font-family: SourceSansPro;\n  src: url(/static/dataiku/fonts/SourceSansPro-Semibold.woff);\n  font-weight: 500;\n}\n@font-face {\n  font-family: SourceSansPro;\n  src: url(/static/dataiku/fonts/SourceSansPro-Regular.woff);\n  font-weight: 400;\n}\n.mx-rightcol-title-font {\n  font-family: 'SourceSansPro';\n  font-weight: 600;\n  font-size: 13px;\n}\n.font-weight-normal {\n  font-weight: 400;\n}\n.font-weight-semi-bold {\n  font-weight: 500;\n}\n.font-weight-bold {\n  font-weight: 600;\n}\n.dku-huge-title {\n  font-weight: 400;\n  font-size: 38px;\n  line-height: 48px;\n  color: #222222;\n}\n.dku-huge-title-sb {\n  font-weight: 500;\n  font-size: 38px;\n  line-height: 48px;\n  color: #222222;\n}\n.dku-ultralarge-title-sb {\n  font-weight: 500;\n  font-size: 32px;\n  line-height: 40px;\n  color: #222222;\n}\n.dku-extralarge-title-sb {\n  font-weight: 500;\n  font-size: 30px;\n  line-height: 38px;\n  color: #222222;\n}\n.dku-large-title-sb {\n  font-weight: 500;\n  font-size: 26px;\n  line-height: 33px;\n  color: #222222;\n}\n.dku-grand-title-sb {\n  font-weight: 500;\n  font-size: 22px;\n  line-height: 28px;\n  color: #222222;\n}\n.dku-grand-title {\n  font-weight: 400;\n  font-size: 22px;\n  line-height: 28px;\n  color: #222222;\n}\n.dku-medium-title-sb {\n  font-weight: 500;\n  font-size: 18px;\n  line-height: 23px;\n  color: #222222;\n}\n.dku-small-title-sb {\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 20px;\n  color: #222222;\n}\n.dku-small-title {\n  font-weight: 400;\n  font-size: 16px;\n  line-height: 20px;\n  color: #222222;\n}\n.dku-text {\n  font-weight: 400;\n  font-size: 13px;\n  line-height: 16px;\n  color: #222222;\n}\n.dku-text-sb {\n  font-weight: 500;\n  font-size: 13px;\n  line-height: 16px;\n  color: #222222;\n}\n.dku-text-b {\n  font-weight: 600;\n  font-size: 13px;\n  line-height: 16px;\n  color: #222222;\n}\n.dku-tiny-text {\n  font-weight: 400;\n  font-size: 10px;\n  line-height: 13px;\n  color: #222222;\n}\n.dku-tiny-text-sb {\n  font-weight: 500;\n  font-size: 10px;\n  line-height: 13px;\n  color: #222222;\n}\n.mat-select-value {\n  font-family: 'SourceSansPro';\n  font-size: 13px;\n  text-align: right;\n}\n.mat-option {\n  font-family: 'SourceSansPro';\n}\n.mat-select-panel {\n  border-radius: 0 !important;\n  max-height: 300px !important;\n}\n.mat-select-panel:not([class*=mat-elevation-z]) {\n  box-shadow: 2px 2px 8px 1px rgba(34, 34, 34, 0.2);\n}\n.mat-select-panel .mat-option.dku-mat-option--described {\n  height: auto;\n  padding: 10px;\n}\n.mat-select-panel .mat-option.dku-mat-option--described:not(.mat-selected):hover {\n  background-color: #F2F2F2;\n}\n.mat-select-panel .mat-option.dku-mat-option--described.mat-selected {\n  background-color: #E7F3FF;\n}\n.mat-select-panel .mat-option.dku-mat-option--described.mat-selected:hover {\n  background-color: #F2F2F2;\n}\n.mat-select-panel .mat-option.dku-mat-option--described:not(:first-child) {\n  border-top: 1px solid #CCCCCC;\n}\n.mat-select-panel .mat-option.dku-mat-option--described .mat-option-text {\n  line-height: 20px;\n}\n.mat-select-panel .mat-option.dku-mat-option--described[aria-disabled=true] {\n  color: #666666;\n  pointer-events: none;\n  opacity: 0.5;\n}\n.mat-option:hover:not(.mat-option-disabled),\n.mat-option:focus:not(.mat-option-disabled) {\n  background-color: #F2F2F2;\n}\n.mat-autocomplete-panel {\n  border-radius: 0 none;\n}\n.mat-tab-group.mat-primary .mat-ink-bar {\n  background-color: #3B99FC;\n}\n.mat-tab-label {\n  min-width: 120px;\n}\n.dku-mat-select-panel--described {\n  min-width: none !important;\n  max-width: none !important;\n  width: 500px !important;\n}\n.mat-option__main-label {\n  font-weight: 500;\n  font-size: 13px;\n  line-height: 23px;\n}\n.mat-option__description {\n  font-size: 12px;\n  color: #666666;\n  line-height: 17px;\n}\n.mat-menu-item,\n.mat-option {\n  height: 32px;\n  line-height: 32px;\n  padding: 0 8px;\n  font-size: 13px;\n}\n.mat-menu-content:not(:empty) {\n  padding: 0;\n}\n.mat-menu-item--selected {\n  font-weight: 500;\n}\n.mat-menu-panel {\n  border-radius: 0px;\n  min-height: 32px;\n}\n.mat-tooltip {\n  white-space: pre-line;\n}\n.overlay-no-pointer-events {\n  pointer-events: none;\n}\n.mat-form-field-appearance-legacy .mat-form-field-wrapper {\n  padding: 0;\n}\n.mat-form-field-appearance-legacy .mat-form-field-underline {\n  display: none;\n}\n.mat-form-field-appearance-legacy .mat-form-field-infix {\n  border: none;\n  padding: 0;\n  width: 206px;\n}\n.mat-form-field-appearance-legacy .mat-form-field-label-wrapper {\n  display: none;\n}\n.mat-form-field-hide-placeholder .mat-input-element::-webkit-input-placeholder,\n.mat-form-field-hide-placeholder .mat-input-element::placeholder {\n  color: #999999 !important;\n  -webkit-text-fill-color: #999999;\n}\ndiv.cdk-overlay-container {\n  z-index: 4000;\n}\n","@import 'color-variables.less';\n\n/****** Class helpers *******/\n\n// Typography\n.text-important                     { color:    @text-important; }\n.text-weak                          { color:    @text-weak; }\n.text-prompt                        { color:    @text-prompt; }\n.text-active                        { color:    @text-active; }\n.text-disabled                      { color:    @text-disabled; }\n.text-error                         { color:    @error-text; }\n.text-success                       { color:    @success-text; }\n.text-warning                       { color:    @warning-text; }\n.text-primary                       { color:    @digital-blue-base; }\n.text-debug                         { color:    @debug-text; }\n\n// Backgrounds\n.success-background                 { background-color: @success-background-strong; }\n.success-background--light          { background-color: @success-background-light; }\n.info-background                    { background-color: @info-background-strong; }\n.info-background--light             { background-color: @info-background-light; }\n.error-background                   { background-color: @error-background-strong; }\n.error-background--light            { background-color: @error-background-light; }\n.warning-background                 { background-color: @warning-background-strong; }\n.warning-background--light          { background-color: @warning-background-light; }\n\n// Link\n.link-normal                        { color:    @link-normal; }\n.link-hover                         { color:    @link-hover; }\n.link-visited                       { color:    @link-visited }\n\n// Misc\n.border                             { border-color:     @border-color; }\n.line-hover                         { background-color: @line-hover; }\n.line-selected                      { background-color: @line-selected; }\n.odd-line                           { background-color: @grey-lighten-8; }\n.divider                            { border-bottom:    @grey-lighten-7; }\n.disabled                           { color:            @text-disabled; }\n.page-background                    { background-color: @white-background; }\n.background                         { background-color: @grey-background; }\n.chips                              { color:            @grey-lighten-8; }\n\n\n.universe-color {\n    &.home                          { color:    @project-home-color; }\n    &.flow, &.recipe                { color:    @flow-color; }\n    &.datasets, &.dataset           { color:    @dataset-color; }\n    &.streaming-endpoint,\n    &.streaming_endpoint            { color:    @streaming-endpoint-color; }\n    &.managed-folder,\n    &.managed_folder\n                                    { color:    @dataset-color; }\n    &.analysis                      { color:    @analysis-color; }\n    &.notebooks,\n    &.notebook,\n    &.web_app,\n    &.report\n                                    { color:    @notebook-color; }\n    &.job, &.jobs, &.scenario       { color:    @job-color; }\n    &.dashboard                     { color:    @dashboard-color; }\n    &.project                       { color:    @grey-lighten-1; }\n    &.column                        { color:    @grey-lighten-1; }\n    &.discussion                    { color:    @grey-lighten-1; }\n    &.wiki, &.article               { color:    @wiki-color; }\n    &.bundle                        { color:    @bundle-color; }\n    &.metrics                       { color:    @grey-lighten-1; }\n    &.recipe                        { color:    @code-recipe-color; }\n    &.recipe-visual                 { color:    @visual-recipe-color; }\n    &.recipe-custom                 { color:    @custom-recipe-color; }\n    &.recipe-custom-red             { color:    @custom-recipe-color-red; }\n    &.recipe-custom-pink            { color:    @custom-recipe-color-pink; }\n    &.recipe-custom-purple          { color:    @custom-recipe-color-purple; }\n    &.recipe-custom-blue            { color:    @custom-recipe-color-blue; }\n    &.recipe-custom-green           { color:    @custom-recipe-color-green; }\n    &.recipe-custom-sky             { color:    @custom-recipe-color-sky; }\n    &.recipe-custom-yellow          { color:    @custom-recipe-color-yellow; }\n    &.recipe-custom-orange          { color:    @custom-recipe-color-orange; }\n    &.recipe-custom-brown           { color:    @custom-recipe-color-brown; }\n    &.recipe-custom-gray            { color:    @custom-recipe-color-gray; }\n    &.recipe-code                   { color:    @code-recipe-color; }\n    &.recipe-continuous             { color:    @streaming-endpoint-color; }\n    &.recipe-train,\n    &.recipe-score,\n    &.recipe-clustering,\n    &.recipe-evaluation,\n    &.recipe-standalone,          // for the timeline\n    &.recipe-standalone_evaluation\n                                    { color:    @ml-recipe-color; }\n    &.insight                       { color:    @dashboard-color; }\n    &.model-evaluation-store,\n    &.model_evaluation_store\n                                    { color:    @model-evaluation-store-color; }\n    &.saved-model,\n    &.saved_model\n                                    { color:    @saved-model-color; }\n    &.lambda-service                { color:    @teal-base; }\n    &.chart                         { color:    @chart-color; }\n    &.meaning                       { color:    @grey-lighten-1; }\n    &.plugin                        { color:    @grey-lighten-2; }\n    &.more                          { color:    @gray-blue-base }\n    &.navigation                    { color:    @grey-lighten-3 }\n    &.api-deployer                  { color:    @api-deployer-color }\n    &.project-deployer              { color:    @project-deployer-color }\n}\n\n.universe-background    {\n    color:                          @white-base !important;\n    background:                     @teal-base;\n\n    &.home                          { background-color: @project-home-color; }\n    &.flow, &.recipe                { background-color: @flow-color; }\n    &.datasets, &.dataset           { background-color: @dataset-color; }\n    &.streaming-endpoint,\n    &.streaming_endpoint            { background-color: @streaming-endpoint-color; }\n    &.chart                         { background-color: @chart-color; }\n    &.managed-folder,\n    &.managed_folder                { background-color: @dataset-color; }\n    &.analysis                      { background-color: @analysis-color; }\n    &.notebooks,\n    &.notebook,\n    &.web_app,\n    &.report                        { background-color: @notebook-color; }\n    &.job, &.jobs, &.scenario       { background-color: @job-color; }\n    &.dashboard, &.insight          { background-color: @dashboard-color; }\n    &.discussion, &.metrics         { background-color: @grey-lighten-3; }\n    &.wiki, &.article               { background-color: @wiki-color; }\n    &.bundle                        { background-color: @bundle-color; }\n    &.recipe-visual                 { background-color: @visual-recipe-color; }\n    &.recipe-code                   { background-color: @code-recipe-color; }\n    &.recipe-continuous             { background-color: @streaming-endpoint-color; }\n    &.recipe-train,\n    &.recipe-score,\n    &.recipe-clustering,\n    &.recipe-evaluation,\n    &.recipe-standalone_evaluation,\n    &.saved-model,\n    &.saved_model                   { background-color: @ml-recipe-color; }\n    &.model-evaluation-store,\n    &.model_evaluation_store        { background-color: @ml-recipe-color; }\n    &.recipe-custom                 { background-color: @custom-recipe-color; }\n    &.recipe-custom-red             { background-color: @custom-recipe-color-red; }\n    &.recipe-custom-pink            { background-color: @custom-recipe-color-pink; }\n    &.recipe-custom-purple          { background-color: @custom-recipe-color-purple; }\n    &.recipe-custom-blue            { background-color: @custom-recipe-color-blue; }\n    &.recipe-custom-green           { background-color: @custom-recipe-color-green; }\n    &.recipe-custom-sky             { background-color: @custom-recipe-color-sky; }\n    &.recipe-custom-yellow          { background-color: @custom-recipe-color-yellow; }\n    &.recipe-custom-orange          { background-color: @custom-recipe-color-orange; }\n    &.recipe-custom-brown           { background-color: @custom-recipe-color-brown; }\n    &.recipe-custom-gray            { background-color: @custom-recipe-color-gray; }\n    &.shared-objects {\n        background-color: @yellow-base;\n        &.object-icon i.icon    {\n            color: @grey-base !important;\n        }\n    }\n    &.plugin                        { background-color: @grey-lighten-2; }\n    &.admin                         { background-color: @grey-lighten-2; }\n    &.catalog                       { background-color: @grey-lighten-2; }\n    &.inbox                         { background-color: @grey-lighten-2; }\n    &.meanings                      { background-color: @grey-lighten-2; }\n    &.api-deployer                  { background-color: @api-deployer-color; }\n    &.project-deployer              { background-color: @project-deployer-color; }\n    &.profile                       { background-color: @grey-lighten-2; }\n    &.alation                       { background-color: @grey-lighten-2; }\n}\n\n.universe-fill  {\n    color:                          @white-base !important;\n    &.home                          { fill:     @project-home-color; }\n    &.flow,\n    &.recipe                        { fill:     @flow-color; }\n    &.datasets,\n    &.dataset                       { fill:     @dataset-color; }\n    &.managed-folder,\n    &.managed_folder                { fill:     @dataset-color; }\n    &.analysis                      { fill:     @analysis-color; }\n    &.notebooks,\n    &.notebook                      { fill:     @notebook-color; }\n    &.job,\n    &.jobs,\n    &.scenario                      { fill:     @job-color; }\n    &.dashboard                     { fill:     @dashboard-color; }\n    &.project                       { fill:     @grey-base; }\n    &.column                        { fill:     @cyan-blue-base; }\n    &.discussions                   { color:    @bright-gray-base; }\n    &.metrics                       { fill:     @grey-lighten-3; }\n    &.wiki, &.article               { fill:     @wiki-color; }\n    &.recipe                        { fill:     @code-recipe-color; }\n    &.recipe-visual                 { fill:     @visual-recipe-color; }\n    &.recipe-custom                 { fill:     @custom-recipe-color; }\n    &.recipe-custom-red             { fill:     @custom-recipe-color-red; }\n    &.recipe-custom-pink            { fill:     @custom-recipe-color-pink; }\n    &.recipe-custom-purple          { fill:     @custom-recipe-color-purple; }\n    &.recipe-custom-blue            { fill:     @custom-recipe-color-blue; }\n    &.recipe-custom-green           { fill:     @custom-recipe-color-green; }\n    &.recipe-custom-sky             { fill:     @custom-recipe-color-sky; }\n    &.recipe-custom-yellow          { fill:     @custom-recipe-color-yellow; }\n    &.recipe-custom-orange          { fill:     @custom-recipe-color-orange; }\n    &.recipe-custom-brown           { fill:     @custom-recipe-color-brown; }\n    &.recipe-custom-gray            { fill:     @custom-recipe-color-gray; }\n    &.recipe-code                   { fill:     @code-recipe-color; }\n    &.recipe-train,\n    &.recipe-score,\n    &.recipe-clustering,\n    &.recipe-evaluation,\n    &.recipe-standalone_evaluation  { fill:     @ml-recipe-color; }\n    &.insight                       { fill:     @dashboard-color; }\n    &.saved-model,\n    &.saved_model                   { fill:     @saved-model-color; }\n    &.model-evaluation-store,\n    &.model_evaluation_store        { fill:     @model-evaluation-store-color; }\n    &.chart                         { fill:     @chart-color; }\n    &                               { fill:     @grey-lighten-3; }\n    &.meaning                       { fill:     @cyan-blue-base; }\n}\n\n.color-visual-recipe                { color:    @visual-recipe-color; }\n.color-code-recipe                  { color:    @code-recipe-color; }\n.color-ml-recipe                    { color:    @ml-recipe-color; }\n","/***** Dataiku Brand Color *****/\n/***** Universe color *****/\n/***** Primary action colors *****/\n/***** Greyscale *****/\n/***** Status colors *****/\n/******* Chart color *******/\n/******* Colors per object types *******/\n/******* Custom colors for plugin recipes *******/\n/******* Variables helpers *******/\n/****** Components *******/\n/* Dropdowns */\n/* Buttons */\n/* Alerts */\n/****** Class helpers *******/\n.text-important {\n  color: #222222;\n}\n.text-weak {\n  color: #666666;\n}\n.text-prompt {\n  color: #BBBBBB;\n}\n.text-active {\n  color: #31708F;\n}\n.text-disabled {\n  color: #CCCCCC;\n}\n.text-error {\n  color: #CE1228;\n}\n.text-success {\n  color: #4CAF50;\n}\n.text-warning {\n  color: #F28C37;\n}\n.text-primary {\n  color: #3B99FC;\n}\n.text-debug {\n  color: #999999;\n}\n.success-background {\n  background-color: #4CAF50;\n}\n.success-background--light {\n  background-color: #D7F0D6;\n}\n.info-background {\n  background-color: #31708F;\n}\n.info-background--light {\n  background-color: #D9E6ED;\n}\n.error-background {\n  background-color: #CE1228;\n}\n.error-background--light {\n  background-color: #F9E3E5;\n}\n.warning-background {\n  background-color: #F28C37;\n}\n.warning-background--light {\n  background-color: #FDE5CA;\n}\n.link-normal {\n  color: #2D86FB;\n}\n.link-hover {\n  color: #267CFB;\n}\n.link-visited {\n  color: #196BFA;\n}\n.border {\n  border-color: #CCCCCC;\n}\n.line-hover {\n  background-color: #F2F2F2;\n}\n.line-selected {\n  background-color: #E7F3FF;\n}\n.odd-line {\n  background-color: #F2F2F2;\n}\n.divider {\n  border-bottom: #DDDDDD;\n}\n.disabled {\n  color: #CCCCCC;\n}\n.page-background {\n  background-color: #FFFFFF;\n}\n.background {\n  background-color: #F2F2F2;\n}\n.chips {\n  color: #F2F2F2;\n}\n.universe-color.home {\n  color: #2AB1AC;\n}\n.universe-color.flow,\n.universe-color.recipe {\n  color: #F9BD38;\n}\n.universe-color.datasets,\n.universe-color.dataset {\n  color: #28A9DD;\n}\n.universe-color.streaming-endpoint,\n.universe-color.streaming_endpoint {\n  color: #3B7879;\n}\n.universe-color.managed-folder,\n.universe-color.managed_folder {\n  color: #28A9DD;\n}\n.universe-color.analysis {\n  color: #29AF5D;\n}\n.universe-color.notebooks,\n.universe-color.notebook,\n.universe-color.web_app,\n.universe-color.report {\n  color: #F28C38;\n}\n.universe-color.job,\n.universe-color.jobs,\n.universe-color.scenario {\n  color: #8541AA;\n}\n.universe-color.dashboard {\n  color: #F44336;\n}\n.universe-color.project {\n  color: #333333;\n}\n.universe-color.column {\n  color: #333333;\n}\n.universe-color.discussion {\n  color: #333333;\n}\n.universe-color.wiki,\n.universe-color.article {\n  color: #427B98;\n}\n.universe-color.bundle {\n  color: #54707E;\n}\n.universe-color.metrics {\n  color: #333333;\n}\n.universe-color.recipe {\n  color: #F28C38;\n}\n.universe-color.recipe-visual {\n  color: #F9BD38;\n}\n.universe-color.recipe-custom {\n  color: #AA4141;\n}\n.universe-color.recipe-custom-red {\n  color: #E13D3C;\n}\n.universe-color.recipe-custom-pink {\n  color: #E91E63;\n}\n.universe-color.recipe-custom-purple {\n  color: #8C2DA7;\n}\n.universe-color.recipe-custom-blue {\n  color: #31439C;\n}\n.universe-color.recipe-custom-green {\n  color: #0F786B;\n}\n.universe-color.recipe-custom-sky {\n  color: #00BCD4;\n}\n.universe-color.recipe-custom-yellow {\n  color: #CDDC39;\n}\n.universe-color.recipe-custom-orange {\n  color: #E44B27;\n}\n.universe-color.recipe-custom-brown {\n  color: #795548;\n}\n.universe-color.recipe-custom-gray {\n  color: #465A64;\n}\n.universe-color.recipe-code {\n  color: #F28C38;\n}\n.universe-color.recipe-continuous {\n  color: #3B7879;\n}\n.universe-color.recipe-train,\n.universe-color.recipe-score,\n.universe-color.recipe-clustering,\n.universe-color.recipe-evaluation,\n.universe-color.recipe-standalone,\n.universe-color.recipe-standalone_evaluation {\n  color: #29AF5D;\n}\n.universe-color.insight {\n  color: #F44336;\n}\n.universe-color.model-evaluation-store,\n.universe-color.model_evaluation_store {\n  color: #29AF5D;\n}\n.universe-color.saved-model,\n.universe-color.saved_model {\n  color: #29AF5D;\n}\n.universe-color.lambda-service {\n  color: #2AB1AC;\n}\n.universe-color.chart {\n  color: #3075AE;\n}\n.universe-color.meaning {\n  color: #333333;\n}\n.universe-color.plugin {\n  color: #444444;\n}\n.universe-color.more {\n  color: #54707E;\n}\n.universe-color.navigation {\n  color: #666666;\n}\n.universe-color.api-deployer {\n  color: #2AB1AC;\n}\n.universe-color.project-deployer {\n  color: #3F51B5;\n}\n.universe-background {\n  color: #FFFFFF !important;\n  background: #2AB1AC;\n}\n.universe-background.home {\n  background-color: #2AB1AC;\n}\n.universe-background.flow,\n.universe-background.recipe {\n  background-color: #F9BD38;\n}\n.universe-background.datasets,\n.universe-background.dataset {\n  background-color: #28A9DD;\n}\n.universe-background.streaming-endpoint,\n.universe-background.streaming_endpoint {\n  background-color: #3B7879;\n}\n.universe-background.chart {\n  background-color: #3075AE;\n}\n.universe-background.managed-folder,\n.universe-background.managed_folder {\n  background-color: #28A9DD;\n}\n.universe-background.analysis {\n  background-color: #29AF5D;\n}\n.universe-background.notebooks,\n.universe-background.notebook,\n.universe-background.web_app,\n.universe-background.report {\n  background-color: #F28C38;\n}\n.universe-background.job,\n.universe-background.jobs,\n.universe-background.scenario {\n  background-color: #8541AA;\n}\n.universe-background.dashboard,\n.universe-background.insight {\n  background-color: #F44336;\n}\n.universe-background.discussion,\n.universe-background.metrics {\n  background-color: #666666;\n}\n.universe-background.wiki,\n.universe-background.article {\n  background-color: #427B98;\n}\n.universe-background.bundle {\n  background-color: #54707E;\n}\n.universe-background.recipe-visual {\n  background-color: #F9BD38;\n}\n.universe-background.recipe-code {\n  background-color: #F28C38;\n}\n.universe-background.recipe-continuous {\n  background-color: #3B7879;\n}\n.universe-background.recipe-train,\n.universe-background.recipe-score,\n.universe-background.recipe-clustering,\n.universe-background.recipe-evaluation,\n.universe-background.recipe-standalone_evaluation,\n.universe-background.saved-model,\n.universe-background.saved_model {\n  background-color: #29AF5D;\n}\n.universe-background.model-evaluation-store,\n.universe-background.model_evaluation_store {\n  background-color: #29AF5D;\n}\n.universe-background.recipe-custom {\n  background-color: #AA4141;\n}\n.universe-background.recipe-custom-red {\n  background-color: #E13D3C;\n}\n.universe-background.recipe-custom-pink {\n  background-color: #E91E63;\n}\n.universe-background.recipe-custom-purple {\n  background-color: #8C2DA7;\n}\n.universe-background.recipe-custom-blue {\n  background-color: #31439C;\n}\n.universe-background.recipe-custom-green {\n  background-color: #0F786B;\n}\n.universe-background.recipe-custom-sky {\n  background-color: #00BCD4;\n}\n.universe-background.recipe-custom-yellow {\n  background-color: #CDDC39;\n}\n.universe-background.recipe-custom-orange {\n  background-color: #E44B27;\n}\n.universe-background.recipe-custom-brown {\n  background-color: #795548;\n}\n.universe-background.recipe-custom-gray {\n  background-color: #465A64;\n}\n.universe-background.shared-objects {\n  background-color: #F9BD38;\n}\n.universe-background.shared-objects.object-icon i.icon {\n  color: #222222 !important;\n}\n.universe-background.plugin {\n  background-color: #444444;\n}\n.universe-background.admin {\n  background-color: #444444;\n}\n.universe-background.catalog {\n  background-color: #444444;\n}\n.universe-background.inbox {\n  background-color: #444444;\n}\n.universe-background.meanings {\n  background-color: #444444;\n}\n.universe-background.api-deployer {\n  background-color: #2AB1AC;\n}\n.universe-background.project-deployer {\n  background-color: #3F51B5;\n}\n.universe-background.profile {\n  background-color: #444444;\n}\n.universe-background.alation {\n  background-color: #444444;\n}\n.universe-fill {\n  color: #FFFFFF !important;\n  fill: #666666;\n}\n.universe-fill.home {\n  fill: #2AB1AC;\n}\n.universe-fill.flow,\n.universe-fill.recipe {\n  fill: #F9BD38;\n}\n.universe-fill.datasets,\n.universe-fill.dataset {\n  fill: #28A9DD;\n}\n.universe-fill.managed-folder,\n.universe-fill.managed_folder {\n  fill: #28A9DD;\n}\n.universe-fill.analysis {\n  fill: #29AF5D;\n}\n.universe-fill.notebooks,\n.universe-fill.notebook {\n  fill: #F28C38;\n}\n.universe-fill.job,\n.universe-fill.jobs,\n.universe-fill.scenario {\n  fill: #8541AA;\n}\n.universe-fill.dashboard {\n  fill: #F44336;\n}\n.universe-fill.project {\n  fill: #222222;\n}\n.universe-fill.column {\n  fill: #28A9DD;\n}\n.universe-fill.discussions {\n  color: #434A54;\n}\n.universe-fill.metrics {\n  fill: #666666;\n}\n.universe-fill.wiki,\n.universe-fill.article {\n  fill: #427B98;\n}\n.universe-fill.recipe {\n  fill: #F28C38;\n}\n.universe-fill.recipe-visual {\n  fill: #F9BD38;\n}\n.universe-fill.recipe-custom {\n  fill: #AA4141;\n}\n.universe-fill.recipe-custom-red {\n  fill: #E13D3C;\n}\n.universe-fill.recipe-custom-pink {\n  fill: #E91E63;\n}\n.universe-fill.recipe-custom-purple {\n  fill: #8C2DA7;\n}\n.universe-fill.recipe-custom-blue {\n  fill: #31439C;\n}\n.universe-fill.recipe-custom-green {\n  fill: #0F786B;\n}\n.universe-fill.recipe-custom-sky {\n  fill: #00BCD4;\n}\n.universe-fill.recipe-custom-yellow {\n  fill: #CDDC39;\n}\n.universe-fill.recipe-custom-orange {\n  fill: #E44B27;\n}\n.universe-fill.recipe-custom-brown {\n  fill: #795548;\n}\n.universe-fill.recipe-custom-gray {\n  fill: #465A64;\n}\n.universe-fill.recipe-code {\n  fill: #F28C38;\n}\n.universe-fill.recipe-train,\n.universe-fill.recipe-score,\n.universe-fill.recipe-clustering,\n.universe-fill.recipe-evaluation,\n.universe-fill.recipe-standalone_evaluation {\n  fill: #29AF5D;\n}\n.universe-fill.insight {\n  fill: #F44336;\n}\n.universe-fill.saved-model,\n.universe-fill.saved_model {\n  fill: #29AF5D;\n}\n.universe-fill.model-evaluation-store,\n.universe-fill.model_evaluation_store {\n  fill: #29AF5D;\n}\n.universe-fill.chart {\n  fill: #3075AE;\n}\n.universe-fill.meaning {\n  fill: #28A9DD;\n}\n.color-visual-recipe {\n  color: #F9BD38;\n}\n.color-code-recipe {\n  color: #F28C38;\n}\n.color-ml-recipe {\n  color: #29AF5D;\n}\n.typo-extralarge {\n  font-family: 'SourceSansPro';\n  font-weight: 400;\n  font-size: 26px;\n  font-height: 36px;\n}\n.typo-large {\n  font-family: 'SourceSansPro';\n  font-weight: 400;\n  font-size: 22px;\n  font-height: 30px;\n}\n.typo-medium {\n  font-family: 'SourceSansPro';\n  font-weight: 600;\n  font-size: 18px;\n  font-height: 25px;\n}\n.typo-medium {\n  font-family: 'SourceSansPro';\n  font-weight: 600;\n  font-size: 16px;\n  font-height: 22px;\n}\n.mx-link-nodecoration:hover {\n  text-decoration: none;\n}\n.mx-link-nodecoration:focus {\n  outline: none;\n}\n.mx-textellipsis {\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n}\n.mat-option.mat-active {\n  background: rgba(34, 34, 34, 0.04);\n  color: rgba(34, 34, 34, 0.97);\n}\n.mat-autocomplete-panel {\n  background: #FFFFFF;\n  color: rgba(34, 34, 34, 0.97);\n  min-width: 112px;\n  overflow: auto;\n  -webkit-overflow-scrolling: touch;\n  visibility: hidden;\n  max-width: none;\n  max-height: 256px;\n  position: relative;\n  width: 100%;\n  border-bottom-left-radius: 4px;\n  border-bottom-right-radius: 4px;\n}\n.mx-capped-height {\n  max-height: calc(100vh - 60px);\n}\n.dku-modal-panel-wide .mat-dialog-container,\n.dku-modal-panel-narrow .mat-dialog-container,\n.dku-modal-panel-none .mat-dialog-container {\n  box-shadow: 4px 4px 10px rgba(34, 34, 34, 0.15);\n  padding: 0;\n  border-radius: 0;\n}\n.dku-modal-panel-wide .mat-dialog-container > * > *,\n.dku-modal-panel-narrow .mat-dialog-container > * > *,\n.dku-modal-panel-none .mat-dialog-container > * > * {\n  width: 100%;\n  box-sizing: border-box;\n  display: flex;\n  flex-direction: column;\n}\n.dku-modal-panel-wide .mat-dialog-container modal-header,\n.dku-modal-panel-narrow .mat-dialog-container modal-header,\n.dku-modal-panel-none .mat-dialog-container modal-header {\n  flex: 0 0 auto;\n}\n.dku-modal-panel-wide .mat-dialog-container .modal-body,\n.dku-modal-panel-narrow .mat-dialog-container .modal-body,\n.dku-modal-panel-none .mat-dialog-container .modal-body {\n  position: relative;\n  flex: 1 1 auto;\n  max-height: none;\n}\n.dku-modal-panel-wide .mat-dialog-container {\n  width: 900px;\n  max-height: calc(100vh - 60px);\n}\n.dku-modal-panel-narrow .mat-dialog-container {\n  width: 560px;\n  max-height: calc(100vh - 60px);\n}\n.dku-modal-panel-wide,\n.dku-modal-panel-narrow,\n.dku-modal-panel-none {\n  margin: auto;\n}\n.dku-modal-panel-wide .modal-header,\n.dku-modal-panel-narrow .modal-header,\n.dku-modal-panel-none .modal-header {\n  border-bottom: none;\n  padding: 0;\n  height: 70px;\n  position: relative;\n  background-color: #FFFFFF;\n}\n.dku-modal-panel-wide .modal-header.has-border,\n.dku-modal-panel-narrow .modal-header.has-border,\n.dku-modal-panel-none .modal-header.has-border {\n  border-bottom: 1px solid #CCCCCC;\n}\n.dku-modal-panel-wide .modal-header.no-totem .modal-title,\n.dku-modal-panel-narrow .modal-header.no-totem .modal-title,\n.dku-modal-panel-none .modal-header.no-totem .modal-title {\n  padding-left: 20px;\n}\n.dku-modal-panel-wide .modal-header .modal-totem,\n.dku-modal-panel-narrow .modal-header .modal-totem,\n.dku-modal-panel-none .modal-header .modal-totem {\n  position: absolute;\n  left: 20px;\n  top: 25px;\n  width: 18px;\n  height: 28px;\n  text-align: center;\n  vertical-align: middle;\n}\n.dku-modal-panel-wide .modal-header .modal-totem.modal-totem--action,\n.dku-modal-panel-narrow .modal-header .modal-totem.modal-totem--action,\n.dku-modal-panel-none .modal-header .modal-totem.modal-totem--action {\n  cursor: pointer;\n  padding: 0 6px 0 0;\n}\n.dku-modal-panel-wide .modal-header .modal-totem i,\n.dku-modal-panel-narrow .modal-header .modal-totem i,\n.dku-modal-panel-none .modal-header .modal-totem i {\n  line-height: 28px;\n  font-size: 18px;\n  text-align: center;\n  display: inline;\n  opacity: 0.6;\n}\n.dku-modal-panel-wide .modal-header .modal-totem i:before,\n.dku-modal-panel-narrow .modal-header .modal-totem i:before,\n.dku-modal-panel-none .modal-header .modal-totem i:before {\n  vertical-align: middle;\n}\n.dku-modal-panel-wide .modal-header .modal-title,\n.dku-modal-panel-narrow .modal-header .modal-title,\n.dku-modal-panel-none .modal-header .modal-title {\n  margin: 0;\n  padding: 25px 0 0 20px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  box-sizing: border-box;\n  font-family: 'SourceSansPro';\n  font-weight: lighter;\n  font-size: 22px;\n  line-height: initial;\n  color: #333333;\n}\n.dku-modal-panel-wide .modal-header .modal-title.has-icon,\n.dku-modal-panel-narrow .modal-header .modal-title.has-icon,\n.dku-modal-panel-none .modal-header .modal-title.has-icon {\n  padding-left: 55px;\n}\n.dku-modal-panel-wide .modal-header .modal-header-button,\n.dku-modal-panel-narrow .modal-header .modal-header-button,\n.dku-modal-panel-none .modal-header .modal-header-button {\n  float: right;\n  margin-top: 30px;\n  margin-right: 20px;\n  padding: 0;\n  border: 0;\n  cursor: pointer;\n  outline: none;\n  font-size: 20px;\n  font-weight: bold;\n  line-height: 10px;\n  height: 15px;\n  color: #BBBBBB;\n  text-decoration: none;\n}\n.dku-modal-panel-wide .modal-header .modal-header-button:hover,\n.dku-modal-panel-narrow .modal-header .modal-header-button:hover,\n.dku-modal-panel-none .modal-header .modal-header-button:hover {\n  color: #666666;\n  text-decoration: none;\n}\n.dku-modal-panel-wide .modal-header-only,\n.dku-modal-panel-narrow .modal-header-only,\n.dku-modal-panel-none .modal-header-only {\n  height: auto;\n  min-height: 70px;\n  margin-bottom: 20px;\n}\n.dku-modal-panel-wide .modal-header-only h4,\n.dku-modal-panel-narrow .modal-header-only h4,\n.dku-modal-panel-none .modal-header-only h4 {\n  overflow: auto;\n  text-overflow: inherit;\n  white-space: inherit;\n}\n.dku-modal-panel-wide .modal-header-only h4 strong,\n.dku-modal-panel-narrow .modal-header-only h4 strong,\n.dku-modal-panel-none .modal-header-only h4 strong {\n  font-weight: normal;\n}\n.dku-modal-panel-wide .modal-body,\n.dku-modal-panel-narrow .modal-body,\n.dku-modal-panel-none .modal-body {\n  padding: 16px;\n}\n.dku-modal-panel-wide .modal-body.tight-body,\n.dku-modal-panel-narrow .modal-body.tight-body,\n.dku-modal-panel-none .modal-body.tight-body {\n  padding-bottom: 0;\n}\n.dku-modal-panel-wide .modal-body.no-padding,\n.dku-modal-panel-narrow .modal-body.no-padding,\n.dku-modal-panel-none .modal-body.no-padding {\n  padding: 0;\n}\n.dku-modal-panel-wide .modal-body.no-h-padding,\n.dku-modal-panel-narrow .modal-body.no-h-padding,\n.dku-modal-panel-none .modal-body.no-h-padding {\n  padding-left: 0;\n  padding-right: 0;\n}\n.dku-modal-panel-wide .modal-body.no-v-padding,\n.dku-modal-panel-narrow .modal-body.no-v-padding,\n.dku-modal-panel-none .modal-body.no-v-padding {\n  padding-bottom: 0;\n  padding-top: 0;\n}\n.dku-modal-panel-wide .modal-body .modal-h-padding,\n.dku-modal-panel-narrow .modal-body .modal-h-padding,\n.dku-modal-panel-none .modal-body .modal-h-padding {\n  padding-left: 20px;\n  padding-right: 20px;\n}\n.dku-modal-panel-wide .modal-body--tabs,\n.dku-modal-panel-narrow .modal-body--tabs,\n.dku-modal-panel-none .modal-body--tabs {\n  padding: 0;\n  overflow: hidden;\n}\n.dku-modal-panel-wide .modal-body--tabs .mat-tab-body-wrapper,\n.dku-modal-panel-narrow .modal-body--tabs .mat-tab-body-wrapper,\n.dku-modal-panel-none .modal-body--tabs .mat-tab-body-wrapper {\n  padding: 0 24px;\n  height: 450px;\n}\n.dku-modal-panel-wide .modal-body--tabs .mat-tab-body-content,\n.dku-modal-panel-narrow .modal-body--tabs .mat-tab-body-content,\n.dku-modal-panel-none .modal-body--tabs .mat-tab-body-content {\n  overflow: hidden;\n}\n.dku-modal-panel-wide .fixed-height500,\n.dku-modal-panel-narrow .fixed-height500,\n.dku-modal-panel-none .fixed-height500 {\n  height: 500px;\n  max-height: 500px;\n  box-sizing: border-box;\n}\n.dku-modal-panel-wide .fixed-height250,\n.dku-modal-panel-narrow .fixed-height250,\n.dku-modal-panel-none .fixed-height250 {\n  height: 250px;\n  max-height: 250px;\n  box-sizing: border-box;\n}\n.dku-modal-panel-wide .modal-footer,\n.dku-modal-panel-narrow .modal-footer,\n.dku-modal-panel-none .modal-footer {\n  background-color: #FFFFFF;\n  height: 50px;\n  padding: 7px 10px 8px 0;\n  line-height: 34px;\n  box-sizing: border-box;\n  border-top: none;\n}\n.dku-modal-panel-wide .modal-footer.has-border,\n.dku-modal-panel-narrow .modal-footer.has-border,\n.dku-modal-panel-none .modal-footer.has-border {\n  border-top: 1px solid #CCCCCC;\n}\n.modal-footer-std-buttons {\n  font-size: 0;\n}\n.modal-footer-std-buttons .btn {\n  font-size: 15px;\n  padding: 2px 10px;\n  margin-left: 10px;\n}\n.modal-footer-std-buttons .btn-default {\n  color: #666666;\n  background-color: #FFFFFF;\n}\n.modal-footer-std-buttons .btn-default:hover {\n  color: #FFFFFF;\n  background-color: #666666;\n}\n.modal-footer-std-buttons .btn-default:active {\n  background: #333333;\n  color: #FFFFFF;\n}\n.modal-footer-std-buttons .btn-primary {\n  color: #3B99FC;\n  background: #FFFFFF;\n}\n.modal-footer-std-buttons .btn-primary:focus {\n  color: #3B99FC;\n  background: #FFFFFF;\n}\n.modal-footer-std-buttons .btn-primary:hover {\n  color: #FFFFFF;\n  background: #58A8FC;\n}\n.modal-footer-std-buttons .btn-primary:active {\n  background: #3591FC;\n  color: #FFFFFF;\n}\n.modal-footer-std-buttons .btn-primary:disabled {\n  background: #FFFFFF;\n  color: #9DCCFE;\n}\n.modal-footer-std-buttons .btn-primary.light-style {\n  border: 1px #3B99FC solid;\n}\n.modal-footer-std-buttons .btn-primary.light-style:focus {\n  color: #3B99FC;\n  background: #FFFFFF;\n}\n.modal-footer-std-buttons .btn-primary.light-style:hover {\n  color: #FFFFFF;\n  background: #58A8FC;\n}\n.modal-footer-std-buttons .btn-primary.light-style:active {\n  background: #3591FC;\n  color: #FFFFFF;\n}\n.modal-footer-std-buttons .btn-primary.light-style:disabled {\n  background: #FFFFFF;\n  color: #F0F8E8;\n}\n.modal-footer-std-buttons .btn-danger {\n  background: #FFFFFF;\n  color: #CE1228;\n}\n.modal-footer-std-buttons .btn-danger:hover {\n  color: #FFFFFF;\n  background: #D53648;\n}\n.modal-footer-std-buttons .btn-danger:active,\n.modal-footer-std-buttons .btn-danger:focus {\n  background: #C91024;\n  color: #FFFFFF;\n}\n.modal-footer-std-buttons .btn-danger:disabled {\n  background: #FFFFFF;\n  color: #F9E3E5;\n  opacity: 0.3;\n}\n.modal-footer-std-buttons .btn-teal {\n  background: #FFFFFF;\n  color: #2AB1AC;\n}\n.modal-footer-std-buttons .btn-teal:hover {\n  color: #FFFFFF;\n  background: rgba(42, 177, 172, 0.6);\n}\n.modal-footer-std-buttons .btn-teal:active,\n.modal-footer-std-buttons .btn-teal:focus {\n  color: #FFFFFF;\n  background: rgba(42, 177, 172, 0.9);\n}\n.cdk-overlay-container.see-through ul.modal-tabs,\n.cdk-overlay-container.see-through div.project-tiles {\n  transition: visibility 0s;\n  visibility: hidden;\n}\n.cdk-overlay-container.see-through .mat-dialog-container,\n.cdk-overlay-container.see-through .modal-header-button,\n.cdk-overlay-container.see-through .modal {\n  transition: background-color 0.5s;\n  transition-delay: 0.25s;\n  background-color: transparent;\n}\n.cdk-overlay-container.see-through div.modal-body,\n.cdk-overlay-container.see-through div.modal-footer {\n  transition: visibility 0s;\n  transition-delay: 0.25s;\n  visibility: hidden;\n}\n.cdk-overlay-container.see-through div.modal-header {\n  transition: opacity 0.5s;\n  opacity: 0.5;\n}\n.cdk-overlay-container.see-through .see-through-button {\n  color: #222222;\n  opacity: 1;\n}\ndiv.popover.see-through {\n  transition: visibility 0s;\n  transition-delay: 0.25s;\n  visibility: hidden;\n}\n/**\n * The IO modal is split in two halves with a \"Input -> Output\" header\n */\n.io-modal {\n  font-weight: normal;\n  letter-spacing: 0px;\n}\n.io-modal .modal-body {\n  padding: 0px;\n}\n.io-modal .modal-body .half-pane.half-pane {\n  height: 100%;\n  width: 50%;\n  box-sizing: border-box;\n  float: left;\n}\n.io-modal .modal-body .half-pane.half-pane:first-child {\n  border-right: 1px solid #CCCCCC;\n  padding-right: 0px;\n}\n.io-modal .modal-body .half-pane.half-pane:last-child {\n  padding-left: 0px;\n}\n.io-modal .modal-body .half-pane.half-pane h4 {\n  font-family: 'SourceSansPro';\n  font-weight: lighter;\n  font-size: 19px;\n  margin: 0px;\n}\n.io-modal .modal-body .half-pane.half-pane h4 i:after {\n  content: \"   \";\n}\n.io-modal .modal-body .half-pane.half-pane .header-text {\n  border-bottom: 1px solid #CCCCCC;\n  line-height: 45px;\n  color: #666666;\n  text-align: center;\n}\n",".mx-typo(@size, @height, @weight) {\n    font-family : 'SourceSansPro';\n    font-weight: @weight;\n    font-size: @size;\n    font-height: @height;\n}\n\n.typo-extralarge {\n    .mx-typo(26px, 36px, 400);\n}\n.typo-large {\n    .mx-typo(22px, 30px, 400);\n}\n.typo-medium {\n    .mx-typo(18px, 25px, 600);\n}\n.typo-medium {\n    .mx-typo(16px, 22px, 600);\n}\n\n.mx-link-nodecoration {\n    &:hover {\n        text-decoration: none;\n    }\n    &:focus {\n        outline: none;\n    }\n}\n\n//old\n.mx-ssp(@size, @weight) {\n    font-family : 'SourceSansPro';\n    font-weight: @weight;\n    font-size: @size;\n}\n.mx-textellipsis {\n    overflow: hidden;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n}","/***** Dataiku Brand Color *****/\n/***** Universe color *****/\n/***** Primary action colors *****/\n/***** Greyscale *****/\n/***** Status colors *****/\n/******* Chart color *******/\n/******* Colors per object types *******/\n/******* Custom colors for plugin recipes *******/\n/******* Variables helpers *******/\n/****** Components *******/\n/* Dropdowns */\n/* Buttons */\n/* Alerts */\n.unavailable-result {\n  height: 100%;\n  width: 100%;\n  background-image: repeating-linear-gradient(-45deg, #F2F2F2 0px, #F2F2F2 5px, #DDDDDD 6px, #DDDDDD 11px);\n  opacity: 0.6;\n}\n"],"sourceRoot":"webpack:///"}